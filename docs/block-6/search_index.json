[["diff-eq-intro.html", "Chapter 47 Differential equations 47.1 The language for change 47.2 State 47.3 Dynamics 47.4 State space and flow field 47.5 Exercises", " Chapter 47 Differential equations 47.1 The language for change Calculus is the dominant mathematical mode of describing change. Developed initially in the 1600s as a means of relating planetary motion to the force of gravity felt on Earth, it nonetheless remained the way of describing heat, sound, and electromagnetism in the 1800s. It the 1900s, calculus was turned to representing the basic mechanisms of quantum mechanics. The beginning student may see calculus as consisting of manipulations and transformations (e.g. differentiation and integration). The first stages of learning calculus consists of applying such manipulations and transformations to textbook exercises. To use these observations productively in solving real-world problems, you need to have a way of describing the world and the mechanisms of the world in terms of calculus. For this, you need to start seeing calculus as a language for description. We’ll use four concepts of language in describing calculus: nouns, verbs, clauses, and sentences. A calculus noun is an object such as a function, scalar, vector, or matrix. A calculus verb is an operation such as differentiation and accumulation. Other verbs come from arithmetic and algebra: square roots, addition, multiplication, and so on. A calculus clause is the application of a verb to one or more nouns to produce a new noun. For instance, if the original noun is the function \\(x(t)\\) representing the position of an object in time, then the application of the verb \\(\\partial_t\\) to the function is a new function \\(\\partial_t\\, x(t)\\), which we interpret as velocity. A calculus sentence is an equation: a statement of the equivalence of two nouns. Natural languages such as English or Chinese are much more complicated. Calculus involves sentences such as “The color of John’s bike is blue,” where “is” stands for equality: \\[\\underbrace{\\text{The color of John&#39;s bike}}_{\\text{noun}}\\ \\underbrace{\\text{is}}_{=}\\ \\underbrace{\\text{blue.}}_{\\text{noun}}\\] In both calculus and natural languages, such sentences allow us to draw conclusions that may be useful or informative. For instance, combined with the sentence, “The bike I see is red,” a conclusion might be, “The bike I see is not John’s.” Early calculus sentences were often about positions, velocities, forces, and accelerations, for instance \\[F_\\text{air} = \\alpha v^2\\] which is a simple model of the force due to air resistance. In this Block, we’ll use the language of calculus to represent dynamics, situations of motion, growth, decay, and oscillation. This Chapter introduces some of the nouns involved. 47.2 State Here are a few of the situations we will construct calculus-language descriptions of: physics swing of a pendulum bobbing of a mass hanging from a string. a rocket shooting up from the launch pad commerce investment growth growth in equity in a house as a mortgage is paid up. (“Equity” is the amount of the value of the house that belongs to you.) biology growth of animal populations, including predator and prey. growth of a tumor growth of an organism or a crop. A model describing such situation has a basic component called the dynamical state, as in “the state of affairs,” or “his mental state,” or “the state of their finances.” One of the things you learn when you study a field such as physics or epidemiology or engineering is what constitutes a useful description of the dynamical state for different situations. As an example, consider the rather simple physical system of a pendulum. A pendulum, as you know, consists of a mass hanging from a rod or rope pivoting to another object such as the ceiling. In physics, you learn the essential elements of the pendulum system: the length of the rod, the gravitational acceleration. These aspects of the system are fixed, they don’t change in time. Although such characteristics may be important in describing the system, they are not elements of the dynamical state. The dynamical state consists of the aspects of the system that are changing in time, seen instantaneously. For instance, the angle that the pendulum makes from the vertical changes in time. Such changing aspects, seen at each instant of time, constitute the dynamical state. We say, for example, that angle-from-the-vertical is a state variable and that the state at any instant is the angle at that instant.. In a physics class, you learn that angle is not a complete description of state. You need also to know the velocity of the pendulum, described for instance as the velocity of the mass at the end of the pendulum. To be complete, the dynamical state of a system has to include all those changing aspects of the system that allow you to calculate from the state at this instant what the state will be at the next instant. For example, from the angle of the pendulum at an instant it’s not possible so say what the angle will be at the next instant. You need to know which way the pendulum is swinging and how fast. And you also need to know the relevant fixed aspects of the system, such as the length of the pendulum.1 Figuring out what constitutes the dynamical state requires knowledge of the mechanics of the system, e.g. the action of gravity, the constraint imposed by the pivot of the pendulum. You get that knowledge by studying the relevant field: electrical engineering, economics, epidemiology, etc. You also learn what aspects of the system change slowly enough that they can be considered fixed. But there are a few things we can say mathematically about states that provide a valuable clue about the state of any continuous-time system. If the change is monotonic, the state can consist of just a single element. If the change is non-monotonic, that is, oscillates back and forth, the state must have two or more elements. If the change is irregular, the state must have at least three elements. In this book, we will work almost exclusively with systems that have a one- or two-dimensional state. The methods you learn will be broadly applicable to systems with higher-dimensional state. One of the ways in which calculus is the language of change can be seen in the words used in this section. For instance, instantaneous, continuous-time, and monotonic are all words introduced in Block 1 of this book. What does it take to describe the dynamical state of an epidemic? News reports of the COVID pandemic usually focus on the number of new cases each day and the fraction of the population that has been vaccinated. But this is not adequate, even for a simple description of the dynamics. From a history of new-case counts over time (e.g. Figure 47.1) you can see that the number of new cases waxes and wanes. Knowing that the number of cases today is, say, 100 thousand doesn’t tell you what the number of cases will be in two weeks: 100 thousand is encountered both on the way up and on the way down. Figure 47.1: COVID-19 new-case counts in the US over the first two years of the pandemic. Source: [New York Times] 47.3 Dynamics The dynamics of a system is a description of how the individual components of the state change as a function of the entire set of components of the state. At any instant in time, the state is a set of quantities. We’ll use \\(x\\), \\(y\\), and \\(z\\) for the purpose of illustration, although most of our work in this introduction will be with systems that have just two state variables. The state can change in time. This implies that the evolving state as a function of time is a set of functions: \\(x(t)\\), \\(y(t)\\), and \\(z(t)\\) for our illustration. Sometimes these are called state variables because they vary in time. The dynamics of the system are described by another set of functions, one for each state variable. These functions—let’s call them \\(g_x()\\), \\(g_y()\\), and \\(g_z()\\) in our illustration—each take as inputs the value of the state variables. Thus, we have: \\[g_x(x, y, z)\\ \\ \\ \\ g_y(x, y, z)\\ \\ \\ \\ g_z(x, y, z)\\ .\\] We’ll call these dynamical functions, but they are perfectly ordinary functions. The term “dynamical function” is simply a way of reminding us the role they play in the mathematical description of the dynamics. Remember that \\(x\\), \\(y\\), and \\(z\\) are state variables, so they are all functions of time. At any instant in time, the values \\(x\\), \\(y\\), \\(z\\) have a specific value. Thus, at any instant in time, the functions \\(g_x(x, y, z)\\), \\(g_y(x, y, z)\\), and \\(g_z(x, y, z)\\) also have a specific, scalar value. If we wanted to make this perfectly explicit, we could write \\(g_x(x(t), y(t), z(t))\\), which makes it clear that the output of \\(g_x()\\) is a function of time. The framework for a dynamics model is that the rate of change in time of each state variable is specified by the corresponding dynamical function. Of course, we write the “rate of change in time” as \\(\\partial_t\\), so the rate of change of \\(x\\) is \\(\\partial_t x(t)\\), and similarly for the other state variables. The way to write mathematically that “the rate of change of \\(x(t)\\) is given by the appropriate dynamical function” is a set of equations: \\[\\partial_t x(t) = g_x(x(t), y(t), z(t))\\ \\, \\\\ \\partial_t y(t) = g_y(x(t), y(t), z(t))\\ \\, \\\\ \\partial_t z(t) = g_z(x(t), y(t), z(t))\\ .\\] This is practically impossible to read: all those \\((t)\\). So the convention is to omit the \\((t)\\): \\[\\partial_t x = g_x(x, y, z)\\\\ \\partial_t y = g_y(x, y, z)\\\\ \\partial_t z = g_z(x, y, z)\\] and leave it to the reader to remember that \\(x\\) is really \\(x(t)\\) and so on. Such equations are called differential equations. The dynamical functions \\(g_x()\\), \\(g_y()\\) and \\(g_z()\\) on the right-hand side of the equations represent the dynamics of the system. These functions will be different depending on what we are trying to model. The art of modeling a system that evolves in time is to find the right form for the dynamical functions. ::: {.takenote data-latex} Mathematically, a dynamical system consists of two things: The state variables, which is a set of quantities that vary in time. They dynamics, which is the set of dynamical functions, one function for each of the state variables. ::: A simple example is the dynamics of retirement-account interest. In a retirement account, you put aside money—this is called “contributing”—each month. The value \\(V(t)\\) of the account accumulates over time, both due to new monthly deposits and to the interest \\(r\\) earned on the current account value. If you are setting aside \\(M\\) dollars per month, the dynamics are: \\[\\partial_t V = r V + M\\ .\\] The left-hand side of this equation is boiler plate; there is a single state variable named \\(V\\) and we are describing how \\(V\\) varies with time, that is, we are describing \\(\\partial_t V\\). The description itself is on the right side of the equation. The description take the form of a dynamical function, which we could call \\(g(V)\\equiv rV + M\\). The dynamical function always takes the set of state variables as inputs. In this example, there’s just the one state variable \\(V\\), so \\(g_V()\\) has only one argument: \\(V\\). Of course, there can also be parameters in a dynamical function, like \\(r\\) and \\(M\\) here. For the sake of simplicity, we can imagine that the interest rate and monthly contribution are constants: they are not part of the dynamical state. This leaves \\(V\\) at any given time as the state variable. The dynamics tell the rate of change in the state variable, \\(\\partial_t V(t)\\) as a function of the current value \\(V(t)\\) of the state variable. The above differential equation, having just one component to the state, is sometimes called a first-order differential equation. Remember that the dynamical function is something that the modeler constructs from her knowledge of the system. A modeler might decide to incorporate more or fewer details of the real-world system. For instance, a model more faithful to what happens over the course of years of saving for retirement might include the monthly contribution \\(M(t)\\) changing with time. (If your income changes over the years, your contribution will likely change along with it.) Similarly, interest rates are notoriously variable over time. Still, these are not included in the dynamical state There’s a simple reason: we don’t have usually have any model describing how \\(r(t)\\) and \\(M(t)\\) change as a function of the state. That is, we can’t say how \\(r(t)\\) changes as a function of \\(V(t)\\), \\(r(t)\\), and \\(M(t)\\). Quantities such as interest rate and contribution amount are said to be exogenous meaning “outside the system.” (The word comes from the root “exo,” meaning “outside,” and “indigenous,” meaning “native to.”) Your retirement account doesn’t determine the interest rate; interest rate is something (from your perspective) that comes from outside, largely uncontrollable factors. Another example, found in physics textbooks, is the dynamics of the pendulum. In studying physics, you learn how to identify and keep track of the forces involved. Without getting involved much with the physics, we note that the oscillatory nature of pendulum movement means that there must be at least two state variables. We’ll take these to be the angle \\(\\theta(t)\\) of the rod with respect to the vertical, and the angular velocity \\(v_\\theta(t)\\) telling how the velocity changes with time. Since there are two state variables, there must be two dynamical functions. For a pendulum, these functions can be developed from the general rule \\(F = m a\\) and the geometry of the pendulum; they are \\(\\partial_t v_\\theta(t)\\). They are: \\[\\partial_t \\theta(t) = g_\\theta(\\theta, v_\\theta) = v_\\theta\\\\ \\partial_t v_\\theta(t) = g_{v_\\theta}(\\theta, v_\\theta) = - \\sin(\\theta) \\] Why did you bother to define a state variable \\(v_\\theta\\) when it is, by definition, exactly the same as \\(\\partial_t \\theta(t)\\)? Even though the dynamical equation \\(\\partial_t \\theta(t) = v_\\theta\\) is a calculus tautology, we need always to be explicit about what are the two quantities in the dynamical state. The first of the two dynamical equations comes for free from basic calculus concepts. The second equation, however, is about the physics, the relationship between forces and acceleration. There is a style of writing dynamics equations that discards such tautologies. For example, the pendulum dynamics are often written \\[\\partial_{tt} \\theta(t) = - \\sin(\\theta)\\ .\\] This sort of equation, containing a second-order derivative, is called a second-order differential equation. It’s exactly equivalent to the pair of first order equations, one for \\(\\partial_t \\theta(t)\\) and one for \\(\\partial v_\\theta(t)\\). We’ll return to this style in Chapter 54. We are avoiding this style because it obscures the fact that there are two state variables: \\(\\theta(t)\\) and \\(v_\\theta(t)\\), Example 47.1 \\(\\ \\) Consider the population of two interacting species, say rabbits and foxes. As you know, the relationship between rabbits and foxes is rather unhappy from the rabbits’ point of view even if it is fulfilling for the foxes. Many people assume that such populations are more or less fixed: that the rabbits are in a steady balance with the foxes. In fact, as any gardener can tell you, some years there are lots of rabbits and others not: an oscillation. Just from this fact, we know that the dynamical state must have at least two components. In a simple, but informative, model, the two components of the dynamical state are \\(r(t)\\) and \\(f(t)\\), the population of rabbits and foxes respectively. In the absence of foxes, the dynamics of rabbits are exponential growth; each successive generation is larger than the previous one. This can be described by a dynamical equation \\(\\partial_t r(t) = \\alpha r(t)\\), where \\(\\alpha\\) is a fixed quantity that describes rabbit fecundity. Similarly, in the absence of food (rabbits are fox food), the foxes will starve or emigrate, so the dynamical equation for foxes is very similar \\(\\partial_t f(t) = - \\gamma f(t)\\), where \\(\\gamma\\) is a fixed quantity that indicates the rate at which foxes die or emigrate. Of course, in real ecosystems there are many other quantities that change and that are relevant. For instance, foxes eat not only rabbits, but birds and frogs and earthworms and berries. And the diet of rabbits eat weeds and grass (which is generally in plentiful supply), but also the gardener’s flowers and carrots (and other vegetables). Growth in the rabbit population leads to decrease in available flowers and vegetables, which in turn leads to slower growth (or even population decline) for rabbits. In the spirit of illustrating dynamics, we’ll leave out these important complexities and imagine that the state consists of just two numbers: how many rabbits there are and how many foxes. The dynamics therefore involve two equations, one for \\(\\partial_t r\\) and one for \\(\\partial_t f\\), usually written: \\[\\partial_t r = \\alpha\\, r - \\beta\\, f r\\\\ \\partial_t f = \\delta\\, r f - \\gamma\\, f\\] Keep in mind that \\(r\\) is a function of time, as is \\(f\\). But instead of writing them as \\(r(t)\\) and \\(f(t)\\), we use the shorthand \\(r\\) and \\(f\\). How are you supposed to know that \\(f\\) stands for a function of time but \\(\\beta\\) and \\(\\gamma\\) are constant parameters? The clue is given by the left-hand sides of the differential equations, \\(\\partial_t r\\) and \\(\\partial_t f\\). If we are taking the derivative of \\(f\\) with respect to \\(t\\), it must be that \\(f\\) is a function of \\(t\\). That there is no differential equation involving \\(\\partial_t \\beta\\) is the way we know that \\(\\beta\\) isn’t part of the dynamical state. The quantities \\(\\alpha\\), \\(\\beta\\), \\(\\gamma\\), and \\(\\delta\\) are parameters quantify the biology of the system: the reproduction rate of rabbits, the need of foxes for food (rabbits) in order to reproduce, the hunting success of foxes, and the death or emigration of foxes in response to a shortage of food. Coming up with this description of dynamics requires knowing something about rabbits and foxes. The particular forms used, for instance the interaction term \\(r f\\), coming from modeling experience. When we write such dynamics here, the point is to illustrate some of the forms commonly used to represent real-world phenomena. For instance, the interaction term is well named because it is about the literal, biological interaction of foxes and rabbits, for better (\\(+ \\delta r(t) f(t)\\)) or for worse (\\(-\\gamma r(t) f(t)\\)) depending on which species we are looking at. 47.4 State space and flow field A helpful representation of dynamics for the purpose of developing intuition is to represent the instantaneous state as a point in a graphical frame and the dynamics as a field of vectors showing how, for each possible state, the state changes. For instance, in the Rabbit-Fox dynamics, the state is the pair \\((r, f)\\) and the state space is the coordinate plane spanned by \\(r\\) and \\(f\\). The present state of the system might be any point in the state space. But if we know the present state, the dynamical functions evaluated at the present state tell us how the state changes over a small increment in time. The step over a small increment of time can be represented by a vector. Let’s illustrate with the Rabbit-Fox system, whose dynamical equations are given above. The dynamical functions take a position in state space as input. Each of the functions returns a scalar. To make a plot, we need numerical values for all the parameters in those equations. The vector field corresponding to the dynamics is called a flow, as if it were a pool of swirling water. Figure 47.2 shows the flow of the rabbit/fox system. Figure 47.2: The dynamics of the rabbit/fox system shown as a vector field over the state space. The parameters have been set, for the purpose of illustration, to \\(\\alpha = 2/3\\), \\(\\beta = 4/3\\), \\(\\gamma = 1\\), and \\(\\delta = 1\\). Staying with the analogy to a pool of swirling water or the currents in a river, you can place a lightweight marker such as a leaf at some point in the flow and follow its path over time. This path—position in state space as a function of time—is called the trajectory of the flow. There are many possible trajectories, depending on where you place the leaf. In Chapter 33 we considered the path followed by a robot arm. In that chapter, we separated out the \\(x\\)- and \\(y\\)-components of the arm’s position over time, calling them functions \\(x(t)\\) and \\(y(t)\\). Analogously, the the decomposition of a trajectory from an initial condition in the flow—this would be \\(r(t)\\) and \\(f(t)\\) for the rabbit/fox system—gives us the solution to the differential equation. Each component of the solution is called a time series and is often plotted as a function of time, for instance \\(r(t)\\) versus \\(t\\). From the flow field, you can approximate the trajectory that will be followed from any initial condition. Starting from the initial condition, just follow the flow. You already have some practice following a flow from your study of the gradient ascent method of optimization described in Chapter 23. At the argmax, the gradient is nil. Thus, the gradient ascent method stops at the argmax. We’ll see an analogous behavior in dynamical systems: any place where the flow is nil is a potential resting point for the state, called a fixed point. Example 47.2 \\(\\ \\) Let’s return to the pendulum and examine its flow field. We’ll modify the equations just a little bit to include air resistance in the model. Air resistance is a force, so we know it will appear in the \\(\\partial_t v_\\theta(t)\\) equation. A common model for air resistance has it proportional in size to the square of the velocity and with a direction that is the opposite of the velocity. In a differential equation, the model of air resistance can be written as \\(- \\alpha\\, L\\, \\text{sign}(v(t))\\ v(t)^2\\), where \\(\\text{sign}()\\) is a piecewise function that has the value \\(+1\\) when the argument is positive and \\(-1\\) when the argument is negative. \\(L\\) is the length of the pendulum. \\[\\partial_t \\theta = v_\\theta\\\\ \\partial_t v_\\theta = - \\sin(\\theta) - \\alpha\\,L\\, \\text{sign}(v)\\ v^2\\] Note that we’ve dropped the \\((t)\\) in \\(\\theta(t)\\) and in \\(v_\\theta(t)\\). Whenever you have a state variable, you know that it’s a function of time and so the explicit \\((t)\\) is often omitted for the sake of conciseness. Figure 47.3 shows the flow field of the pendulum. Also shown is a trajectory and the two time series corresponding to that trajectory. Figure 47.3: The flow field of a pendulum with air resistance. From the initial condition (marked by \\(\\color{red}{\\text{x}}\\)), a trajectory is sketched out for \\(0 \\leq t \\leq 20\\). The individual components of that trajectory are graphed as time series. The pendulum was started out by lifting it to an angle of \\(45^\\circ\\) and giving it an initial upward velocity. The bob swings up for a bit before being reversed by gravity and swinging toward \\(\\theta = 0\\) and beyond. Due to air resistance, the amplitude of swinging decreases over time. 47.5 Exercises Exercise XX.XX: DtLAhm Question A If today is \\(n\\), what is the day after tomorrow?     \\(n-1\\)︎✘ \\(n-1\\) is yesterday.       \\(n\\)︎✘ \\(n\\) is today.       \\(n+1\\)︎✘ \\(n+1\\) is tomorrow.       \\(n+2\\)\\(\\heartsuit\\ \\)       \\(n=3\\)︎✘ Question B If today is \\(n\\), what is the day one week from now?     \\(7n\\)︎✘        \\(n + 1 week\\)︎✘ Although \\(n\\) stands for “today”, \\(n\\) is a pure number.       \\(n+7\\)\\(\\heartsuit\\ \\) Question C If today is \\(n\\), what is the day one week ago?     \\(-7 n\\)︎✘        \\(n - 1\\) week︎✘ Although \\(n\\) stands for “today”, \\(n\\) is a pure number.       \\(n-7\\)\\(\\heartsuit\\ \\) Question D Given \\({\\mathbf S}_{n+1} = g({\\mathbf S}_n)\\), what is \\({\\mathbf S}_{n+3}\\) ? \\(g(g(g({\\mathbf S}_n)))\\)Right!  \\(3 g({\\mathbf S}_n)\\)︎✘ \\(3 g({\\mathbf S}_n)\\) is “three times \\({\\mathbf S}_{n+1}\\)”, not \\({\\mathbf S}_{n+3}\\). \\(g({\\mathbf S}_n)^3\\)︎✘ \\(g({\\mathbf S}_n) + 2 {\\mathbf S}_{n}\\)︎✘ Question E Given \\({\\mathbf S}_{n+1} = g({\\mathbf S}_n)\\), which of these is not \\({\\mathbf S}_{n+1}\\) ? \\(g(g(g({\\mathbf S}_{n-2})))\\)︎✘ \\(g({\\mathbf S}_{n-1})\\)Excellent! This is \\({\\mathbf S}_{n}\\). \\(g(g({\\mathbf S}_{n-1}))\\)︎✘ \\(g(g(g(g(g(g(g(g({\\mathbf S}_{n-7}))))))))\\)︎✘ These 8 applications of \\(g()\\) will take \\({\\mathbf S}_{n-7}\\) up to \\({\\mathbf S}_{n+1}\\) Exercise XX.XX: mJRDLy Question A Given the system \\({\\mathbf S}_{n+1} = g( {\\mathbf S}_n)\\) with \\(g(S) \\equiv 5 + S/2\\), which of these is a trajectory of the system? {16, 13, 11.5, 10.75, 10.375, 10.1875, 10.09375}Nice!  {16, 8, 4, 2, 1}︎✘ {5, 7.5, 10, 12.5, 15}︎✘ {0, 5, 10, 15, 20, 25}︎✘ Question B Given the system \\({\\mathbf S}_{n+1} = g( {\\mathbf S}_n)\\) with \\(g(S) \\equiv 5 + S/2\\), which of these is NOT a trajectory of the system? {0, 5, 7.5, 8.75, 9.375, 9.6875, 9.84375, 9.921875, 9.9609375, 9.98046875, 9.990234375}︎✘ {1, 5.5, 7.75, 8.875, 9.4375, 9.71875, 9.859375, 9.9296875, 9.96484375, 9.982421875, 9.9912109375}︎✘ {-4, 3, 6.5, 8.25, 9.125, 9.5625, 9.78125, 9.890625, 9.9453125, 9.97265625, 9.986328125}︎✘ {10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10}︎✘ {4, 7, 10, 13}Correct.  Exercise XX.XX: DzIhgb Question A Use the sandbox above to construct 50 steps of the dynamics of \\(g(x) \\equiv -0.8 x + 2\\) starting at \\(x_0 = 10\\). Which of these best describes the graph \\(x_n\\) versus \\(n\\)? (Hint: It’s always best to try to figure out the command on your own. If you get stuck, press the ‘Solution’ button in the sandbox.) A steady exponential decay to about \\(x=3\\).︎✘ An oscillating exponential growth.︎✘ An oscillating exponential decay to about \\(x=1.1\\).Correct.  A sine wave with period \\(P=\\pi\\).︎✘ Exercise XX.XX: 9mSE8t Question A For the arithmetic sequence with \\(x_0 = 2\\) and \\(b=3\\), what is the numerical value \\(x_{100}\\)?     203︎✘        230︎✘        302\\(\\heartsuit\\ \\)       320︎✘        Not enough information given.︎✘ Question B For the geometric sequence with \\(x_0 = 2\\) and \\(\\alpha = \\frac{1}{2}\\), what is the numerical value \\(x_{10}\\)? 1/1028︎✘ 1/512Nice! \\(2 \\times \\frac{1}{2}^{10} = 2 / 1024 = 1/512\\) 512︎✘ 1028︎✘ Not enough information given.︎✘ Question C For the affine sequence with \\(x_0 = 2\\) and \\(\\alpha = \\frac{1}{2}\\) and \\(b=10\\), what is the numerical value of \\(x_{100}\\)? (These answers are shown to only one decimal point.) Hint: What is \\(\\alpha^{100}\\)?     20.0\\(\\heartsuit\\ \\)       -20.0︎✘        \\((1/2)^{100}\\)︎✘        0.0︎✘ Exercise XX.XX: FUIt1Q A debit card is a way to make withdrawals from a bank account. Funds in the account earn interest. In the economic environment of 2021, the interest rate is practically zero. But to make it possible to see the growth on a graph, we will stipulate it to be 4% per year. But if the account is in debt, then the debt grows at a much faster rate, perhaps 15% per year. Suppose the amount in the bank account is \\(m\\) (in dollars) and time is \\(t\\) (in years). If \\(m\\) is positive, you are earning interest. If negative, you are in debt and the debt will grow. Which of the following graphs reflects the dynamics of the system? Figure 47.4: Scenarios A and B Figure 47.5: Scenarios C and D On the graph paper below, sketch out the modifications of the bank-card dynamics described. Identify any fixed points by marking them on the graph and say if they are stable or unstable. In addition to the normal bank-card dynamics, your employer makes a steady retirement deposit into your account at the rate of $100 per year. Your darling aunt looks at your account balance. If you have less than $300 in your account, she will add money daily at a rate of $100 per year. Otherwise, she does nothing. Exercise XX.XX: Amzsqx We will be using a handful of Greek letters in our mathematical notation. You should learn these by heart: \\(\\alpha\\) : alpha (lowercase) \\(\\beta\\) : beta (lowercase) \\(\\gamma\\) : gamma (lowercase) \\(\\delta\\) : delta lowercase \\(\\lambda\\) : lambda (lowercase) \\(\\Lambda\\) : lambda (uppercase) \\(\\omega\\) : omega (lowercase) \\(\\xi\\) : xi (lowercase), pronounced “ex-eee” \\(\\eta\\) : eta (lowercase) The last two of these, \\(\\xi\\) and \\(\\eta\\) are the Greek equivalents to the familiar \\(x\\) and \\(y\\). We’ll see \\(\\xi\\) and \\(\\eta\\) as arguments to functions that we will quickly be re-scaling and renaming \\(x\\) and \\(y\\). On a piece of paper, write out each of the following Greek letters and, alongside it, the name of the letter. \\(\\gamma\\) \\(\\beta\\) $ \\(\\xi\\) \\(\\Lambda\\) \\(\\lambda\\) \\(\\eta\\) \\(\\alpha\\) Exercise 24.20: uifJjv Recall the medieval math problem about rabbits, which we wrote as a dynamical system \\[x_{n+1} = x_n + y_n\\\\y_{n+1} = x_n \\ \\ \\ \\ \\ \\ \\ \\ \\ \\] Rewrite this system in matrix form \\[{\\mathbf X}_{n+1} = {\\mathbf A} \\cdot {\\mathbf X}_n\\ \\ \\ \\text{where}\\ \\ {\\mathbf X}_n \\equiv \\left[\\begin{array}{c}x_n\\\\y_n\\end{array}\\right]\\] Here are several candidates for the matrix \\({\\mathbf A}\\) that implements the rabbit dynamics: \\[{\\mathbf A}_1 \\equiv \\left[\\begin{array}{cc}1 &amp; 1 \\\\ 0 &amp; 1\\end{array}\\right], \\ \\ {\\mathbf A}_2 \\equiv \\left[\\begin{array}{cc}1 &amp; 0 \\\\ 0 &amp; 1\\end{array}\\right], \\ \\ {\\mathbf A}_3 \\equiv \\left[\\begin{array}{cc}1 &amp; 0 \\\\ 1 &amp; 1\\end{array}\\right], \\\\ {\\mathbf A}_4 \\equiv \\left[\\begin{array}{cc}1 &amp; 1 \\\\ 1 &amp; 1\\end{array}\\right], \\ \\ {\\mathbf A}_5 \\equiv \\left[\\begin{array}{cc}1 &amp; 1 \\\\ 1 &amp; 0\\end{array}\\right], \\ \\ {\\mathbf A}_6 \\equiv \\left[\\begin{array}{cc}1 &amp; 0 \\\\ 1 &amp; 0\\end{array}\\right]\\ \\] Question A Which of the candidates will implement the rabbit dynamics? \\({\\mathbf A}_1\\)︎✘ \\({\\mathbf A}_2\\)︎✘ \\({\\mathbf A}_3\\)︎✘ \\({\\mathbf A}_4\\)︎✘ \\({\\mathbf A}_5\\)Good.  \\({\\mathbf A}_6\\)︎✘ If you want to iterate the system \\({\\mathbf X}_{n+1} = {\\mathbf A}\\, {\\mathbf X}_n\\), you can use the Iterate() operator, handing it the matrix \\({\\mathbf A}\\) as argument \\(A=\\). Use the sandbox to create a matrix named A corresponding to the rabbit dynamics from the initial condition \\((1, 0)\\). (Note: the matrix that’s given by default is just a placeholder. It’s not the correct rabbit-dynamics matrix.) # enter your matrix here A &lt;- matrix(c(0.5, 1, 1, 0), nrow=2, byrow=TRUE) A # print the matrix so you can confirm you have it right Iterate(A = A, x0 = c(1, 0), n=10) Once you have your matrix \\({\\mathbf A}\\) correctly defined for the rabbit dynamics, and have confirmed the trajectory is what it should be, replace the initial condition (1, 0) with this one: (0.5247311, -0.8506508) That’s a funny initial condition for modeling rabbits, because you can’t have fractional rabbits and especially you can’t have negative rabbits. But that initial condition—even if it’s not about rabbits—produces a very special kind of dynamics. Question B Iterate the rabbit matrix \\({\\mathbf A}\\) from the initial condition \\((0.5247311, -0.8506508)\\). (Double check that you have entered it exactly as spelled out here.) The rabbit population starting at initial condition \\((1, 0)\\) grew in an unbounded way. What happens when you use the funny initial condition instead? The fixed point at (0,0) becomes stable.︎✘ The stability of the fixed point depends only on the \\({\\mathbf A}\\) matrix, not on the initial conditions. The x value oscillates and grows, then gets smaller again.︎✘ The x value oscillates and gets smaller, then grows without bound.Correct.  The x value oscillates around and around, without getting larger in magnitude.︎✘ This behavior may seem strange now. You’ll understand it better when we introduce a powerful way of looking at matrix dynamics: eigenvalues and eigenvectors. More generally, since the rod has mass and the pendulum bob is not a single point, you need to know the distribution of mass along the pendulum, from which you can calculate quantities such as the moment of inertia.↩︎ "],["solve-DE.html", "Chapter 48 Finding a solution 48.1 The flow field 48.2 Euler method 48.3 Symbolic solutions 48.4 Exercises", " Chapter 48 Finding a solution As you saw in the previous chapter, a differential equation relates the derivative of a function to the function itself, for instance \\[\\partial_t x(t) = x(t)\\,(1-x(t))\\ .\\] Solving a differential equation means to find a function \\(x(t)\\) that is consistent with the equation. This chapter is about techniques for finding solutions. It’s tempting—but not usually possible—to apply the symbolic anti-differentiation techniques from Block 3 to the problem. After all \\[\\int \\partial_t x(t) dt = x(t)\\,\\] as described in the “fundamental theorem of calculus”. Following this logic, we would translate the equation to \\[x(t) = \\int x(t)\\, (1-x(t))dt\\ .\\] But in order to carry out the anti-differentiation, we would need to know \\(x(t)\\) itself, which is the function we are trying to find. Nonetheless, it’s common to refer to integrating a differential equation, but this should be broadly understood as accumulating the increments \\(\\partial_t x(t)\\) starting at some initial condition \\(x(t_0)\\), even if that accumulation is not carried out by symbolic anti-differentiation. In this chapter we’ll introduce four different techniques to accumulating a solution to a differential equation or a pair of such equations. First, we’ll look again at the graphical method of “following the flow” in a plot of the flow field. This technique is mainly of use for developing intuition about the dynamics. Second, we’ll develop a simple Euler method for accumulating a solution. Third, we’ll explore how to take a guess about the solution and, when the guess is good enough, refine that into an actual solution. This is called the method of ansätze. Fourth, and briefly, we’ll look at some of the situations where symbolic anti-differentiation can be used. This includes a very brief introduction to transform methods. A differential equation like \\[\\partial_t x(t) = x(t)\\,(1-x(t))\\] is very busy typographically. One reason is the repeated \\((t)\\) which play no role other than to state explicitly that \\(x\\) is a function of \\(t\\). A convenient shorthand simply replaces \\(x(t)\\) to make the “is a function of \\(t\\)” implicit. Thus the equation appears as \\[\\partial_t x = x (1-x)\\ .\\] It’s the reader’s responsibility, knowing that he or she is working with a differential equation, to remember that \\(x\\) is a function of \\(t\\). An even more concise notation, originated by Isaac Newton, is to replace the \\(\\partial_t\\) with a simple dot over the function being differentiated as in \\(\\Large\\dot{x}\\). With this notation the equation looks like \\[\\dot{x} = x (1-x)\\ ,\\] about as simple as it gets. This dot notation is even more expressive when working with second-order differential equations involving second derivative. In the dot notation, \\(\\partial_{tt}\\) is written \\(\\ddot{\\ }\\). 48.1 The flow field With a pair of differential equations, as with the pendulum or the rabbit-fox model, each equation gives one component of the change in state. To draw the flow field, pick one point at a time from the state space, and calculate the right-hand sides of the differential equation from each equation. If the parameters in the model have been assigned numerical values, the result of evaluating the right-hand sides will be two numbers. A case in point is the rabbit-fox model where the state variables are \\(r\\) and \\(f\\). The differential equations are \\[\\partial_t r = 0.66 r - 1.33 r f\\\\ \\partial_t f = -f + rf\\\\ \\] To draw the flow arrow at, say, \\(r=2, f=1/4\\), plug those values into the right-hand side: \\[\\partial_t r = 1.33 - 0.66 = 0.66\\\\ \\partial_t f = -0.25 + 0.5 = 0.25\\ .\\] Since \\(r\\) has units of rabbit density, \\(\\partial_t\\) has units rabbit density per day (or some other time unit). Similarly \\(\\partial_t f\\) has units of fox density per day. The coordinate axis of rabbit-fox state space have units of rabbit density and fox density. We can’t therefore plot rabbit density per day and fox density per day in the state space. However, the ratio \\(\\frac{\\partial_t f}{\\partial_t r}\\) has units fox density per rabbit density. These are the units of a slope in the state space. Centered at coordinate \\((r=2, f = 1/4)\\), draw an sloping line segment. Given the values \\(\\partial_t f = 0.25\\) and \\(\\partial_t f = 0.66\\), the segment should have slope \\(0.25/0.66 = 0.379\\). Also, place an arrowhead on the segment. You can decide which end of the segment it goes by noting the signs of \\(\\partial_t f\\) and \\(\\partial_t r\\). Both are positive in this example, so the arrowhead should point up and to the right. This flow arrow is drawn in Figure 48.1. Figure 48.1: The flow arrow for the state value \\((r=2, f=1/4)\\). To draw the entire flow field, repeat this process at many other points in the state space. To trace out the trajectory, select the initial condition for the system. Then follow the flow, taking only a small step in state space. The next step should be in the direction of the flow arrow at the end of the previous step. The trajectory you draw will be only a sketch, but it can be effective for developing intuition. Figure 48.2 shows a semi-automated version of the go-with-the-flow method. The computer has been used to draw the arrows. When you click in the plot, the computer also undertakes calculation of the trajectory. Figure 48.2: The flow field for the rabbit/fox dynamics. Click at an initial state to generate the trajectory from that state. You may need to pinch in or out to see the flow arrows clearly. Regretably, from such a sketch of the trajectory, you can’t easily construct \\(r(t)\\) and \\(f(t)\\) for time-series plots. Also, you don’t get a sense of how slow or fast the flow is going. Click at different initial conditions in the flow and you will see different trajectories, each of which is a closed loop. But the shape of the trajectory doesn’t tell you whether it takes a long time or a short time to complete a loop. The next section will show you how the computer constructed the trajectory and how we can get information on the speed of the flow. 48.2 Euler method Recall from Block 2 the limit definition of the derivative: \\[\\partial_t x(t) = \\lim_{dt \\rightarrow 0} \\frac{x(t + dt) - x(t)}{dt}\\ .\\] We’re going to use this definition to develop a very general way to solve differential equations: the Euler method. From the differential equations, we already know \\(\\partial_t x(t)\\), so we don’t have to worry about whether the limit exists; it does. So we’ll disregard the limit except to note that \\(dt\\) must be small. How small? Pick \\(dt\\) to be small enough that the result wouldn’t change in any substantial way if we used an even smaller time increment, say \\(dt/10\\). Our starting point for solving each differential equation is to re-write it as a finite difference. To illustrate, we’ll solve the equation \\(\\partial_t x = x (1 - x)\\), which is often called the logistic equation. Applying the finite difference definition, we get \\[\\frac{f(t + dt)- f(t)}{dt} = x (1-x)\\\\\\text{implying}\\\\ \\ \\\\ \\underbrace{f(t + dt)}_{\\text{future state}} = \\underbrace{f(t)}_{\\text{current state}} +\\ \\ \\ \\underbrace{x (1-x) dt}_{\\text{step}}\\] We call this last equation the Euler formula. To use this, we start at the initial condition, say \\(x(t=0) = 0.2\\). This initial condition gives us the first row of a tabular representation of the function \\(x(t)\\): time state 0 0.2 Next, pick a value for \\(dt\\) that we will use for all the following steps, each of which will add a new row to the table. For the example, we’ll set \\(dt = 0.1\\). When we have constructed the whole table we can go back and check whether that was small enough. To fill in the next row, we apply the Euler formula. Sine \\(dt = 0.1\\), the next time step will be \\(0.1\\). Plug in the current state—which is 0.2 right now—to calculate the future state. The step will be \\(0.2 (1-0.2)\\, dt = \\color{brown}{0.016}\\). Add this step to the current state to get the future state. The table now looks like this: time state 0.0 \\(0.2\\) 0.1 \\(0.2 + \\color{brown}{0.016} = \\color{blue}{0.216}\\) The next step will bring us to time \\(0.2\\). Use the Euler formula, pluggin in the value of the present state, \\(\\color{blue}{0.216}\\), to find the step. Here that will be \\(0.216 (1-0.216)\\, dt = \\color{magenta}{0.0169.}\\). Now the table looks like time state 0.0 \\(0.2\\) 0.1 \\(0.2 + \\color{brown}{0.016} = \\color{blue}{0.216}\\) 0.2 \\(\\color{blue}{0.216} + \\color{magenta}{0.0169} = 0.2329\\) Add as many rows to the table as you like; the process will be the same. You will recognize this as an iterative process, as discussed in Chapter 32. Example 48.1 \\(\\ \\) As is so often the case, it’s wise to think about carrying out processes in terms of fundamental tasks accomplished by calculus operations—evaluate, differentiate, anti-differentiate, solve, find argmax, iterate. The obvious choice for integrating differential equations is “anti-differentiate,” but as described previously, the techniques we covered in Block 3 are not sufficient for the task. Instead, we use iteration to solve differential equations. In this example we’re going to use the software you have already seen, Iterate(), to carry out the task. In practice, however, you will use a special form of Iterate() called integrateODE() that makes use of interpolation techniques to give a more precise answer. To implement the iteration to solve \\(\\partial_t x = x (1-x)\\), we need to create a function that takes the current state as input and produces the next state as output. Our one-step function can be this: next_step &lt;- function(t, x, dt=0.1) { t &lt;- t + dt x &lt;- x + x*(1-x)*dt c(t=t, x=x) # return value } Notice that we wrote next_step() with an input slot for \\(dt\\). This will not be part of the state being iterated, just a parameter that allows us easily to explore different values for \\(dt\\). Use Iterate() to carry out the iteration of next_step(). Note that we use the fargs argument to Iterate() to pass our selected value for dt to the function next_step(). We’ll run the iteration for 100 steps. With \\(dt=0.1\\), those 100 steps will 10 units of time. Soln &lt;- Iterate(next_step, x0=c(t=0, x=0.2), n=100, fargs=list(dt=0.1)) n t x 0 0.0 0.2000000 1 0.1 0.2160000 2 0.2 0.2329344 … and so on … 99 9.9 0.9998595 100 10.0 0.9998736 We can now plot the time series \\(x\\) vs \\(t\\): Figure 48.3: The time series by the Euler method with \\(dt=0.01\\). In the previous example using Iterate() to solve a differential equation, the output of the iteration was a data frame containing values for the solution at discrete times: 0, 0.1, 0.2, and so on. A data table is a perfectly good way to represent a function, but it’s handier to have a function in a form that operations like slice_plot() and D() can be applied to. Another way to look at things is that, mathematically, the solution to a differential equation should be a continuous-time function. Fortunately, we have at hand the interpolation techniques covered in Chapter 33 to carry out the construction of a continuous-time function from a tabular representation. The R/mosaic function integrateODE() connects together the iteration and interpolation to provide a solution that is in the form of continuous-time function(s). Use the R/mosaic function integrateODE() to solve differential equations numerically. It is a specialized function that handles sets of first-order differential equations, but any high-order differential equation can be separated into a set of first-order equations. To illustrate, this command will solve the differential equation \\(\\partial_t x = x (1-x)\\) that we took on in the previous example with Iterate(). Soln2 &lt;- integrateODE(dx ~ x*(1-x), x = 0.2, tdur=list(from=0, to=10, dt=0.01)) The first argument is a tilde expression, but in a form that’s different from from that used in functions such as D() or contour_plot(), etc. To the left of the tilde is a single name composed of the state variable—x here—prefixed by a d. The d is just a reminder that we are describing not x itself, but \\(\\partial_t\\ \\mathtt{x}\\). On the right of the tilde is the function from the differential equation, in this case, \\(x(1-x)\\). The next argument is the initial condition. We’re starting the integration at \\(x=0.2\\). Finally, the argument named tdur= consists of a description of the starting and ending times and the time-step size \\(dt\\). The output of integrateODE() is an R structure that is new to us. It contains the function created by integrateODE() which you refer to by name (x) using a special form of R punctuation $. In other words, Soln2$x will be a function, which you can plot like any other function, for instance: slice_plot(Soln2$x(t) ~ t, domain(t=0:10)) An important feature of integrateODE() is its ability to handle sets of first-order differential equations. For instance, the rabbit/fox system \\[\\partial_t r = 0.66\\, r - 1.33\\, r f\\\\ \\partial_t f = -f + rf\\] will be integrated by this command: Eco_soln &lt;- integrateODE( dr ~ 0.66*r - 1.33*r*f, df ~ -f + r*f, r = 2, f = 0.5, #initial conditions tdur=list(from=0, to=5, dt=0.1)) You can plot the time series using slice_plot() slice_plot(Eco_soln$r(t) ~ t, domain(t=0:5)) %&gt;% gf_labs(title=&quot;Rabbits&quot;) slice_plot(Eco_soln$f(t) ~ t, domain(t=0:5)) %&gt;% gf_labs(title=&quot;Foxes&quot;) Figure 48.4: Times series of the rabbit and fox densities. To plot the trajectory, use the traj_plot() function. Unlike slice_plot(), which creates a time series plot, traj_plot() shows the trajectory. traj_plot(f(t) ~ r(t), Eco_soln, nt=10) 48.3 Symbolic solutions Occasionally it is possible to integrate a differential equation using symbolic techniques. This is particularly true for differential equations that are linear. The example we will handle here is the first-order linear differential equation \\[\\partial_t x = a\\, x\\ .\\] An advantage of symbolic solutions is that parameters can be handled symbolically. A method we will use repeatedly in this block is called the “method of ansätze.” An ansatz (singular of the German “ansätze”) is, in this context, a guess for the solution. Since differential equations have been a central part of science for more than 200 years, you can imagine that a large library of equations and their solutions has been assembled. For the equations that are most frequently used and that can be solved symbolically, the solutions are already known. Thus, the “guess” for the solution can be a very well informed guess. Let’s see how this works for \\(\\partial_t x = a\\, x\\). From experience, the ansatz will be an exponential function of time, which we can write \\(x(t) \\equiv A e^{\\omega t}\\). We don’t yet know what is the value of \\(\\omega\\) or \\(A\\), so we plug the ansatz into both the left and right sides of the differential equation to work it out. Plugging in the ansatz, translates the differential equation to a new form: \\[\\underbrace{A \\omega e^{\\omega t}}_{\\partial_t x(t)}\\ =\\ \\underbrace{a A e^{\\omega t}}_{a x(t)}\\ .\\] Cancelling out the terms that appear on both sides of the equation gives \\[\\omega = a\\ \\ \\ \\text{which implies}\\ \\ \\ x(t) = A e^{a t}\\ .\\] The ansatz substitution didn’t give any result at all for \\(A\\). That is to say, unlike \\(\\omega\\), the \\(A\\) is not determined by the differential equation itself. This means that \\(A\\) must be related to the initial condition. Setting \\(t=0\\) gives \\(x(0) = A\\), so in this simple differential equation, \\(A\\) is the initial condition. A technique that doesn’t involve such guesses can work for differential equations that are separable. This is mainly valuable, now that there are libraries of symbolic solutions to the common differential equations that have them, as a way of demonstrating to students where the solution comes from. We’ll demonstrate by integrating \\(\\partial_t x = x (1-x)\\). The method is made more plausible by using the Leibnizian notation for derivatives, with which the differential equation has this form: \\[\\frac{dx}{dt} = x(1-x)\\ .\\] The Leibnizian notation can be interpreted as the ratio of two differentials: \\(dx\\) and \\(dt\\) in this case. The idea of separating the differential equation is to algebraically move all the \\(x\\) terms to the left side of the equation and all the \\(t\\) terms to the right and then to integrate each side of the equation. \\[dx = x(1-x) dt \\ \\ \\ \\implies \\ \\ \\ \\frac{1}{x(x-1)}dx = dt\\ \\ \\ \\implies\\ \\ \\ \\int\\frac{1}{x(x-1)}dx = \\int dt .\\] The integral on the right side, \\(\\int dt\\), should be easily recognizable, giving \\(\\int dt = t + F\\), where \\(F\\) is the “constant of integration.” The integral on the left side may not be as familiar, but the person solving this problem for the second time will remember that \\[\\frac{1}{x(1-x)} = \\frac{1}{x} + \\frac{1}{1-x}\\] as you can confirm by putting the right side over a common denominator. Each of \\(1/x\\) and \\(1/(1-x)\\) have integrals that are logs: \\(\\int dx/x = \\ln(x) + D\\) and \\(\\int dx/(1-x) = - \\ln(1-x) + E\\). Putting the equation back together again, produces \\[\\ln(x) + D - \\ln(1-x) + E = t + F\\ .\\] At this point, move all the constants of integration over to the right side and consolate them into a single constant of integration \\(C\\). At the same time, collect together the two logarithmic terms, giving: \\[\\ln\\left(\\frac{x}{1-x}\\right) = t + C\\ .\\] Exponentiate both sides to get: \\[\\frac{x}{1-x} = \\underbrace{e^C}_{A} e^t\\ .\\] Since \\(e^C\\) is just a constant, we’ll write it more simply as \\(A\\). Now we have \\[x = Ae^t - x A e^t \\ \\ \\implies\\ \\ \\ x (1 + Ae^t) = Ae^t\\] which gives our solution \\[x = \\frac{Ae^t}{1 + Ae^t}\\ .\\] To find the initial condition symbolically, plug in \\(t=0\\), giving \\(x_0 = A/(1+A)\\) or, equivalently \\(A = x_0/(1-x_0)\\). Our previous examples used \\(x_0 = 0.2\\), for which \\(A = 0.2/0.8 = 0.25\\). Graphing this solution gives us the familiar sigmoid: Symb_soln = makeFun(A*exp(t)/(1 + A*exp(t)) ~ t) slice_plot(Symb_soln(t, A=0.2) ~ t, domain(t=-5:10)) Not all differential equations can be separated in this way, and even for those that can, the integrals may not be tractable. So this route to a solution is not a general-purpose one, unlike the Euler method. Still, the Euler method gives only an approximate solution, so with Euler we need to take care that the approximation is close enough for the purpose at hand. In this case, we have both an Euler solution (with \\(dt=0.1\\)) and a symbolic solution. Figure 48.5 shows the difference between the two solutions, which ideally should be zero. To show more of the time domain of the solution, we’ll reset the initial condition to \\(x_0 = 0.01\\). This corresponds to \\(A = 1/99\\). Figure 48.5: The difference between the Euler and the symbolic solution to \\(\\partial_t x = x (1-x)\\) as a fraction of the symbolic solution. At the worst, the Euler solution is off by 1.5 parts in one-million. 48.4 Exercises Exercise XX.XX: Z3Mq3G Figure 48.4 shows time series for the rabbit and fox population density starting at the initial condition \\(r=2, f=0.5\\) for the first 5 time units thereafter. The fox graph looks like a hump function, the rabbit graph show a little uptick near \\(t=5\\). Using the R/mosaic commands given in the text to make Figure 48.4, integrate the equations from \\(t=0\\) to \\(t=15\\) and plot the time series for both rabbits and foxes. A. Using the time-series plots, estimate the period of the cyclic oscillations. - What is the period of the fox population cycle? - How large in amplitude (peak to trough) is the fox population cycle? - How do the cycle period and amplitude for the rabbits compare to those for the foxes? B. Change the initial condition from \\(r=2, f=0.5\\) to \\(r=1, f=0.5\\) and plot the time series. - What is the period of the fox population cycle? - How large in amplitude (peak-to-trough) is the fox population cycle? Exercise XX.XX: Ul19SO Figure 48.5 shows the difference between the symbolic solution to \\(\\partial_t x = x (1-x)\\) and the Euler solution. The figure shows that the Euler solution (with \\(dt=0.1\\)) has an approximation error that’s small. The worst case is when \\(t \\approx 3\\) at which point it is less than 1.5 parts per million. Another good way to quantify this is the decimal place at which the calculated solutions differ. Euler &lt;- integrateODE(dx ~ x*(1-x), x=0.01, tdur=list(from=0, to=20, dt=0.1)) Symb_soln = makeFun(A*exp(t)/(1 + A*exp(t)) ~ t, A=1/99) Symb_soln(3) ## [1] 0.1686648 Euler$x(3) ## [1] 0.1686645 The approximation error occurs in the seventh decimal point. A. How large can \\(dt\\) be to keep the approximation error in the fourth decimal place of the answer. B. How large can \\(dt\\) be to keep the approximation error in the second decimal place of the answer. Exercise XX.XX: jd6HE8 The differential equation \\(\\partial_t x = a x\\) is so commonly encountered that you should simply memorize the solution: \\[x(t) = A e^{a t}\\] which you can recognize as exponential growth (or decay, if \\(a &lt; 0\\)) from an initial condition \\(x_0 = A\\). Exponential growth is considered fast, but there are far faster forms of growth. To illustrate, consider the differential equation \\[\\partial_t x = a x^2\\ .\\] This can be interpreted in terms of a model of the size of the flame as one lights a match. Think of the flame as a ball of hot gas of radius \\(x\\); the gas include oxygen (O_2_), nitrogen, and carbon dioxide, as well as a vapor of the combustible material such as the potassium chlorate of the match head. Within the ball of flame, O_2_ reacts with the cumbustible material to produce the products of combustion and heat. Needless to say, this reaction eliminates the O_2_ in the ball. But O_2_ can diffuse into the ball from outside. The O_2_ infusion rate available in this way is proportional to the surface area of the ball, that is, \\(a x^2\\). Thus the differential equation models the growth of the flame ball. The match-flame equation is one that can be separated into parts: all the \\(x\\) components on one side, the \\(t\\) on the other. That is: \\[\\underbrace{\\frac{dx}{dt} = a x^2}_{\\text{original DE}}\\ \\ \\ \\implies \\underbrace{\\frac{dx}{x^2} = a dt}_{\\text{separated DE}}\\] Integrating both sides of the separated equation will produce \\(a t + C\\) on the right side. A. Integrate the left side of the separated equation and use that to find a relationship between \\(x\\) and \\(a t + C\\). B. The constant of integration, \\(C\\), will reflect the initial condition. Plug in \\(t=0\\) and calculate from the relationship in (A) what is \\(C\\) in terms of \\(x_0\\). C. Replace \\(C\\) in your relationship with the expression in terms of \\(x_0\\) you found in (B). Confirm that this is \\[x(t) = \\frac{1}{a t - 1/x_0}\\ .\\] D. \\(x(t)\\) has a vertical asymptote. Find it. E. Use integrateODE() to integrate the original differential equation. You will have to pick some numerical value for \\(a\\) and \\(x_0\\). Take care to make \\(dt\\) small enough. You’ll know that \\(dt\\) is small enough when you get the approximately same solution using \\(dt/10\\). F. Describe in everyday words what the solution says and how big the ball of flame becomes. The model \\(\\partial_t x = a x^2\\), like all models, includes some features of the real-world system and excludes others. In this case, once the ball reaches a critical diameter, there is no longer enough combustion product to continue the reaction at the rate depicted in the model. If you watch a match being lit, you will see both the explosion and the eventual exhaustion of the combustion material. Exercise XX.XX: 5DVPWG This activity makes use of the following app: Click on the picture of the app and it will open in a new browser tab. Arrange that new tab side-by-side with the one where you are reading this. To solve a differential equation with the Euler method, you need two things: The differential equation itself. Several choices are available in the selector on the left side of the app. On the right side of the equation is the dynamics(x) function. An initial condition \\(x(0)\\). You can select this with the slider. You will also need A stepsize \\(h\\). So long as this is “small enough,” the specifics don’t really matter. How Euler works The first row of the table shows the situation at \\(t=0\\). At that time, the value of \\(x\\), that is \\(x(t=0)\\) is the initial condition that you set with the slider. In the following, whenever we write \\(x(t)\\) we mean \\(x\\) at the time in the last row of the table. Knowing the value of \\(x(t)\\) the instantaneous value of \\(\\partial_t x\\) can be found by plugging \\(x(t)\\) into the dynamics() function. Now that we know \\(\\partial_t x\\), we know how fast \\(x\\) is changing. Multiply this rate of change by \\(h\\) to get the total change of \\(x\\) for the next step. Add a new row to the table at \\(t+h\\) with the \\(x\\)-value from the previous row added to the total change of \\(x\\) from that previous row. Loop back to (a) each time the “step” button is pressed. Select \\(\\partial_t x = -0.5 x\\) as the differential equation to solve. Press “step” several times. After each step, try to understand from the table and graphs why the new row added to the table is what it is. Question A For \\(\\partial_t x = -0.5 x\\), which of these best describes the shape of the solution? (You’ll get a better picture if you set x(0) to, say, 8.) linear decay to zero︎✘ linear growth from zero︎✘ exponential decay to zeroNice!  exponential growth from zero︎✘ exponential decay to \\(x = 5\\)︎✘ exponential growth from \\(x = 5\\)︎✘ Question B For the differential equation \\(\\partial_t x = +0.5 x\\), which of these best describes the shape of the solution? (You’ll get a better picture if you set x(0) to, say, 1.) linear decay to zero︎✘ linear growth from zero︎✘ exponential decay to zero︎✘ exponential growth from zeroExcellent!  exponential decay to \\(x = 5\\)︎✘ exponential growth from \\(x = 5\\)︎✘ Question C For the differential equation \\(\\partial_t x = -0.4\\,(x - 5)\\), which of these best describes the shape of the solution when the initial condition is \\(x=1\\)? linear decay to zero︎✘ linear growth from zero︎✘ exponential decay to zero︎✘ exponential growth from zero︎✘ exponential decay to \\(x = 5\\)Correct.  exponential growth from \\(x = 5\\)︎✘ Question D For the differential equation \\(\\partial_t x = -0.4\\,(x - 5)\\), which of these best describes the shape of the solution when the initial condition is \\(x=9\\)? linear decay to zero︎✘ linear growth from zero︎✘ exponential decay to zero︎✘ exponential growth from zero︎✘ exponential decay to \\(x = 5\\)Nice!  exponential growth from \\(x = 5\\)︎✘ Question E For the differential equation \\(\\partial_t x = 2\\,x\\,(1-x/8)\\), which of these best describes the shape of the solution when the initial condition is \\(x=1\\)? linear decay to \\(x=8\\)︎✘ exponential decay to \\(x=8\\)︎✘ exponential growth from zero followed by exponential decay to \\(x=8\\)Good.  exponential decay to zero followed by exponential growth to \\(x=8\\)︎✘ "],["flow-on-line.html", "Chapter 49 Flows on the line 49.1 The rules of the road 49.2 Linearization 49.3 Nonlinearity 49.4 Exercises", " Chapter 49 Flows on the line The first chapter of this Block introduced a framework for modeling dynamics in continuous time: a dynamical state variables and dynamical functions giving the instantaneous change of each state variable as a function of the values of the state variables at that instant. The second chapter covered several methods of extracting a solution from the model, that is, a function of time for each of the state variables that is consistent with the differential equations. We looked at the solution in two ways: a trajectory in state space or a time-series graph. Ultimately, our goal is to make models of real-world systems. These models can enhance our understanding of the mechanisms active in the real world. The models can also make predictions of various sorts. But you are not yet in a position to know what “various sorts” of predictions can mean or to see how to construct a dynamical model. To get you there, you’ll need to learn about some general features of dynamical systems that allow us to think about them at a high level. We start with the simplest sort of dynamical system: first-order systems, that is, ones with a single state variable. With a single variable, the state space is one-dimensional: the number line. 49.1 The rules of the road A physical analogy to give a better intuition about dynamics in a one-dimensional state space. We’ll imagine that the state space is represented by a road, the instantaneous state being the location of a car along that road. On a real road, the motion of the car is set by the driver using the accelerator and brakes and constrained by other traffic and road conditions. In our state-space road, the velocity of the car is strictly dictated by an authoritarian government law: no exceptions. When the dictated speed is zero, the car will stand still and cannot start moving again. Ultimately, depending on the shape of the law, the car will head off to infinity or come to an eternal standstill. Two different cars can never collide on this road: if the cars are close together, they must be travelling at similar velocities. Cars can’t pass one another in different directions. Passing requires that the two cars have opposite velocities: one positive and one negative. If the mandated velocity at a point along the road is positive, every car that comes to that point must have the same positive velocity as it passes that point in the road. The diagram in Figure ?? shows one possible format for describing the regulations for a road. The road is shown as a grey line. The red numbers are mile-markers alongside the road. The function graph shows the mandated speed at any point: you can read off the numerical value of the mandated speed on the y-axis. To better visualize the flow of traffic on the road, in Figure 49.1 we draw vectors on the road. The direction of each vector will be either east or west; the length of the vector gives the required speed for a car passing that point. Figure 49.1: The mandatory speed on the road. Cars arriving from the west are obliged to stop their journey at about \\(x=4\\) where the arrows switch direction. Similarly, cars arriving from the east will be driving west, but their journey has a different destination, mile 13, where the velocity regulations change direction. The easterners will be obliged to stop at the point where the left-facing arrows meet the right-facing ones. A car starting near mile 10 will be obliged to drive east but can go only to mile 13; a car starting at mile 7 will drive west until reaching mile 4. This is a lot of detail in the shape of the dynamical function—I mean, the road regulations. So far as the consequences of the road regulations go, the situation is simpler: cars standing still at mile 4 or at mile 13, depending on where they started from. Zooming in on the dynamics near mile 4 or 13 helps to show what happens as the cars approach those points. (Figure 49.2) At either point, the action is similar. Cars coming from the west have to slow down as the arrows get smaller. Similarly for cars from the east. Where east meets west the cars are forced to a standstill; in order for the vectors to have different directions on the west end of the road than on the east end, the length of the vectors has to go to zero. Figure 49.2: The road regulations near mile-markers 4 and 13. The fixed point is marked with a small dot. Such a point in the state space, where the flow arrows converge, is called a stable fixed point. The “fixed” merely means that the cars come to a standstill. “Stable” means that all cars starting near the fixed point are heading toward that point. Many details of the dynamics near the fixed point have no role in the eventual outcome. For instance, the dynamical function near mile-marker 4 is concave down, while that at mile-marker 13 is concave up. In both cases the behavior of the system is the same: convergence at the stable fixed point. Newcomers understandably endow the car-on-road or bead-on-wire analogies to the state space of a first-order system with other familiar properties of the real world. For instance, a real-world wire has friction which needs to be overcome by applying a force. A real-world car has momentum which prolongs motion even after force has been applied. As you will see, a differential equation system that involves force and momentum requires a two-dimensional (or higher) state space. There is another fixed point on the road, but the behavior near it is different. Figure 49.3 zooms in on the situation near mile-marker 9. The outcome of the dynamics is very different than near miles 4 and 13. The fixed point near mile 9 is unstable. This means that any cars starting near the fixed point will drive away. Slowly at first and then faster as they get farther from the fixed point. Figure 49.3: An unstable fixed point in the road regulations. It’s an interesting philosophical question what happens to a car starting exactly on the fixed point. Since the velocity vector there has zero length, the car must stand still. But if the car happens to move one jot away from the fixed point, it will start to speed up and move away from the fixed point. The ideas of fixed points and their stability provides a much more concise description of the dynamical system: “There are stable fixed points near mile 4 and mile 13, as well as an unstable fixed point near mile 9.” It’s worth pointing out a consequence of the mathematics of continuous functions: if a system with a continuous dynamical function has a region of state space with two different fixed points, there must be an unstable fixed point in between them. 49.2 Linearization “Stable” and “unstable” provide a useful qualitative indication of the dynamics near a fixed point. An approximate quantitative solution can also be found. Recall that any continuous function can be approximated locally by a low-order polynomial. For a function \\(g(x)\\) with only one input, “locally” means “near \\(x^\\star\\),” and the polynomial will be \\[g(x) \\approx a + b \\left[x-x^\\star\\right] + c \\left[x-x^\\star\\right]^2 + \\cdots\\] The coefficients \\(a, b, c, \\cdots\\) can be calculated from the value of the function and it’s derivatives at \\(x^\\star\\): \\[a = g(x^\\star)\\ \\ \\ \\ b = \\partial_x g(x^\\star) \\ \\ \\ \\ c= \\frac{1}{2} \\partial_{xx} g(x^\\star)\\ \\ \\ \\text{and so on.}\\] When \\(x^\\star\\) is a fixed point of the dynamics, then \\(g(x^\\star) = 0\\) so the approximating polynomial is \\[g(x) \\approx b \\left[x-x^\\star\\right] + c \\left[x-x^\\star\\right]^2 + \\cdots\\] If \\(x-x^\\star\\) is small enough, then the higher-power terms like \\(\\left[x-x^\\star\\right]^2\\) will be negligible and the approximation can be \\[g(x) = \\partial_x g(x^\\star)\\ \\left[x-x^\\star\\right]\\ .\\] To linearize a dynamical function near a fixed point requires two steps: Solving task: Find a numerical value for the fixed point, that is, a value for \\(x^\\star\\) such that \\(g(x^\\star) = 0\\). Differentiating task: Evaluate the derivative \\(\\partial_x g(x)\\) at \\(x=x^\\star\\). (Another way of writing this is \\(\\partial_x g(x)\\left.{\\Large\\strut}\\right|_{x=x^\\star}\\) or, more simply, \\(\\partial_x g(x^\\star)\\).) To find the solution to the differential equation near the fixed point requires additional a couple of additional steps: Translate the state variable \\(x\\) into a new state variable \\(y = x - x^\\star\\). In terms of this new state variable, the approximate dynamics are \\(\\partial_t y = b y\\), where \\(b\\) is the value found in step (ii). The solution to the differential equation in (iv) is \\(y(t) = A e^{bt}\\). Find \\(A\\) in the solution as \\(y_0 = x_0 - x^\\star\\), where \\(x_0\\) is the initial condition of the state variable. So, \\(y(t) = (x_0 - x^\\star) e^{bt}\\). Finally, translate the solution in (iv) back into terms of \\(x\\). It will be \\[x(t) = (x - x_0) e^{b t} + x^\\star\\ .\\] Thus, the solution requires only two pieces of information knowing \\(x^\\star\\) and \\(b = \\partial_x g(x_0)\\). The stability of the fixed point is simply a matter of whether the exponential function in the solution is exponential growth (unstable) or exponential decay (stable). This is, of course, determined by the sign of the constant \\(b = \\partial_x g(x_0)\\): \\[\\partial_x g(x_0) &gt; 0\\ \\ \\ \\implies \\ \\ \\text{unstable}\\\\ \\partial_x g(x_0) &lt; 0 \\ \\ \\ \\ \\implies\\ \\ \\ \\ \\ \\ \\text{stable}\\] It’s critical to distinguish carefully between \\(x^\\star\\), which is the location of the fixed point being examined, and \\(x_0\\), which is the initial condition of the state, that is, \\(x(t=0)\\). Example 49.1 \\(\\ \\) Let’s return to the model of saving for retirement in Chapter 47: \\[\\partial_t V = r\\, V + M\\ .\\] The state variable here is named \\(V\\). The dynamical function is \\[g(V) = r\\, V + M\\] where \\(r\\) is the interest rate (say, 3% per year which is \\(r=0.03\\) per year) and \\(M\\) is the monthly contribution. To keep the units consistent, we set the units of \\(t\\) to be years, of \\(r\\) to be 1/years, of \\(V\\) to be dollars and of \\(M\\) to be dollars-per-year. So a monthly contribution of $1000 would come to \\(M=12000\\) dollars-per-year. Find the amount \\(V\\) that will result from 30 years of savings with an initial condition \\(V_0 = 0\\). Step i) Find the fixed point. This is a value \\(V^\\star\\) such that \\[r\\, V^\\star + M = 0\\ \\ \\ \\implies \\ \\ \\ V^\\star = -M/r\\ .\\] Step ii) Find the derivative of the dynamical function evaluated at the fixed point: Since \\(g(V)\\) happens to be a straight-line function, we know the derivative is a constant. So \\(b = \\partial_x g(V^\\star) = r\\). Step iii) Translate the state variable into \\(y = V - V^\\star\\). The dynamics in terms of \\(y\\) are \\(\\partial_t y = b y\\), which has a solution \\(y = A e^{bt}\\). Step iv) \\(A\\) is the initial condition in terms of \\(y\\). This will be \\(y_0 = V_0 - V^\\star\\). Since we stated that \\(V_0 = 0\\) (no savings at the start), \\(y_0 = -V^\\star\\) and the solution is \\[y(t) = -V^\\star e^{bt} = \\frac{M}{r} e^{rt}\\ .\\] Step v) Translate the solution in step (iv) back into terms of \\(V(t)\\). Since \\(y(t) = V(t) - V^\\star\\), this will be \\(V(t) = y(t) + V^\\star\\) or, \\[V(t) = \\frac{M}{r} e^{r t} + V^\\star = \\frac{M}{r} \\left[ e^{r t} - 1\\right]\\ .\\] To get an idea of this retirement plan, that is, \\(r=3\\%\\) and \\(M=12000\\) dollars-per-year, let’s see how much you’ll have after 30 years and 40 years. V &lt;- makeFun((M/r)*(exp(r*t)-1) ~ t, r=0.03, M=12000) V(30) ## [1] 583841.2 V(40) ## [1] 928046.8 After 40 years of contributions, your retirement account will have almost one-million dollars. You could have accomplished the same calculation using integrateODE(), like this: Soln &lt;- integrateODE(dV ~ r*V + M, V=0, M=12000, r=0.03, tdur=40) Soln$V(30) ## [1] 583841.2 Soln$V(40) ## [1] 928046.8 49.3 Nonlinearity Systems with nonlinear dynamical functions can have multiple fixed points. The differential equation \\(\\partial_t x = x(1-x)\\) has two: one at \\(x^\\star = 0\\) and the other at \\(x^\\star = 1\\). The flow-field/dynamics-graph (Figure 49.4) makes it clear that one of these is stable and the other unstable. Figure 49.4: Flow field and dynamics function for \\(\\partial_t x = x (1-x)\\). The fixed point at \\(x^\\star=0\\) is unstable; that at \\(x^\\star =1\\) is stable. For the system in Figure 49.4, a initial condition \\(x_0 = 0.05\\) or any other small positive number will produce a trajectory that moves slowly to the right at first, then faster, then slows down again for asymptotically approaching the fixed point at \\(x=1\\). In a time series plot, \\(x(t)\\) is a sigmoidal function. ::: {.intheworld data-latex=\"“} We have been using the differential equation \\(\\partial_t x(1-x)\\) as a mathematical equation, but the form has important applications in population modeling and ecology. When parameterized, the model becomes \\[\\partial_t x = h(x) \\equiv r x \\left(1 - \\frac{x}{K}\\right)\\] For \\(x \\ll K\\), the dynamics are approximately \\(\\partial_t x = rx\\), which is the recipe for exponential growth. Such growth is often seen in small populations. But”small\" compared to what? To answer that, look at the situation for \\(x \\approx K\\). In this domain, the growth will be much smaller, because \\((1 - x/K) \\approx 0\\). There’s a fixed point at \\(x^\\star = K\\), and for \\(K &lt; x\\) the time derivative of \\(x\\) is negative. In ecology, the population size that can just barely sustain itself without growth or decay is called the carrying capacity. Putting these different behaviors together, \\(\\partial_t x = h(x)\\) is a model of growth of a population when the environment has a finite carrying capacity. The pattern of change in such an environment is called logistic growth, but might as well be called “sigmoidal growth.” (The function \\(f(x) = \\frac{e^t}{1 + e^t}\\) is called the “logistic function.”) In this problem, we’re going to build a somewhat more complicated model of an ecosystem, based on the logistic growth model for grass. To turn a field of growing grass into an ecosystem, we’re going to add grazing cows to the field. A grazing cow has an impact on a field. To simplify, consider a single cow. She eats until she’s full, then takes time off to chew the cud with other cows and ruminate on the day’s events. But, if grass is very scarce, she may not be able to consume all that she would otherwise eat. She’ll be a hungry, ill-fed cow. When building a model, start by thinking what you want to use the model for. Imagine that we’re interested in sustainability, that is, whether the cow/grass ecosystem is stable. And, since cows are raised for a purpose, we’d like to use the model to find out whether the cow would be well fed and how things would change if another cow were added to the field. Sustainability is a question about dynamics. Here, the system would be sustainable if the field produces more grass in a day than the cow (and her herd-mates if any) consumes consumes in a day. We’ll model a cow’s consumption as a sigmoidal function consumption(v) of the amount of grass (v – for “vegetation”) available. Like this: Figure 49.5: The amount of vegetation consumed by a cow in a day depends on the amount of vegetation available. At very low levels of vegetation (\\(v &lt; 1/2\\) ton), it’s hard to find more to eat, so a slight increase in vegetation doesn’t increase consumption by much. The overall system is roughly analogous to the rabbit/fox model where we had rabbits as the food and foxes as the consumers. In the rabbit/fox system, we had one differential equation for the growth in the rabbit population density and another for the foxes. The rabbit dynamics consisted of two parts, the natural growth rate in the absence of foxes and the rate at which rabbits are taken by the foxes: \\(\\partial_t r = 0.66\\, r - 1.33\\, r f\\). We’ll model the dynamics of grass in much the same way. In the absence of cows the grass grows in an environment with a limited carrying capacity. (Carrying capacity reflects limits to the amount of water and the amount of sunlight and space.) Taking the carrying capacity of the field as 25 tons of biomass, we’ll set the model for \\(v(t)\\) to be \\[ \\partial_t v = \\frac{v}{3} \\left(1-\\frac{v}{25}\\right)\\ .\\] We now have two models for two different components of the ecosystem: the growth of vegetation and the daily consumption by a cow. It’s time to put those components together into the overall model. But do we have everything we need? There are potentially two state variables, the amount of vegetation and the number of cows. To be analogous to that situation, we would need a model for the number of cows in the field. However, the context for the model suggests some changes here. First, the number of cows \\(n\\) in the field is not set by the cow’s natural reproduction, it’s set by the farmer’s decision. As well, at 9 months, a cow’s gestation period is long relative to the potential changes in the amount of vegetation. (In contrast, rabbits have a gestation period of 1 month and foxes 2 months.) The cow’s consumption is one part of the dynamics. If there were no grass growing, the dynamics would be \\[\\partial_t G(v) = - H \\times \\text{consumption}(v)\\] where \\(H\\) is the number of cows in the herd. Subtracting daily consumption from daily growth of grass gives the rate of change of the biomass of grass. Figure 49.6: The graph can be made to display any of three functions: The intrinsic logistic model growth dynamics with no cows.\\2. The total consumption by the herd of cows.\\3. The net growth, which is the difference between (1) and (2). 49.4 Exercises Exercise XX.XX: 9aVYdV Answer these questions with respect to Figure ??. Question A At mile marker 4, which way is the car going?     West\\(\\heartsuit\\ \\)A negative velocity means heading west.       East︎✘        At a standstill︎✘ Question B How long will it take for the car to go from mile marker 4 to mile marker 0? (Choose the closest answer.) 5 minutes︎✘ 15 minutes︎✘ 25 minutesNice! The velocity is about -10 mph over that segment of the road. To go 4 miles at 10 mph takes 24 minutes. 45 minutes︎✘ Can’t be done.︎✘ Question C A car starts at mile marker 8. Where will it end up?     All the way west\\(\\heartsuit\\ \\)       About mile 9︎✘        About mile 10︎✘        About mile 13︎✘        All the way east︎✘ Question D A car starts at mile marker 10. Where will it end up?     All the way west︎✘        About mile 9︎✘        About mile 10︎✘        About mile 13\\(\\heartsuit\\ \\)       All the way east︎✘ Question E You and your friend plan to bike along the road. (Bikes are not covered by the speed mandate.) You’ll stop at a point where you can sell snacks to motorists through their car windows. What’s the most profitable point for you to set up your business.     All the way west︎✘        About mile 9︎✘        About mile 10︎✘        About mile 13\\(\\heartsuit\\ \\)       All the way east︎✘ A government commission is exploring ways to improve road use by changing the speed mandate. They will add a constant to the existing speed mandate. Question F One group of citizens wants to facilitate east-to-west travel. Which of these would be a suitable value of the constant to add to the speed mandate?     -75 mph\\(\\heartsuit\\ \\)       -25 mph︎✘        15 mph︎✘        35 mph︎✘        60 mph︎✘ Question G Another group of citizens wants to facilitate west-to-east travel. Which of these would be a suitable value of the constant to add to the speed mandate?     -75 mph︎✘        -25 mph︎✘        15 mph︎✘        35 mph︎✘        60 mph\\(\\heartsuit\\ \\) Question H An angry chef has a road-side hamburger stand at mile 5. His business has been non-existent since the current speed mandate was implemented. To give his stand the best chance at success, which policy should he advocate?     -75 mph︎✘        -25 mph︎✘        15 mph\\(\\heartsuit\\ \\)       35 mph︎✘        60 mph︎✘ Exercise XX.XX: 136TO6 A first-order dynamical system \\(\\partial_t x = g(x)\\) can have any number of fixed points, depending on the shape of \\(g(x)\\). A. Draw a graph of a \\(g(x)\\) that has seven fixed points. B. Explain why, when there are multiple fixed points, a stable fixed point will have a neighboring fixed point that is unstable, and vice versa. Exercise XX.XX: cAKQiT In the cows eating grass model, we proposed the model \\[ \\partial_t v = \\frac{v}{3} \\left(1-\\frac{v}{25}\\right)\\] for the growth of grass in the field, where \\(v\\) is in tons of biomass and \\(t\\) A. According to the model, what is the carrying capacity of the field? B. The field is most productive when the grass is growing at the highest rate possible. At what level of vegetation biomass is the biomass increasing the most rapidly? C. At that most productive level of biomass, what is the rate of growth of the vegetation? (Make sure to give units.) Exercise XX.XX: L6hTUu Consider a hay field that has just been harvested in the middle of summer. The grass has been cut short and the weather is still conducive to growth. What’s going to happen? The grass will grow back, a very simple model of which will be \\(\\partial_t G(t) \\equiv C\\). This rate, \\(\\partial_t G(t)\\), corresponds to the grass growing back at a constant rate. Imagine we measure this rate as tons of biomass per day, and measure time \\(t\\) in days. Question A To model the everyday real world of growing grass, should \\(C\\) be positive or negative? positiveRight!  negative︎✘ The amount of grass would be decreasing. This is not what we ordinarily think of as “growing” zero︎✘ \\(\\partial_t G(t) = 0\\) implies no change at all. Question B What units does the output \\(G(t)\\) have? tons per day︎✘ These are the units of \\(C\\) and therefore, because of the equality, of \\(\\partial_t G(t)\\). We’re asking about the units of \\(G(t)\\), not \\(\\partial_t G(t)\\). tonsExcellent!  days︎✘ This is the unit of the input \\(t\\), not the output \\(G(t)\\). tons/day^2︎✘ Question C Which of these equations best describes the trajectory of the growing grass under the \\(\\partial_t G(t) = C\\) dynamics?     \\(G(t) = G(0) + C\\)︎✘        \\(G(t) = G(0) + C t\\)\\(\\heartsuit\\ \\)       \\(G(t) = G(0)\\sin(t/C)\\)︎✘        \\(G(t) = G(0) t + C\\)︎✘ Question D According to the dynamics \\(\\partial_t G(t) = C\\), what will \\(G(t)\\) look like (without future harvesting)? Growth until the field is choked up with grass.︎✘ Growth without limit.Excellent!  Oscillating growth and decline as the seasons pass.︎✘ This might be the case in the real world, but the simple model does not incorporate seasonality. There are two obvious shortcomings of the model \\(\\partial_t G(t) = C\\). First, when the amount of grass is very small (think little spouts spread widely apart) growth should much smaller than when the grass is plentiful. Second, at some point the grass is so dense that further growth is impossible, so \\(\\partial_t G(t)\\) falls to zero (or even negative). The maximum amount of biomass that can be sustained by the field is called the grass’s carrying capacity. The standard simple model for a system with growth to a carrying capacity is \\[\\partial_t G(t) = r G(t)(K-G(t))\\] This model is famous and has a name: logistic growth. Question E The logistic growth model has two fixed points. What are they? \\(G=0\\) and \\(G=K\\)Correct.  \\(G=0\\) and \\(G=1/K\\)︎✘ Plug \\(1/K\\) into the dynamics in place of \\(G\\). Do you get \\(\\partial_t G = 0\\)? \\(G = \\pm K\\)︎✘ Plug \\(-K\\) into the dynamics in place of \\(G\\). Do you get \\(\\partial_t G=0\\)? \\(G=0\\) and \\(G=-K\\)︎✘ Plug \\(-K\\) into the dynamics in place of \\(G\\). Do you get \\(\\partial_t G=0\\)? Question F Which of these stories best describes the trajectory of the logistics growth version of \\(G(t)\\) starting with \\(G(0)\\) very small but positive? The grass grows slowly at first, then gradually growth speeds up and stays high.︎✘ The grass grows rapidly at first then declines gradually to no growth.︎✘ The grass grows slowly, then grows faster until it reaches a biomass where the growth rate declines steadily to zero.Right!  Here are three graphs. Question G Which of the graphs represents a possible trajectory \\(G(t)\\)? A︎✘ BNice!  C︎✘ This is a graph of dynamics, not the trajectory. Look at the x-axis label. none of them︎✘ Exercise XX.XX: 61zaad Consider the differential equation \\[\\partial_t x = \\sin(x)^2 + 1\\ .\\] Where is the fixed point? Is the fixed point stable? Exercise XX.XX: 9qOKUM Figure 49.5 shows a model of a cow’s consumption of vegetation as a sigmoidal function of the amount of vegetation. In addition to the mathematics of the function, it’s helpful to be able to translate the shape of the function into terms that make sense in the context of the model. Question A At what level of available biomass is the cow most hungry at the end of the day? (Hint: Think about how you would measure how hungry a cow is at the end of the day.) 2 tonsGood. The consumption function is steepest here, meaning that if more grass were available the cow would eat the biggest proportion of it. 5 tons︎✘ The level of hunger can be measured by the slope of the consumption curve. If a cow would eat a lot more if the biomass were available, she must be hungry. 10 tons︎✘ The level of hunger can be measured by the slope of the consumption curve. If a cow would eat a lot more if the biomass were available, she must be hungry. 15 tons︎✘ Even if more grass were available, the cow wouldn’t each much of it. So, the cow is not very hungry. Exercise XX.XX: owYlop ::: {.underconstruction} + some drill on setting up the solution near fixed points to linear and nonlinear equations, e.g. \\(\\dot{x} = r x (1-x)\\). + Which of these is a function and which is a constant: \\(V\\), \\(V^\\star\\), and \\(V_0\\). ::: "],["flow-on-plane.html", "Chapter 50 Flows on the plane 50.1 Generic behaviors 50.2 Linearization 50.3 Exercises", " Chapter 50 Flows on the plane Let’s return the rabbit/fox system as an example of flow. Since there are two state quantities, \\(r\\) and \\(f\\), the state space \\((r, f)\\) is a plane. At each point in the state space, the flow vector gives the direction and speed of motion. Like all vectors, a flow vector has only two properties: the direction and length. The speed of motion is the length of the flow vector. The flow itself is a vector field. This is an assignment of a vector to each point of the state space. Graphically, we depict a flow field by selecting a grid of points in the state space, finding the flow vector for each grid point, and drawing those vectors positioned at their respective grid points. Figure 50.1: The flow field has a vector at each point in state space but we can draw only a few if the plot is to be legible. Zooming in on a region produces more detail. Recall from Block 5 that it’s conventional to specify a vector by giving a coordinate pair for the tip of the vector with the understanding that the tail is at the origin. For the rabbit/fox system, the tip’s coordinate is \\(\\left({\\Large\\strut} g_r(r, f),\\ g_f(r, f)\\right)\\). This notation is potentially confusing, because the letters \\(r\\) and \\(f\\) appear in so many places. Each each vector in Figure ?? is drawn at a particular point, say \\((r=0.96, f=0.48)\\). At that point, evaluate the dynamical functions: \\(g_r(r=0.96, f=0.48) = 0.0207\\) and \\(g_r(r=0.96, f=0.48)= 0.941\\). A fixed point of the dynamics is a point in the state space where the dynamical functions both evaluate to zero. It’s convenient to mark fixed points as the intersection of zero contours of the dynamical functions. Figure 50.2 shows these zero contours (red for rabbits, blue for foxes) laid on top of the flow field. Such zero contours of dynamical functions are called nullclines. (The word means “zero slope”. “Null” corresponds to zero and “cline” is the root of words like “incline” or “decline.”) Figure 50.2: Flow field and nullclines for the rabbit/fox dynamics. Due to the nature of fixed points, if the initial condition is at the intersection of the nullclines the state will not change. But is the fixed point stable or unstable. As you will see, in two and higher dimensional dynamical systems, there is more than one kind of stability and more than one kind of instability. These different kinds of stability and instability have a direct correspondence to different kinds of behavior in real-world systems. Very near the fixed point, dynamics are approximately linear. We’ll return to a quantitative analysis of this in Chapter 52. Our objective here is to show that there are several generic types of behavior and that the stability of dynamics near the fixed point has to be one of a handful of different types. 50.1 Generic behaviors On a nullcline of a dynamical variable \\(x\\), the \\(x\\)-component of the flow must be zero. The flow will point to positive \\(x\\) on one side of the nullcline and negative \\(x\\) on the other. This is really nothing more than saying that on one side of a zero contour the function value is positive and on the other side negative. We’ll indicate this on the following diagrams by shading the positive side of the nullcline with the same color as the nullcline itself. Figure 50.3 shows the nullclines of a linear system on separate plots. Notice that flow in the shaded side of the \\(x\\) (red) nullcline the flow always has a positive component to the right. Similarly, in the shaded side of the \\(y\\) (blue) nullcline, the flow always has a positive component to the right. Figure 50.3: The nullclines of a linear dynamical system near the fixed point. \\(x\\) nullcline is red, \\(y\\) nullcline is blue Placing both nullclines on the same plot divides the region near the fixed point into four parts. This is generic behavior. Unless the two nullclines are exactly the same as each other, the two nullclines split the region into four quadrants. Figure 50.4: Four quadrants of linear dynamics near the fixed point. We can identify the quadrants by their color—white, red, blue, purple. In each quadrant, the “compass direction” of all flow vectors point to one quadrant of the compass: white to the south-west, red to the south-east, blue to the north-west, and purple to the north-east. This particular linear flow is unstable. Notice that any initial condition in the purple quadrant will lead to a NE trajectory, away from the fixed point. Similarly, any initial condition in the white quadrant leads to a SW trajectory, again away from the fixed point. For an initial condition in the red or blue quadrants, the flow will take the trajectory into either the white or purple quandrants. The initial part of the trajectory may be towards the fixed point, but as soon as the trajectory crosses into white or purple territory, the trajectory leads away from the fixed point. So, the overall flow is unstable. This particular type of instability, where the initial path might be toward the fixed point but eventually leads away from it, is called a saddle. The flow is analogous to the movement of a marble placed on a horse saddle; it might start to roll toward the center of the saddle, but eventually it will roll off to the side. All linear flows will lead to this quadrant structure. Another feature of the structure is that the white quadrant must always be opposite to the purple, and the red opposite to the blue. This allows us to enumerate the different possible types of stability. A very compact summary of the dynamics shows just the four compass directions and the relative positions of the quadrants. For instance, \\[\\begin{array}{c|c} \\color{red}{\\searrow} &amp; \\color{purple}{\\nearrow}\\\\\\hline \\color{gray}{\\swarrow} &amp; \\color{blue}{\\nwarrow} \\end{array}\\ ,\\] corresponds to the saddle flow seen in the previous flow field. There are, altogether, eight possible configurations: $$ \\[\\begin{array}{cccc} \\text{saddle} &amp; \\text{saddle} &amp; \\text{saddle} &amp; \\text{saddle} \\\\ \\begin{array}{c|c} \\color{red}{\\searrow} &amp; \\color{purple}{\\nearrow}\\\\\\hline \\color{gray}{\\swarrow} &amp; \\color{blue}{\\nwarrow} \\end{array} &amp; \\begin{array}{c|c} \\color{gray}{\\swarrow} &amp; \\color{red}{\\searrow} \\\\\\hline \\color{blue}{\\nwarrow} &amp; \\color{purple}{\\nearrow} \\end{array} &amp; \\begin{array}{c|c} \\color{blue}{\\nwarrow} &amp; \\color{gray}{\\swarrow} \\\\\\hline \\color{purple}{\\nearrow} &amp; \\color{red}{\\searrow} \\end{array} &amp; \\begin{array}{c|c} \\color{purple}{\\nearrow}&amp; \\color{blue}{\\nwarrow}\\\\\\hline \\color{red}{\\searrow} &amp; \\color{gray}{\\swarrow} \\end{array} \\\\ \\ \\\\ \\begin{array}{c|c} \\color{red}{\\searrow} &amp; \\color{gray}{\\swarrow}\\\\\\hline \\color{purple}{\\nearrow} &amp; \\color{blue}{\\nwarrow} \\end{array} &amp; \\begin{array}{c|c} \\color{purple}{\\nearrow}&amp; \\color{red}{\\searrow} \\\\\\hline \\color{blue}{\\nwarrow}&amp; \\color{gray}{\\swarrow} \\end{array} &amp; \\begin{array}{c|c} \\color{blue}{\\nwarrow}&amp; \\color{purple}{\\nearrow} \\\\\\hline \\color{gray}{\\swarrow}&amp; \\color{red}{\\searrow} \\end{array}&amp; \\begin{array}{c|c} \\color{gray}{\\swarrow}&amp; \\color{blue}{\\nwarrow} \\\\\\hline \\color{red}{\\searrow}&amp; \\color{purple}{\\nearrow} \\end{array}\\\\ \\text{center} &amp; \\text{orbit} &amp; \\text{source} &amp; \\text{orbit} \\end{array}\\] $$ Saddles are unstable, although the trajectory might approach the fixed point at first. A source is unstable; any trajectory heads away from the fixed point. A center is stable; any trajectory heads toward the fixed point. As for the orbits, one in a clockwise direction and the other counter-clockwise, we can’t yet say from this simple theory whether they are stable or unstable. The orbit we have already met, the rabbit-fox dynamics, has counter-clockwise trajectories that form closed loops. This is called neutral stability. Figure 50.5: The rabbit/fox system has orbits that are neutrally stable. 50.2 Linearization For dynamical systems with two state variables, constructing a linear approximation to dynamics near a fixed point follows a similar procedure to that with one-state-variable systems. Locate the fixed point. Construct the first-order polynomial approximation to each of the dynamical functions at the fixed point. For instance, the pendulum system has state variables \\(\\theta\\) and \\(v\\) with dynamics \\[\\partial_t \\theta = g_\\theta(\\theta, v) = v\\\\ \\partial_t v = g_{v}(\\theta, v) = - \\sin(\\theta) \\] There is a fixed point at \\(\\theta = 0\\), \\(v=0\\): this is just the situation of a pendulum hanging down that has no motion. The dynamical function \\(g_\\theta(\\theta, v) = v\\) is already in first-order polynomial form. The other dynamical function, \\(g_v(\\theta, v) = - \\sin(\\theta)\\) is nonlinear. The first order polynomial approximation centered on the fixed point will be \\[g_v(\\theta, v) \\approx \\underbrace{\\color{magenta}{g_{v}(0, 0)}}_0 + \\underbrace{\\color{magenta}{\\partial_\\theta g_v(0, 0)}}_{-\\cos(0)}\\ \\theta + \\underbrace{\\color{magenta}{\\partial_v g_v(0, 0)}}_0\\, v\\] The term \\(g_v(0, 0) = 0\\) because we are evaluating \\(g_v()\\) at a fixed point. The term \\(\\partial_v g_v(0, 0) = 0\\) because \\(g_v()\\) does not depend on \\(v\\). We’ll use \\(u\\) and \\(w\\) as the dynamical variables in the linear approximation in order to avoid confusion with the original, nonlinear equations. The linearized dynamics are therefore: \\[\\partial_t u = \\ \\ w\\\\ \\partial_t w = - u\\] Figure 50.6: Flow field, nullclines, and trajectories of the pendulum (black) and the linearized pendulum ($) from three different initial conditions. Given a choice between a numerical and a symbolic solution to exactly the same problem, the symbolic solution is generally better: it’s exact and it can incorporate parameters symbolically. But don’t fetishize exact solutions. Often, exact solutions exist only for excessively simplified, approximate versions of the system you want to model. It can be reasonable to pay this cost for the purpose of developing a deeper understanding of your model, but in the end you will want a numerical solution to a more accurate model. “Far better an approximate answer to the right question, which is often vague, than an exact answer to the wrong question, which can always be made precise.” – John Tukey (1915-2000) 50.3 Exercises Exercise XX.XX: s5x504 Figure 50.6 shows a flow field of the pendulum system and three pairs of trajectories, one pair for each of three initial conditions. Each trajectory starts at \\(t=0\\) and ends at \\(t=6\\). A. Read the three different initial conditions from the graph. B. The dark gray trajectories are for the original (nonlinear) pendulum system while the \\(\\color{magenta}{\\text{magenta}}\\) trajectories are for the linearized dynamics. Describe in words the differences in the trajectories for the nonlinear and the linearized dynamics. C. The flow field corresponds to either the nonlinear (gray) or linearized (\\(\\color{magenta}{\\text{magenta}}\\)) dynamics. Which one is it? Exercise XX.XX: ePqij6 Describe the stability of each of the following flows. Exercise XX.XX: 3A3pMv Consider this two-dimensional flow field: There are three fixed points visible. The next plots zoom in on each of the fixed points. Question A Is the fixed point in (A) stable or not?     Stable︎✘        Unstable\\(\\heartsuit\\ \\) Question B Is the fixed point in (B) stable or not?     Stable︎✘        Unstable\\(\\heartsuit\\ \\) Question C The fixed point in (C) shows a new pattern. It is stable in one direction and unstable in another. Which of these is correct? Stable in y-direction and unstable in the x-direction︎✘ Stable in the x-direction and unstble in yRight!  Here’s a system which has 4 fixed points in the region shown. Plots (D) and (E) zoom in on two regions. Question D Which of the following is the best description of the behavior near the fixed point in (D)? Stable and rotating clockwise︎✘ Stable and rotating counter-clockwiseNice!  Unstable and rotating clockwise︎✘ Unstable and rotating counter-clockwise︎✘ Question E Which of the following is the best description of the behavior near the upper left fixed point in (E)? (Neutal stability means neither stable nor unstable; the trajectory just orbits around the fixed point.) Unstable and rotating clockwise︎✘ Stable and rotating counter-clockwise︎✘ “Neutral stability” and rotating clockwiseNice!  “Neutral stability” and rotating counter-clockwise︎✘ Let’s look a little more closely at the upper-left fixed point in graph (E): The pattern in figure (F) is clockwise rotation around the fixed point. This kind of pattern is of fundamental importance in physics and engineering. Exercise XX.XX: KzgT1c Question A In plot (A), how many fixed points are visible?     0\\(\\heartsuit\\ \\)       1︎✘        2︎✘        3︎✘        4︎✘        5︎✘ Question B In plot (B), how many fixed points are visible?     0︎✘        1︎✘        2︎✘        3︎✘        4\\(\\heartsuit\\ \\)       5︎✘ Question C In plot (C), how many fixed points are visible?     0︎✘        1︎✘        2︎✘        3\\(\\heartsuit\\ \\)       4︎✘        5︎✘ Question D In plot (D), how many fixed points are visible?     0︎✘        1︎✘        2︎✘        3\\(\\heartsuit\\ \\)       4︎✘        5︎✘ "],["modeling-dynamics.html", "Chapter 51 Modeling dynamics 51.1 A single state quantity 51.2 Multiple state quantities 51.3 Classical phase-plane models 51.4 Epidemic 51.5 Exercises", " Chapter 51 Modeling dynamics It’s a truism that starting a painting with a blank canvas can be daunting: so much choice and so many possibilities can be disabling. The same is true when it comes to constructing a model of a new phenomenon. You’ll need to decide what are the essential features of the phenomena, how they are connected to one another and how they connect to the question you seek to answer with the model you will eventually build. For painters, there are numerous ways to confront the blank-canvas function. For instance, there are different types of paintings: landscapes, portraits, abstract, and so on. And there are different styles of painting: impressionist, rococo, cubist, art deco, and so on. I don’t think that painters would use this term, but I think of these aids to decision making as a framework, an organization of what you know to guide decision making. Three of the frameworks for modeling that we have worked with in this book might be called: Function shape. Possibilities are hump, sigmoidal, oscillatory, exponential, and so on. We’ve also worked with the low-order polynomial as a function-shape framework, which reduces the decision making to which terms to include in the polynomial. Differential equations. Constructing a model as a differential equation enables the modeler to separate the accounting work of accumulation over time and focus on capturing the relationships that tell, at any instant in time, which way the change will go. In working with this framework, the modeler decides what will be the state variables. Then, the modeler turns to the function shape framework to describe how the state variables themselves determine in which direction the change of each goes. Modeling cycle. Most people are taught that mathematics is about precision, exactitude, and a correct answer. In many settings, this is appropriate. But often the role of mathematics is to provide a language to express ideas about relationships and then to play out the consequences of those ideas. It’s not usually critical that the relationships are being exactly described; observing the calculated consequences from a given statement of the relationships can provide deeper understanding of the system being studied or reveal that the description of the relationships does not lead to realistic consequences and so is incomplete or wrong. 51.1 A single state quantity We’ll start with situations that can be modeled with a single state variable. Throughout our examples, we’ll call that state variable \\(S\\), so the differential equation describing how \\(S\\) changes in time will always be \\[\\partial_t S = f(S)\\]. The modeler chooses the shape of \\(f()\\) depending on the situation being modeled. In principle, there is an infinite number of shapes for \\(f(S)\\). But many modeling settings involve behavior that is simple. We’ll work with function shapes where the dynamical function \\(f(S)\\) is continuous and has one or two fixed points. If \\(S\\) is observed to oscillate or to reverse the direction of change, then there must be at least one more state variable, that is, at least one more quantity that changes in time. A single first-order differential equation will not be able to model the situation. If there are no fixed points, then the only possible dynamics are continuous increase in \\(S\\) or continuous decrease in \\(S\\). Often, the point of interest will be whether there is some other factor that changes increase to decrease or vice versa. Again, such situations should be modeled in the context of at least two state variables. Figure 51.1 shows four generic dynamical function shapes where these is one fixed point. The location of the fixed point is, of course, the \\(S_0\\) at which \\(f(S_0)=0\\), that is, the intersection of the function and the blue dashed line. Figure 51.1: Four generic functions shapes with one state variable having one fixed point. The fundamental distinction is between models with stable and models with unstable fixed points. When the situation being modeled has a steady equilibrium, only the stable shapes of \\(f(S)\\) are relevant. A second distinction is between functions with a bounded shape and those with a linear shape. Use a linear shape when you are concerned only with the behavior near the fixed point. But when your model needs to account for behavior far from the fixed point, you need first to have a way to represent what is meant by “far from.” That is represented by the location of the shoulder of the curve relative to the fixed point. A setting for a linear stable model is the cooling or warming of an object to the ambient temperature. \\(S\\) stands for the temperature of the object and the fixed point is the ambient temperature. This model often goes under the name Newton’s Law of Cooling. The prestige of the model name distracts from the fact that this is a very simple model. But in the real world there are likely to be complications that make Newton’s Law imprecise, unlike, say, Newton’s Second Law of Motion which is exact (at non-quantum and non-relativistic scales). For instance, a cup of hot water will cool faster than a cup of cold water. In hot water, evaporation from the surface speeds up the warming. When ice is involved, the rate of temperature change slows when melting or freezing is encountered. Another classic setting for a linear, stable model is radioactive decay. The rate at which the atoms in a mass of a radioactive isotope decay is a constant \\(\\alpha\\) that depends on the nuclear structure. A mass of \\(n\\) atoms will produce \\(\\alpha n\\) individual decay events in a given time interval. But, since each decay event reduces \\(n\\) by 1, the differential equation describing the number of radioactive atoms is \\[\\partial_t n = - \\alpha nt\\] which leads to exponential decay towards zero. Notice that only the \\(0 \\leq n\\) half of the state space is relevant, because the number of atoms can’t be negative. An example of a setting where the bounded stable model applies is one where \\(S\\) stands for the amount of prey or food stock, and there is a constant population of predators who have a limited capacity for eating. Consider, for example, \\(S\\) being the availability of acorns. There might be a fixed population of, say, oaks that produce acorns at a given rate. When predation is low, the acorns accumulate. But when there are a lot of acorns, predators might focus on that bountiful food source. Still, they can only eat so many acorns per day before they are full. Remember that in a differential equation \\(\\partial_t S = f(S)\\), the input to \\(f()\\) is has dimension \\([S]\\), while the output of \\(f()\\) has a different dimension: \\([S]/[t]\\). Thus, in the oak/acorn example above, the output of \\(f()\\) has a dimension corresponding to acorns per day, a rate of consumption. \\(S\\) is acorns, the output of \\(f(S)\\) is acorns per day. The linear unstable model is often used to model population growth. The underlying idea, which might or might not correspond to reality, is that there is a set reproduction rate per member of the population. The differential equation is \\[\\partial_t{S} = a S + c\\] with \\(S\\) being the size of the population. The parameter \\(c\\) captures immigration (\\(0 &lt; c\\)) or emigration (\\(c &lt; 0\\)). To be more detailed, the model can be written as summing a birth process and a death process: \\[\\partial_t S = b S - d S + c\\] where \\(b\\) is the birth rate and \\(d\\) is the death rate. Of course, the detailed model collapses arithmetically to the \\(a S + c\\) model, with \\(a = b - d\\). Still, elaborations on the birth or death processes may include the influence of changing factors. We’ll return to this idea in a bit. Take care to use the parameters \\(a\\) and \\(c\\) correctly. The output of \\(f(S) = a S + c\\) must have dimension \\([S]/[t]\\), for instance organisms per hour might be appropriate for bacteria. Thus the individual terms \\(aS\\) and \\(c\\) must have dimenion \\([S]/[t]\\). Consequently, the parameter \\(a\\) has dimension \\(1/[t]\\) as in per hour. That might seem odd until you remember that \\(a\\) is about the creation of new organisms, \\([S]/t\\), per existing organism. Thus the dimension of \\(a\\) is \\([S] / [S][t]\\) which works out to be simply \\(1/[t]\\). Example 51.1 \\(\\ \\) Under ideal reproductive conditions, some bacteria can split in two every 20 minutes. What does this tell us about \\(a\\)? It’s easy to get confused. For instance, a single bacterium that splits every 20 minutes will go from an initial population of \\(S=1\\) at time \\(t=0\\) to a population of \\(S=2\\) at \\(t=\\frac{1}{3}\\) hour to \\(S=4\\) at \\(t=\\frac{2}{3}\\) hour to \\(S=8\\) at \\(t=1\\) hour. This might make it seem that the reproduction rate is 8 per hour. But this calculation of the population size at hour 1 is redundant with the accumulation that will be accomplished in solving the differential equation. The correct way to calculate \\(a\\) from the stated information that there is a split every 20 minutes works like this: The dynamics are \\(\\partial_t S = a S\\). Therefore the solution is \\(S(t) = S_0 e^{a t}\\). According to the given information about splitting, when the initial condition is that \\(S(0) = 1\\), \\[S(1/3) = S_0 e^{a/3} = e^{a/3} = 2\\ .\\] Working from \\(e^{a/3} = 2\\) gives the parameter value we see: \\(a = 3 \\ln(2)\\). For bacteria, the linear unstable model may be realistic for short periods of time, or, more precisely, for as long as the population is small compared to the carrying capacity. (See Section 49.3/). In contrast, human and other animal populations often have an important age structure, which is just to say that neither a 6 nor a 60 year old person has the same reproduction rate as a 26 year old. Such an age structure calls for a dynamical state with multiple components. But if the environment is steady—no food shortages, no disease, economy unchanging, etc.—it can be reasonable to describe even age-structured populations as a percentage growth per unit time, e.g. percent per year. Realize that such a description is not only about the biology of reproduction, but summarizes the whole system of aging, death, and reproduction. This summary description may no longer be relevant when the system as a whole changes. An example of this in the human population is seen in countries where the number of births per woman has fallen substantially—by half or more—over the time of a generation. Such falls typically accompany a growth in economic wealth and the realization that more resources (e.g. education) needs to be provided to each offspring. A situation where the linear unstable model is realistic involves nuclear decay. Previously, we’ve pointed out that radioactive decay of an isotope is well modeled by the linear stable model. This leads the number of atoms of the radioactive isotope to decay exponentially. But there is an important exception. Some radioactive isotopes are fissile, for instance uranium-233, uranium-235, plutonium-239, and plutonium-241. Fissile materials decay via two different mechanisms. One is each-atom-on-its-own decay that applies generally to radioactive isotopes. The other mechanism involves the decay of one atom triggering the decay of others. The means of triggering involves a sub-atomic particle called a neutron. The decay of a fissile atom releases one or more neutrons, depending on the nuclear structure. If one of these neutrons has the correct energy, and if they collide in the appropriate way with a second fissile atom, that second atom will itself undergo decay, leading to the release of more neutrons. Such a process is called a chain reaction. Typically, a fissile chain reaction takes place inside an engineered device called a reactor. A simple differential equation of a chain reaction can be constructed using the number of neutrons in the reactor, and is \\[\\partial_t N = \\alpha N\\ .\\] As you’ve already seen, the solution to this is \\(N(t) = A e^{\\alpha t}\\): exponential growth. The value of \\(\\alpha\\) is determined by the design of the device. If the device is small, then neutrons can escape from the device before triggering a reaction, so alpha is small. If there are non-fissile neutron absorbers in the device, neutrons are taken out of play so, again, alpha is small and can even be negative. In everyday terms, rapid exponential growth is called an explosion. Exponential growth can’t continue forever, and indeed a fissile bomb blows itself up, resulting in negative \\(\\alpha\\) as the fissile material is scattered. Control of a fission bomb requires a mechanism that changes \\(\\alpha\\) from negative (stable \\(N\\), so no explosion) to positive. This can be accomplished, for instance, by bringing together pieces of fissile material that by themselves has negative \\(\\alpha\\) into a critical mass where \\(\\alpha\\) positive. Non-explosive nuclear reactions, as in power plants, call for a kind of juggling act. The device can’t have negative \\(\\alpha\\) or the reaction would die out exponentially. It can’t have positive \\(\\alpha\\) or the reaction would become explosive. A power reactors is designed to keep \\(\\alpha\\) near zero. Near zero not at zero. The reactor design needs to allow \\(0 &lt; \\alpha\\) to start up the reaction, but trim this down to zero when the reactor is at the desired power. Typically, there is some combination of active and passive mechanisms to provide this capability. An active mechanism is the insertion of “control rods,” which absorb neutrons by reactor operators to make \\(\\alpha &lt; 0\\) when the power generation is higher than desired. Passive mechanisms can involve the transformation of reactor water into steam, which reduces the ability of neutrons to induce new fissile decays. Reactors can be very complicated, however. The explosion of the Soviet Union’s Chernobyl reactor in 1986 was caused by a chain of events that led to control rods being withdrawn beyond the design intentions. Due to the construction of the rods, reinserting the rods to dampen the run-away reaction actually caused the reaction to accelerate. Avoiding such disasters requires a combination of safety oriented design and proper training of the operators. Neither of these were a feature of the 1980s Soviet environment, where secretiveness interfered with proper training and economic motivations to produce were so strong as to encourage widespread cheating. The bounded unstable model is a way to incorporate factors that interfere with sustained exponential growth. Exponential growth requires that the growth rate \\(\\partial_t S\\) increase as \\(S\\) increases: a kind of positive feedback. In the bounded model, the growth rate becomes constant for large \\(S\\). A constant growth rate means that \\(S\\) will grow steadily, that is \\(\\partial_t S = c\\) which has a solution that grows linear in time, as distinct from the exponential solution that results from \\(\\partial_t S = a S\\). An application of the bounded unstable model is seen in the description of micro-organism growth given by Jacques Monod (1910-1976), a Nobel Prize winning biochemist. His idea was that the organisms are reproducing in a kind of sea that has a limited concentration of an essential nutrient, but very large amounts of the nutrient spread out over space. Even though the nutrient is begin consumed by the organisms, more nutrient diffuses in from far away to keep the concentration steady. At large population sizes, the growth rate is nutrient concentration limited, hence constant. In Chapter 14 we introduced the idea of a modeling cycle: taking an initial model, examining the consequence/predictions of that model, and then modifying the model to better correspond to observed reality or new mechanism. A case in point is the linear unstable model for population growth. The linear model is always appropriate near a fixed point. This is just a consequence of the calculus idea that any function can be approximated by a linear function over a small enough domain. In defining derivatives, the question was what constitutes “small enough.” So a linear dynamical function is a good starting point for dynamics near a fixed point. But, as we’ve seen, extending the linear model far from the fixed point leads to population explosion: exponential growth. This can be a valid idea for modeling a pathogen growing in a bowl of room-temperature chicken salad: the pathogen need not consume all the salad to become a threat, so in the domain of interest—human health—the linear model can do the job. But we observe generally that exponential growth does not continue indefinitely. The demographer Thomas Malthus (1766-1834) famously propounded a “principle of population” which held that it is in the nature of populations to growth exponentially until linally limited by famine or disease. He wrote, “[G]igantic inevitable famine stalks in the rear, and with one mighty blow levels the population with the [lack of] food of the world.” Malthus’s model is exponential growth that runs into a wall of limited food. Malthus saw human reproduction as the engine of the immense poverty and suffering of the lower classes in early industrial Britain. This became the basis of an important political dispute, two poles of which are “there’s no point helping the poor, because they create their own poverty,” and “the poverty is due to exploitation, not reproduction.” For us in calculus, there’s a middle road: Malthus’s mathematical model, the unstable linear model, is much too abrupt and narrow minded and can easily be made more realistic. Adding that realism removes the “one mighty blow” from the situation. Let’s add that realism now. Recall the earlier suggestion that the linear unstable model \\(\\partial_t S = a S + c\\) be broken into components: \\[\\partial_t S = \\underbrace{b S}_{\\text{births}} - \\underbrace{d S}_{\\text{deaths}} + \\underbrace{c}_{\\text{immigration}}\\ .\\] Even in Malthus’s time, there were calls to alleviate poverty by encouraging people to leave for less crowded lands: emigration. In the dynamics, emigration corresponds to a negative value for \\(c\\). Making \\(c\\) negative does not do the job on its own. Note that whatever the value of \\(c\\), the dynamics are unstable. Emigration at a constant rate changes the location of the fixed point, but since the dynamics are unstable, growth will still be unbounded. Suppose, however, that government policy sets an emigration goal not as a constant number of people per year but as a constant fraction, \\(eS\\) of the population. Now the dynamics become \\[\\partial_t S = b S - d S - e S\\ .\\] These dynamics are stable or unstable depending on the value of \\(b - (d+e)\\). If that value is negative, the dynamics are stable, if positive, the dynamics are unstable. The situation resembles (mathematically) that of a nuclear power reactor: the control parameter \\(e\\) has to be carefully manipulated to set the population at a fixed level. But there are other things that come into play. One of them is that the parameter setting the death rate, \\(d\\), need not be constant. From Malthus’s perspective, \\(d\\) would change in episodes set by disease and starvation. In Malthus’s era, pandemics were common and wiped out a major fraction of the population in “one mighty blow.” Similarly, starvation plays out on a smaller time scale than reproduction and seems to cut through the population. But the death rate can also be a function of population \\(S\\). For instance, \\(d = d_0 + d_1 S\\) corresponds to a death rate that increases gradually with population size. (The parameters \\(d_0\\) and \\(d_1\\) are positive.) Similarly, birth rate can depend on population, that is \\(b = b_0 - b_1 S\\). As the population gets larger, there’s less food and less space, and these changes can reduce the reproduction rate. (The parameters \\(b_0\\) and \\(b_1\\) are positive.) These models for \\(d\\) and \\(b\\) are simplistic. Why should they have a linear form? The answer is … calculus. Whatever are the functions \\(b(S)\\) and \\(d(S)\\), they must be approximately linear over a small domain. Let’s plug in the refined models for birth and death rates into the population models. We get: \\[\\partial_t S = (b_0 - b_1 S) S - (d_0 + d_1 S) S - e\\ .\\] A little algebraic simplification reduces this to: \\[\\partial_t S = (b_0 - d_0) S - (b_1 + d_1) S^2 - e\\] Whatever are the size of the quantities \\(b_0, b_1, d_0, d_1\\), so long as they are positive, the dynamical function \\(f(S)\\) will have two fixed points, one at small \\(S\\) and the other at large \\(S\\). For small \\(S\\), the fixed point is unstable. The population will grow away from this fixed point. The fixed point at large \\(S\\) will be stable, hence no population explosion. One of the major flaws with the Malthusian viewpoint is that it treated all the dynamical functions as linear, whereas in reality the functions can have a quadratic shape. The classical differential equation for limited population growth, \\[\\partial_t S = a S (1-S/K)\\ ,\\] was introduced by Pierre-François Verhulst in 1838, just four years after Malthus’s death. Another important flaw with Malthus’s model is that it failed to account for the transition from purely agricultural economies to economies that produced large amounts of other goods and services. It turns out as populations grow wealthier, their reproduction rates decrease. With wealth available in non-food terms—clothing, public health, education—reproduction rates can go down even without the “one mighty blow” of starvation and disease. The next section examines both of these factors—the introduction of multiple state variables and the ability to “soften” the explosive unstable linear dynamics with nonlinear corrections—in making subtle models of the behavior of systems. 51.2 Multiple state quantities The previous section examined dynamics of a single state variable. Now we will consider the possibilities when there is a second state variables. It turns out that adding more state variables above two does not introduce many fundamentally new behaviors, so we’ll focus on dynamical systems with two variables. We’ll continue to use capital letters, like \\(S\\), to stand for the state variables. But with two (or more) state variables, we’ll need to give them different names so we can keep tract of what’s doing what to what. The parameters in the dynamical functions will, as has been our practice, be written as lower-case letters, such a, b, r, c, and so on. A starting observation is that for dynamics to be genuine two-dimensional, the differential equations for the state variables need to be coupled to one another. For example, a dynamical system that nominally has two state variables \\(X\\) and \\(Y\\) is: \\[\\partial_t X = f(X)\\\\ \\partial_t Y = g(Y)\\ .\\] The state variables here are not coupled, since the change in each variable depends only on the value of that variable and not on the other. Coupled state variables have dynamics that look like this: \\[\\partial_t X = f(X, Y)\\\\ \\partial_t Y = g(X, Y)\\ .\\] The time evolution of each state variable depends on the other state variable. The most mathematically simple form of coupled dynamics is this: \\[\\partial_t R = a B\\\\ \\partial_t B = c R\\ .\\] What type of real-world setting might such a simple model correspond to? Surprisingly, even this simple model has important things to say about complex phenomena such as love and warfare. We’ll start with warfare, where the signs of the parameters are easy to determine. The model, called Lanchester’s Law, is \\[\\partial_t R = - b B\\\\ \\partial_t B = -r R\\\\] with both parameters \\(r\\) and \\(b\\) taken to be positive. The state variables \\(R\\) and \\(B\\) stand for the size of the two armies in conflict: the Red army versus the Blue army. As the two armies meet in battle, the Blue army causes casualties in the Red army. These casualties reduce the size of the Red army. Similarly, the Red army causes casualties in the Blue army. The model describes the rate of reduction in the armies as being proportional to the size of the opposing army. But the two armies can be different in their efficiency of causing casualties, reflected by possibly different values of the \\(r\\) and \\(b\\) parameters. The dynamics are not exponential. Exponential decay of the army size would correspond to a model like \\(\\partial_t R = - r R\\), an army fighting itself. But the Lanchester model has \\(\\partial_t R = - b B\\). We’ll defer for a moment finding the trajectories of the state variables in the course of battle. (Hint: in the model, one army wipes out the other.) Instead, we’ll focus on a surprisingly rich implication of of such simple dynamics. Lanchester’s Law has a surprising consequence for measuring the overall strength of a force in a way that combines size (\\(R\\) and \\(B\\)) and effectiveness (\\(r\\) and \\(b\\)) and the implications that has for tactics. Lanchester proposed that the quantity \\[Q(R, B) \\equiv rR^2 - b B^2\\] is a good way to characterize the dynamics. His reasoning was based on a fundamental idea from physics and chemistry: that quantities are conserved. In physics, examples of conserved quantities are energy, momentum, and angular momentum. In chemical reactions, the number of atoms of each species is conserved. It’s hard to say how Lanchester came up with the formula \\(rR^2 - b B^2\\): insight is hard to explain. But we can easily demonstrate that it is conserved, that is, the quantity doesn’t change in time regardless of how the battle proceeds. We’ll do this by showing \\(\\partial_t Q(R, B) = 0\\). \\[\\partial_t Q(R, B) = \\partial_t \\left[\\strut rR^2 - b B^2\\right]\\] Applying the chain rule we find that \\[\\partial_t r R^2 = 2 r R\\, \\partial_t R\\ \\ \\ \\ \\text{and}\\ \\ \\ \\partial_t b B^2 = 2 b B\\, \\partial_t B\\ .\\] Substituting in \\(\\partial_t R = - b B\\) and \\(\\partial_t B = - r R\\) gives \\[\\partial_t Q(R, B) = - 2 r b R B + 2 b r B R = 0\\ .\\] The conserved quantity \\(Q(R, B)\\) describes an aspect of the battle that goes unchanged over the course of the battle. At any moment, it describes the match between the overall capability of the two armies. That the difference between the capabilities is conserved does not mean the individual capabilities are unchanged in battle. Those capabilities decrease as the army sizes, \\(R\\) and \\(B\\) are reduced. But at any instant in time, the capability of each army is proportional to the square of the army size. change The consequence, is that the capability of each army is, at all times, To illustrate, consider a battle between two armies of archers. The B-army archers are more skilled: they can fire 12 arrows per minute. The R-army archers can fire at only have the rate—6 arrows per minute. But the R army is twice the size of the B army. Are the armies equally matched. It may at first glance seem so, since both armies can fire at the same rate. For instance, if there are 1000 archers in the R army and 500 in the B army, both armies start out capable of firing 6000 arrows per minute. But Lanchester’s Law tells us that the R army is twice as capable as the B army: \\(6 \\times 1000^2\\) is twice as big as \\(12 \\times 500^2\\). To see why the R army is superior, remember that each arrow can take out only one of the opposing archers. For each B arrow that’s on target, the firing rate of R is reduced by 6 arrows per minute. But for each R arrow that hits, the firing rate of B is reduced by 12 arrows per minute. The initial casualty rate for the two armies is the same, but B sees a twice as large reduction in its firing rate. Frederick William Lanchester (1868-1946) was a British engineer, considered one of the greats of British automotive engineering. But that hardly does justice to him. While voyaging across the Atlantic to America, he became captivated by the gliding flight of herring gulls. This led to his development of his circulation theory of flight, a foundation of aerofoil theory. In 1906 he published Aerial Flight containing the first full theory of lift and drag. In Aerodonetics (1908) he developed his phugoid theory of aircraft stability, describing oscillations and stalls. In 1914, Lanchester wrote a book-length series of journal articles that were published in 1916 as Aircraft in Warfare: the Dawn of the Fourth Arm. Imagine trying to theorize about a form of conflict that had never been seen! The difficulty … is that in order to get the future into true perspective, it is necessary to be able to look forward along two parallel lines of development—i.e. to visualize the improvement of aircraft possible in the near future as a matter of engineering development, and simultaneously to form a live conception of what this improvement and evolution will open up in the potentialities of the machine as an instrument of war. (p.3) Mathematician Steven Strogatz proposed in the 1990s that similar equations might be used to describe how love between two people varies over time. Strogatz’s equations are usually written with state variables R and J, standing for Romeo and Juliet. Positive values represent love, negative values are hate. And best to think of the model as a cartoon, but a cartoon that captures some of the behavior seen in reality. To start, let’s consider a form of love that is really more like warfare: \\[\\partial_t R = -j J\\\\ \\partial_t J = - r R \\ .\\] In this pathological relationship, the more Romeo loves Juliet, the faster Juliet’s love decreases toward hate. And vice versa. Imagine that, somehow, these two perverse people started out in love: \\(R(t=0) &gt; 0\\) and \\(J(t=0) &gt; 0\\). As with Lanchester’s Law, both lovers fall increasingly out of love. Depending on the initial intensity of their love and whether or not \\(jJ^2\\) is bigger than \\(rR^2\\) (Lanchester’s conserved quantity), one of the parties will become indifferent, that is, a love level of 0 while the other’s love level is still positive. For the purpose of example, let’s suppose that Juliet is the first to reach indifference. But unlike the warring armies, the love quantity can become negative. As Juliet’s love becomes negative—remember, Romeo still has a positive level of love—then the true perversity of Romeo’s personality becomes apparent. Juliet’s increasing hostility causes Romeo’s love to grow. Without bound, because this is a linear dynamical function. The result is that Juliet’s hate increases even while Romeo’s love increases. But don’t blame Juliet. If Romeo had been the first to reach indifference, Juliet would suffer the unrequited love and Romeo would be villainously hateful. Strangely, if Romeo and Juliet started out mutually hating each other, their personalities would still lead to one having unbounded love for the other, who hates their partner without limit. A mathematically small change in the Romeo-Juliet dynamical system can lead to a profound change in the outcome. For instance, changing one sign, as in \\[\\partial_t R = r J\\\\ \\\\partial_t J = - j J\\ ,\\] produces, as we’ll see, a never-ending cycle of alternating love/hate. The two dynamical functions in the previous examples, \\(-r R\\) and \\(-j J\\) are low-order polynomials. A sensible human being might suggest that the constant term in the polynomials should be added, but the cold, analytic mind of the mathematician would see that this would only change the location of the fixed point and not its stability. That suggests that the next more complicated model to consider involves includes both variables in the dynamical function. Like this: \\[\\partial_t R = a R + b J\\\\ \\partial_t J = c R + d J\\ ,\\] where the coefficients \\(a, b, c, d\\) might be either positive or negative depending on the personality of the lovers. Analysis of this model will have to await the introduction of new mathematical tools in Chapter 53. Whether Strogatz’s love model is realistic or not, it does illustrate a basic idea of model building: start with simple dynamical functions, check out their consequences, then modify the dynamical functions. We’re going to do this now, with the modifications being purely mathematical along the lines of including different terms in low-order polynomial approximations and considering positive and negative coefficients. As you’ll see, the simple models correspond to a surprisingly wide range of behaviors. 51.3 Classical phase-plane models We have been using the term state space to refer to the set of possible values for the state variables. When there is only one state variable, the state space corresponds to the number line, or perhaps just the positive half of the number line. When there are two state variables, the state space corresponds to the coordinate plane; any point in the plane is a legitimate state for the system. Historically, another term is used for the two-variable state space: the phase plane. This is just a matter of terminology, but it is so prevalent that you will occasionally see it mentioned. We don’t use it since dynamical systems can have a state space that is 1, 2, 3, or higher dimensional, but the phrase “phase plane” only works for 2-dimensional state spaces. In this section, we’ll look at some famous models that involve two state variables. Out of respect for history, we’ll call these “classical phase plane” models, but this is entirely equivalent to saying “classical dynamical models with two state variables.” Our purpose in studying these classical models is two-fold: to show how simple models can make it easier to draw out the consequences of the mechanisms that we think are at work in real-world systems; and to show you how modifications to purely linear models can produce dynamics that are realistic even away from fixed points. To start, let’s return to the Rabbit-Fox dynamics models. Classically this is called the predator-prey model. It’s also called the “Lotka-Volterra” model in honor of it’s inventors: American biophysicist Alfred Lotka (1880-1949) and Italian mathematical physicist Vito Volterra (1860-1940). The two first-order differential equations in the Lotka-Volterra model are \\[\\partial_t R = \\alpha R - \\beta F R\\\\ \\partial_t F = \\delta F R - \\gamma F\\] each of which contains a linear term (\\(\\alpha R\\) in the \\(R\\) equation, \\(\\gamma F\\) in the F equation). Each equation also contains an interaction term. Here, the mathematical/statistical name for the product of two quantities corresponds nicely with the physical reality that the terms describe what happens to rabbits when they interact with a fox, and similarly what happens to foxes. The parameters \\(\\alpha, \\beta, \\gamma\\), and \\(\\delta\\) can, mathematically, be either positive or negative, but they make sense in terms of rabbits and foxes only if all of them are positive. So the “interaction” is always negative for the rabbits and positive for the foxes. Rewriting the model provides a bit of insight: \\[\\partial_t R \\ = \\underbrace{(\\alpha - \\beta F)}_{k_R} R\\\\ \\ \\\\ \\partial_t F = \\ \\underbrace{(-\\gamma + \\delta R)}_{k_F} F\\ . \\] Think about the \\(k_R\\) and \\(k_F\\) terms as the reproduction rates. If the fox population were constant, then the rabbit dynamics would be exponential growth or decay, depending on the sign of \\(k_R = \\alpha - \\beta F\\). Similarly, if the rabbit population were constant, the fox dynamics would be exponential decay or growth, depending on the sign of \\(k_F = -\\gamma + \\delta R\\). The two equations are coupled so that the rabbit population alternating between growth and decay leads the fox population to so alternate, and vice versa. 51.4 Epidemic In a communicable disease, such as COVID-19, the infectious agent is transmitted from an infective person to another person who is susceptible. The time course of an epidemic can be modeled simply with two state variables. We’ll let \\(S(t)\\) be the number of susceptible people and \\(I(t)\\) the number of infective people at any time \\(t\\). The dynamics of the \\(S\\) variable can be simple: \\(S\\) changes when an infective person meets (interacts with!) a susceptible person. That susceptible person, with some probability, becomes infective. So \\[\\partial_t S = -\\beta S I\\ .\\] The dynamics of the \\(I\\) variable are a just a little more complicated. First, every person who is converted from susceptible to infective becomes a new infective. This is the \\(\\beta S I\\) term in the following differential equation. Second, infectives gradually recover. This is often modeled as a simple \\(-\\alpha I\\) term. \\[\\partial_t I = \\beta S I - \\alpha I\\] This is famously called the SIR model, standing for the susceptible, infective, recovered chain of events. In the model, recovery means “no longer able to infect.” Thus, a person who has been isolated is considered “recovered,” whether or not they display symptoms of the disease. We usually think of recover in terms of a time span, for instance taking a week to recover. But \\(\\alpha I\\) doesn’t work this way. To see why, consider the situation starting on the day that there are no more infective people, that is, \\(S=0\\). The dynamics from this day forward are simplified: \\(\\partial_t I = =\\alpha I\\). Of course, the solution to this simplified differential equation is \\(I(t) = I_0 e^{-\\alpha t}\\); the size of the infective group gets smaller exponentially. Figure 51.2 compares what \\(I(t)\\) would look like if it takes, say, one week to recover and what \\(I(t)\\) looks like under the model’s \\(\\partial_t I = =\\alpha I\\) dynamics. Figure 51.2: Comparing \\(I(t)\\) for the “takes a week to recover” model and the \\(\\partial_t I = -\\alpha I\\) model. To show the dynamics of the SIR model, we need to propose numerical values for \\(\\alpha\\) and \\(\\beta\\). This is not a trivial matter if the goal is to match the dynamics to a particular disease and size of population. For our purposes here, we’ll imagine that \\(S(0) = 0.999\\) and \\(I(0) = 0.001\\), which is to say we are looking at the proportion of the population that is susceptible or infective. Figure ?? shows the flow field for \\(\\beta = 1/2\\) and \\(\\alpha = 1/7\\). T1 &lt;- integrateODE(dS ~ -.5*S*I, dI ~ .77*S*I - I/1.75, S=0.999, I=0.001, tdur=200) traj_plot(S(t) ~ t, T1) 51.5 Exercises Exercise XX.XX: VCWRBs You and your older cousin are on a road trip. She rented a car that has not only “cruise control” (a technology from the 1970s that holds a constant speed without driver intervention) but also “car following,” that keeps the car a set distance \\(D\\) behind the car in front. Your cousin, knowing that you are a CalcZ student, asks you how the “car following” system works. First, define some terms. You tell your cousin to denote the current, instantaneous distance from the car ahead as \\(\\xi\\). You point out that when \\(\\xi - D &gt; 0\\), you’re a greater distance than \\(D\\) from the car ahead and therefore the velocity should be increased so you catch up. On the other hand, when you’re too close (\\(\\xi &lt; D\\)) you should decrease your velocity. The car-following system automates this, the relationship being \\(\\partial_t \\xi = b (\\xi - D)\\). Your cousin has never encountered a name like \\(\\xi\\) so you decide to simplify. “Let \\(x = \\xi - D\\), so \\(x\\) is positive if you are too far behind, zero when you’re at the right distance, and negative if you are too far ahead.” Conveniently \\(\\partial_t x = \\partial_t \\xi\\), so you can write down the automatic relationship in terms of \\(x\\): \\(\\partial_t x = b x\\) with \\(b\\) a positive number, such as 1. Question A Where is the fixed point of the dynamics \\(\\partial_t\\, x = b x\\)? \\(x=D\\)︎✘ No, it should be \\(\\xi=D\\), which means that \\(x=0\\). \\(x=0\\)Right!  \\(\\xi = 0\\)︎✘ This corresponds to zero distance between you and the car in front of you. Not what we want! There’s no fixed point.︎✘ Question B Is the fixed point of \\(\\partial_t\\, x = b x\\) (with \\(b &gt; 0\\)) stable? Yes, that’s why we can leave it to the automatic system.︎✘ True, we would want the automatic system to show stable fixed point behavior, but that’s not what’s happening here. No, the solution grows exponentially as \\(e^{bt}\\).Right!  Yes, the solution decays exponentially as \\(e^{bt}\\)︎✘ But since \\(b &gt; 0\\), this wouldn’t be exponential decay but growth. Something’s wrong with the system you’ve sketched out. You want a stable following distance, doing the right thing if the car ahead speeds up or slows down, but your system is unstable. Question C Which of the following rules will have a stable fixed point at \\(x=0\\)? \\(\\partial_t\\, x = -b x\\) (with \\(b &gt; 0\\))Right!  \\(\\partial_t\\, x = b^2 x\\)︎✘ The coefficient on \\(x\\) is still positive, so this system is unstable. \\(\\partial_t\\, x = b x^2\\)︎✘ This system is stable for disturbances that make \\(x &lt; 0\\), but unstable for disturbances that make \\(x &gt; 0\\). \\(\\partial_t\\, x = 0 x\\)︎✘ In this system, \\(x\\) doesn’t change. The word “feedback” is used to describe systems where the change in the state is a function of the state. “Negative feedback” is when the change is negative when the state is positive, as in \\(\\partial_t\\, x = -b\\, x\\). Negative feedback is desirable when you want to keep things stable. “Positive feedback” is when the change is the same sign as the state, as in \\(\\partial_t\\, x = b\\, x\\) and makes things unstable. Exercise XX.XX: BbcPyk Here are three different first-order differential equations with fixed points at \\(x^\\star = 0\\) and \\(x^\\star=1\\). \\(\\partial_t x = g_1(x) \\equiv x (1-x)\\) \\(\\partial_t x = g_2(x) \\equiv 0.25 \\sin(2\\pi x)\\) \\[\\partial_t x = g_3(x) \\equiv \\left\\{\\begin{array}{ll} x &amp; x &lt; 0.18\\\\ 0.18 &amp; 0.18 \\leq x \\leq 0.82\\\\ 1 -x &amp; 0.82 &lt; x \\end{array}\\right.\\] The \\(g_i()\\) functions are graphed below. A. For each of the equations, match the number (i, ii, iii) to the color (magenta, blue, black). Comment on the differences in shape among them. B. Integrate each of the differential equations from initial condition \\(x_0 = 0.01\\). Compare the time series plots. Do the dynamics of \\(g_3()\\) product a similar or radically different time series than \\(g_1()\\) and \\(g_2()\\)? Comment: Usually, many different mathematical functions can be used to model a given phenomenon. The different functions will have similar shapes, but do not need to be identical. Exercise XX.XX: trcQuC Lewis Fry Richardson (1881-1953) was an English scientist who worked in many areas, including weather prediction. (See Block 1.) This problem concerns a model Richardson built to account for arms races between countries. In the model, \\(x\\) and \\(y\\) respectively refer to the size of the military of the two countries. The equations model how the size of the militaries change in time: \\[\\begin{eqnarray*} \\dot{x} &amp; = &amp; a y - m x + r\\\\ \\dot{y} &amp; = &amp; b x - n y + s\\\\ \\end{eqnarray*}\\] The terms \\(r\\) and \\(s\\) represent the basic grievances between the two countries. The parameters \\(a\\) and \\(b\\) represent “fear,” that is, the extent to which one country feels the need to build up arms in response to the other country’s arms. The parameters \\(m\\) and \\(n\\) are about the internal dynamics of the country: its ability/desire to sustain a large military. Question A What should the signs of \\(r\\) and \\(s\\) be if the countries have substantial grievances against each other?     positive\\(\\heartsuit\\ \\)       negative︎✘        zero︎✘ Question B What should be the signs of \\(a\\) and \\(b\\), given that they represent “fear?”     positive\\(\\heartsuit\\ \\)       negative︎✘        zero︎✘ Question C What should be the signs of \\(m\\) and \\(n\\), in a country which, on its own, would not like to build a large military? Note the sign preceeding these terms.     positive\\(\\heartsuit\\ \\)       negative︎✘        zero︎✘ Depending on the values of the parameters \\(a\\), \\(b\\), \\(m\\), \\(n\\), \\(r\\), and \\(s\\), the Richardson dynamics can produce different outcomes. Two of the previous three plots show Richardson Arms Race dynamics for two mutually fearful countries with mutual grievances, Freedonia and Jockavia. The third plot does not; the signs of one of the coefficients has been reversed and so the dynamics don’t make sense for modeling an arms race. In each of the three plots, start from initial point \\(x=2,y=1\\), that is, a situation where Freedonia is more armed than Jackavia, and trace out the trajectory over time. For each of the three plots, find any equilibrium point and say whether it is stable or unstable. If there is no equilibrium, move on. Identify which of the three plots is NOT the Richardson dynamics. In the non-Richardson flow, which coefficient has been reversed: it’s one of \\(a\\), \\(b\\), \\(m\\), \\(n\\), \\(r\\), or \\(s\\). Question D Which of the previous plots are Not the Richardson Dynamics?     Flow Field A\\(\\heartsuit\\ \\)       Flow Field B︎✘        Flow Field C︎✘ Question E In this plot which if the parameters is reversed?     a\\(\\heartsuit\\ \\)       b︎✘        m︎✘        n︎✘        r︎✘        s︎✘ Exercise XX.XX: iCYry2 In the description of the SIR model, we pointed out how a model of recovery \\(\\partial_t I = -\\alpha I\\) differs from the usual “recover after 7 days” style of description. (See Figure 51.2.) Find a value of \\(\\alpha\\) such that the expectation value of the time to recovery is 7 days. To do this: Find a formula for the function \\(I(t)\\) from the differential equation. Guess an appropriate value for \\(\\alpha\\). Construct the appropriate integral using \\(I(t)\\) to find the expectation value of \\(t\\). (See Chapter 35.) Modify your guess for \\(\\alpha\\) until the expectation value comes out to 7. ## # A tibble: 1 × 2 ## t .output. ## &lt;dbl&gt; &lt;dbl&gt; ## 1 0.378 -0.00000187 ```&lt;/details&gt; EXERCISE: Lanchester&#39;s Laws: Show that the conserved quantity is indeed conserved: **Question A** Calculate $\\partial_t r R^2$. Which of these is right? (Hint: Use the chain rule of differentiation and Lanchester&#39;s equations to simplify more.)     &lt;span class=&#39;Zchoice&#39;&gt;$-2 rb RB$&lt;span class=&#39;mcanswer&#39;&gt;$\\heartsuit\\ $&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;$2rR$&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;$-2r\\dot{R}$&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;$2r\\dot{R} B$ &lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt; **Question B** Perform the similar calculation $\\partial_t b B^2$. Is it the case that $\\partial_t r R^2 = \\partial_t b B^2$?     &lt;span class=&#39;Zchoice&#39;&gt;Yes&lt;span class=&#39;mcanswer&#39;&gt;$\\heartsuit\\ $&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;No&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;Depends on $b$ and $r$.&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;Depends on $B$ and $R$.&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt; Here are two more candidates for conserved quantities: a. $rR - bB$ b. $rB - bR$ Take the derivative with respect to time of each of them to determine if they are conserved. **Question C** Which of (a) and (b) are conserved?     &lt;span class=&#39;Zchoice&#39;&gt;Just (a).&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;Just (b).&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;Both (a) and (b).&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;Neither (a) nor (b).&lt;span class=&#39;mcanswer&#39;&gt;$\\heartsuit\\ $&lt;/span&gt;&lt;/span&gt; EXERCISE: Lanchester&#39;s Laws: **Question D** Which of the three flows below corresponds to Lanchester&#39;s Law?     &lt;span class=&#39;Zchoice&#39;&gt;A&lt;span class=&#39;mcanswer&#39;&gt;$\\heartsuit\\ $&lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;B&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt;       &lt;span class=&#39;Zchoice&#39;&gt;C&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt; **Question E** Which of these sentences best describes the dynamics of Lanchester&#39;s Law? i. &lt;span class=&#39;Zchoice&#39;&gt;Both forces battle to complete annihilation.&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt; ii. &lt;span class=&#39;Zchoice&#39;&gt;The stronger force wipes out the weaker force.&lt;span class=&#39;mcanswer&#39;&gt;Correct. &lt;/span&gt;&lt;/span&gt; iii. &lt;span class=&#39;Zchoice&#39;&gt;The weaker force holds off the stronger force.&lt;span class=&#39;mcanswer&#39;&gt;︎✘ &lt;/span&gt;&lt;/span&gt; EXERCISE: Find the stable fixed point in these dynamics as functions of $b_0, b_1, d_0, d_1$. EXERCISE: 1) Show that $V(R, F) = \\delta R - \\gamma \\ln(R) + \\beta F - \\alpha \\ln(F)$ is a conserved quantity. 2) This means that each of the level curves (contours) in the contour plot of $V(R, F)$ is follows the path of a trajectory. 3) Choose an appropriate initial condition and draw the trajectory that corresponds to one of the contours in your graph. ```r # NEED TO INTEGRATE STREAMLINES() alpha=.66; beta = 1.33; gamma=1; delta = 1 V &lt;- makeFun(delta*R - gamma*log(R) + beta*F - alpha*log(F) ~ R &amp; F) contour_plot(V(R, F) ~ R &amp; F, domain(R = .1:3, F=0:2), skip=0, contours_at = c(1.6, 1.7, 1.9, 2, 2.15, 2.2, 2.3, 2.5, 2.8, 3, 4)) # math141Z::streamlines(list(~ alpha*R - beta*R*F, ~ delta*F + gamma*R*F ), # domain(R = .1:3, F=0:2)) EXERCISE: COMPUTE numerically the trajectories for the various models of love and war. The history of the 20th century is that parameter \\(d_1\\) has decreased, as public health measures such as sanitation and vaccination have become more widespread. Similarly, \\(b_1\\) became smaller, an observation attributed to link between higher standard of living and the costs (and necessity) of education. Afghanistan has a reported rate of just over 4 births per woman, Mexico 2 births per woman, and Canada 1.5 births per woman. South Korea has a fertility rate of about 1 birth per woman. END OF EXERCISE EXERCISE * Newton’s Law of Cooling is about how a hot (or cold) object comes into equilibrium with the ambient temperature. For instance, you might have a cup of coffee at \\(200^\\circ\\)F in a room at \\(70^\\circ\\)F. Unless you drink it, the coffee will cool with time until it reaches the room’s temperature. In this setting, \\(x_\\text{fixed} = 70^\\circ\\)F. The value of \\(a\\) depends on how insulated the cup is (and details of evaporation, etc.). But if the coffee reaches very near to room temperature in 60 minutes, \\(a \\approx 0.5\\) with units 1/minute. Question F What are the units of the output of \\(x(t)\\)?     degrees F per minute︎✘        degrees F\\(\\heartsuit\\ \\)       1/minute︎✘        1/degrees F︎✘ Question G What are the units of \\(\\dot{x}\\)?     degrees F per minute\\(\\heartsuit\\ \\)       degrees F︎✘        1/minute︎✘        1/degrees F︎✘ Question H What is \\(x\\)? the room temperature︎✘ the initial temperature of the coffee︎✘ the instantaneous coffee temperature as a function of timeGood.  the fixed rate at which the coffee cools︎✘ the instantaneous rate at which the coffee cools as a function of time︎✘ Question I What is \\(\\dot{x}\\)? the room temperature︎✘ the initial temperature of the coffee︎✘ the instantaneous coffee temperature as a function of time︎✘ the instantaneous rate at which the coffee cools as a function of timeNice!  EXERCISE Limited growth, e.g. \\(\\dot{x} = r x (1-x/k)\\) The proportional-growth model will lead to \\(x(t)\\) increasing without limit. Sometimes that’s a good model over short times, before \\(x(t)\\) has a chance to get unrealistically big. But over long periods of time, something’s gotta give. Population with a “carrying capacity.” For \\(t\\) when \\(x(t)\\) is very small, the population growth is well approximated by the usual proportion-growth model. For intermediate \\(t\\), the population has grown to a large enough size that it is consuming a substantial fraction of the available resources and population growth slows. When the population reaches the “carrying capacity” the growth stops (e.g. birth rate = death rate). Question J If the units of \\(x(t)\\) is, say, rabbits, what is the units of \\(k\\)?     rabbits\\(\\heartsuit\\ \\)       rabbits per day︎✘        rabbits per week︎✘        rabbits per year︎✘ Question K Suppose the units of \\(\\dot{x}\\) is, rabbits per month, what is the units of \\(r\\)?     1/month\\(\\heartsuit\\ \\)       rabbits per month︎✘        months per rabbit︎✘        rabbits per month-squared︎✘ Question L Even without finding the full solution \\(x(t)\\) to the differential equation, you can figure out how big the population will be when growth falls to zero. How big?     \\(k\\)\\(\\heartsuit\\ \\)       \\(k/r\\)︎✘        \\(r/k\\)︎✘        \\(1/r\\)︎✘ EXERCISE: Competition Our model for strong competition is \\[\\partial_t x = x(3 − x − y)\\\\ \\partial_t y = y(4 − y − 2x)\\] and for weak competition we take \\[\\partial_t x= x(4 − y − 2x)\\\\ \\partial_t y = y(3 − x − y)\\ .\\] A. Plot the flow fields. What is it about the models that justifies the labels “strong competition” and “weak competition.” –&gt; "],["equilibria.html", "Chapter 52 Equilibrium and transient 52.1 One state variable 52.2 Two state variables", " Chapter 52 Equilibrium and transient Many of the natural and constructed objects and systems that we encounter—buildings, bridges, airplanes, the orbits of satellites, heating systems, birds in flight, and so on—are more fully understood if seen as dynamical systems. That may seem strange; a building doesn’t move (we hope!), an airplane stays in steady flight, the seasons have been steady in their progression for as long as records have been kept. And yet … a building might be shaken and even destroyed by an earthquake, airplanes require pilots and control systems for steady flight. Even satellites in far Earth orbit can drift from their desired positions and attitudes and require control corrections. A system is said to be in steady state when it stays put, unchanging. Another term often used to express such constancy is equilibrium which occurs when the various forces or processes acting on the system balance out. In the language of dynamical systems, the equilibrium state of a system is called a fixed point. Mathematically, this is a coordinate in the state space where all the right-hand sides of the differential equations equal zero. For a two-dimensional system with dynamics \\[\\partial_t x = f(x, y)\\\\\\partial_t y = g(x,y)\\ ,\\] a fixed point will be a particular value for the state which we’ll write as \\((x^\\star, y^\\star)\\) where both \\(f(x^\\star, y^\\star) = 0\\) and \\(g(x^\\star, y^\\star) = 0\\). An important vocabulary word in dynamics is transient. In everyday speech, this means something like “just passing through.” It’s the same in dynamics: that part of the trajectory which precedes stable, fixed behavior such as at a fixed point. Transients occur whenever a dynamical system has an initial state not on a stable, fixed state. They are also common in systems that are disrupted by some external force, for example in the recovery of an electrical power distribution grid after a disturbance such as an ice storm. After a sharp bang, the ringing in your ears is a transient. When you stand up too suddenly, the “stars” you see are a transient due to diminished blood flow. Turn on an oven? The transient is the warming up until the oven reaches the temperature setting. Although transients are … well, transient, they can be very important. Key to the Wright Brothers success was their recognition that air turbulence elicits transients in attitude and that aircraft need control systems that can work fast enough for the craft to survive the transient. If you have driven a car with a broken suspension, you’ll know that it can be hard to control after the transient caused by hitting a bump in the road. Small disturbances often elicit transients that decay away exponentially. Such transients, like all exponentially decaying processes, can be characterized by a half life: the time it takes the transient to shrink to half its original value. (Not all transients decay exponentially, but that’s a story for another course.) In this chapter, we’ll study the quantitative response to dynamical systems with a fixed point when the state is perturbed by some outside force. Our focus will be on linear or linearized dynamical functions, which are generally an excellent description of dynamics near a fixed point. 52.1 One state variable Linear systems with one state variable have simple dynamics: \\[\\partial_t y = k y\\] which has a fixed point at \\(y^\\star = 0\\). Even dynamics like \\(\\partial_t x = k x + b\\) can be easily transformed into this simple form; the fixed point is \\(x^\\star = - b/a\\) and defining \\(y \\equiv x - x^\\star\\) gives the \\(\\partial_t y = k y\\) form. The solution is also simple: \\(y(t) = y_0\\ e^{kt}\\), where \\(y_0\\) is the initial condition on \\(y\\). If the parameter \\(k &lt; 0\\), the dynamics are exponential decay to the fixed point. If \\(0 &lt; k\\), the dynamics are exponential growth away from the fixed point. 52.2 Two state variables If the state variables \\(x\\) and \\(y\\) are measured with respect to a fixed point, the differential equation of the linear or linearized system is: \\[\\partial_t x = a x + b y\\\\ \\partial_t y = c x + d y\\] Exponentials are an important form of ansatz for linear differential equations. To show why, let’s review the solution to \\(\\partial_t x = k x\\), but assume that all we know is that the solution is an exponential function of time: \\(x(t) = A e^{\\lambda t}\\) and that we don’t yet know the parameters \\(A\\) or \\(\\lambda\\). As usual for an ansatz, we plug it into both sides of the differential equation, giving \\[\\partial_t A e^{\\lambda t} = k A e^{\\lambda t}\\ \\ \\implies \\lambda A e^{\\lambda t} = k A e^{\\lambda t}\\ \\ \\implies \\lambda = k\\ .\\] Now we know the value of \\(\\lambda\\). What about \\(A\\)? Evaluate the solution at \\(t=0\\). This gives \\(x(0) = A e^{\\lambda 0} = A\\). So we know \\(A\\) is the initial condition \\(x(0)\\) (which we usually abbreviate \\(x_0\\)). We’ll try the same approach with the two-state variable system, but we’ll start with a special case where some of the parameters \\(a, b, c\\), and \\(d\\) are zero. \\[\\require{cancel}\\text{Simplification:}\\ \\ \\ \\ \\ \\begin{array}{l}\\partial_t x = \\cancel{ax} + b y\\\\\\partial_t y =\\ c x + \\cancel{dy}\\end{array}\\ .\\] We’re going to modify the equations a little, specifically, we’ll take the derivative with respect to time of both sides of the top equation, giving: \\[\\begin{array}{c}\\partial_{tt} x = b\\ \\partial_{t\\ }y\\\\ \\partial_{t\\ } y = \\ \\ c x \\ \\ \\end{array}\\ .\\] Substitute in the value for \\(\\partial_t y\\) from the bottom equation to get a single, second-order differential equation: \\[ \\partial_{tt} x = b\\, c\\, x\\ .\\] Plug in the usual ansatz, \\(x(t) = A e^{\\lambda t}\\) to get \\[\\lambda^2 A e^{\\lambda t} = b\\,c\\, A e^{\\lambda t}\\ \\ \\ \\implies\\ \\ \\ \\ \\lambda = \\pm \\sqrt{\\strut b\\,c}\\] The \\(\\pm\\) is the interesting part here. If, say, \\(b=1\\) and \\(c=1\\), there are two values for \\(\\lambda\\) that will be consistent with the differential equation: \\(\\lambda_1 = 1\\) and \\(\\lambda_2 = -1\\). Either of these will produce a solution that satisfies the differential equation: \\(x_1(t) = A e^{\\lambda_1 t}\\) or \\(x_2(t) = B e^{\\lambda_2 t}\\). So which of the two possibilities is it? Since everything about the differential equation is linear, any linear combination of the two possibilities will also satisfy the equation. So we can conclude that \\[x(t) = A e^{\\lambda_1 t} + B e^{\\lambda_2 t}\\ .\\] What are \\(A\\) and \\(B\\)? That depends on the initial condition. Evaluate both sides of the equation at \\(t=0\\) to get \\[x(0) = A e^{\\lambda_1 0}+ B e^{\\lambda_2 t} = A + B\\ .\\] At this point, you need to look back at the original system of equations. There are two state variables \\(x\\) and \\(y\\) and therefore we need to specify two components of the initial condition. If \\(x(0)\\) is interpreted as the initial position, then following the example of the pendulum we can look to the velocity \\(\\partial_t x\\) as the second component of the initial condition. From \\(x(t)\\) we can easily calculate the velocity: \\[\\partial_t x(t) = \\lambda_1 A e^{\\lambda_1 t} + \\lambda_2 B e^{\\lambda_2 t}\\ .\\] Again, evaluate this at \\(t=0\\) to get a second equation for the initial condition the pair \\[\\begin{array}{c}x(0) = \\ \\ A \\ \\ + \\ B\\\\\\partial_t x(0) = \\lambda_1 A + \\lambda_2 B\\end{array}\\ \\ \\ \\ \\implies\\ \\ \\ \\ \\left[\\begin{array}{c}1 \\ \\ \\ \\ \\ 1\\\\\\lambda_1 \\ \\ \\ \\lambda_2\\end{array}\\right] \\left[\\begin{array}{C}A\\\\ B\\end{array}\\right] = \\left[\\begin{array}{C}x(0)\\\\ \\partial_t x(0)\\end{array}\\right] .\\] From Block 5, we know how to solve such matrix equations. So, given the initial values \\(x(0)\\) and \\(\\partial_t x(0)\\), we can find an exact, quantitative solution to the differential equation. Example 52.1 \\(\\ \\) Let’s look at the flow field, some trajectories and their time series for the system \\[\\partial_t x = b y\\\\\\partial_t y = c x\\] for \\(b=1\\) and \\(c=2\\). Figure 52.1: Three trajectories from the system \\[\\begin{array}{c}\\partial_t x = y\\\\\\partial_t y = 2 x\\end{array}\\] Each of these trajectories starts out by heading toward the fixed point at (0,0). Then, each turns and heads away toward \\(\\pm \\infty\\) from the fixed point, Figure 52.2: The time series \\(x(t)\\) for the three different trajectories in Figure 52.1. Each of the time series is similar, first showing exponential decay toward 0 then exponential growth toward \\(\\pm \\infty\\). The initial conditions for the black and \\(\\color{magenta}{\\text{magenta}}\\) trajectories are very similar. You can imagine a trajectory starting between those initial conditions that would go down the middle of the “trumpet.” This trajectory would be exponential decay toward 0, but would be hard to see since \\(x=0, y=0\\) is an unstable fixed point (a saddle). The initial condition for the black trajectory is \\(x(0)=0.72\\) and \\(y(0)=\\partial_t x(0) = -1\\), while for the \\(\\color{magenta}{\\text{magenta}}\\) trajectory it is \\(x(0)=0.70\\) and \\(y(0)=\\partial x(0) = -1\\). Let’s find each trajectory as a separate linear combination \\(A e^{\\lambda_1 t} + B e^{\\lambda_2 t}\\). The equations to solve are \\[\\left[\\begin{array}{c}1 \\ \\ \\ \\ 1\\\\\\lambda_1 \\ \\ \\lambda_2\\end{array}\\right] \\left[\\begin{array}{c}A\\\\ B\\end{array}\\right] = \\left[\\begin{array}{c}x(0)\\\\ \\partial_t x(0)\\end{array}\\right] .\\] By plugging in the parameters \\(a=0\\), \\(b=1\\), \\(c=2\\), \\(d=0\\) in the dynamical functions, we find that \\[\\lambda = \\pm \\sqrt{\\strut 2} \\approx \\pm 1.4142 \\ .\\] Therefore, we solve \\[\\left[\\begin{array}{c}1 \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ 1\\\\1.4142 \\ -1.4142\\end{array}\\right] \\left[\\begin{array}{c}A\\\\ B\\end{array}\\right] = \\left[\\begin{array}{c}x(0)\\\\ \\partial_t x(0)\\end{array}\\right] .\\] M &lt;- cbind(rbind(1, 1.4142), rbind(1, -1.4142)) b_black = rbind(0.72, -1) b_magenta = rbind(0.70, -1) qr.solve(M, b_black) ## [,1] ## [1,] 0.006443219 ## [2,] 0.713556781 qr.solve(M, b_magenta) ## [,1] ## [1,] -0.003556781 ## [2,] 0.703556781 The two trajectories are therefore \\[x_\\text{black}(t) = 0.0064 e^{1.4142 t} + 0.7136 e^{-1.4142}\\\\ \\color{magenta}{x_\\text{magenta}(t)} = -0.00356 e^{1.4142 t} + 0.70356 e^{-1.4142 t}\\] For both trajectories, the initial amplitude of the decaying exponential is much larger than for the growing exponential. That’s why the time series decay toward zero initially. But as \\(t\\) grows, the exponential growth become much more important. For the black trajectory, the exponential growth has a positive coefficient, so the growth is toward \\(\\infty\\). But for the \\(\\color{magenta}{\\text{magenta}}\\) trajectory, the exponential growth as a negative coefficient, thus that trajectory grows toward \\(-\\infty\\). The method we used to solve the simplified problem also works for the original problem \\[\\begin{array}{c}\\partial_t x = ax + b y \\\\ \\partial_t y = c x + dy\\end{array}\\ .\\] Step 1: Differentiate with respect to \\(t\\) both sides of the top equation, giving \\[\\begin{array}{c}\\partial_{tt} x = a\\, \\partial_t x + b\\, \\partial_t y\\\\ \\ \\ \\ \\partial_t y = c x \\ \\ \\ \\ \\ \\ \\ + dy\\ \\ \\ \\ \\ \\ \\ \\ \\end{array}\\ .\\] Step 2: Use the second equation to substitute for \\(\\partial_t\\, y\\) in the top equation, giving \\[\\partial_{tt} x = a \\partial_t x + b\\left(\\strut c x + dy\\right) = a\\, \\partial_t x + b\\, c\\, x + b\\, d\\, y\\] Step 3: One more substitution. From the original top equation, we know \\[y = \\frac{\\partial_t x - a x}{b}\\ .\\] Plug this in for \\(y\\) in the result from Step 2, giving \\[\\partial_{tt} x = a\\, \\partial_t x + b\\, c\\, x + b\\, d\\, \\frac{\\partial_t x - a x}{b} = \\left(\\strut a + d\\right)\\ \\partial_t x + \\left(\\strut b c - a d\\right)\\] Step 4: Use the ansatz \\(x(t) = e^{\\lambda t}\\). This produces \\[\\lambda^2 e^{\\lambda t}= (a + d) \\lambda e^{\\lambda t}+ \\left(\\strut bc - ad\\right)e^{\\lambda t} \\ \\ \\ \\implies\\ \\ \\ \\lambda^2 = (a + d) \\lambda + \\left(\\strut bc - ad\\right)\\] which can be solved for \\(\\lambda\\): \\[\\lambda = \\left(a + d\\right) \\pm \\sqrt{\\left(a - d\\right)^2 + 4 b c}\\] Again, the \\(\\pm\\) is the interesting bit here. There are two simple solutions that satisfy the differential equation: \\(x_1(t) = e^{\\lambda_1 t}\\) and \\(x_2(t) = e^{\\lambda_2 t}\\). In addition, any linear combination \\(A e^{\\lambda_ t} + B e^{\\lambda_2 t}\\) of these simple solutions will satisfy the differential equations. Once we know \\(\\lambda_1\\) and \\(\\lambda_2\\), the situation is identical to the simplified version. Again, knowing the initial condition \\(x(0)\\) and \\(\\partial_t x(0)\\) allows us to find the coefficients in the linear combination by solving the matrix equation \\[\\left[\\begin{array}{c}1 \\ \\ \\ \\ \\ 1\\\\\\lambda_1 \\ \\ \\ \\lambda_2\\end{array}\\right] \\left[\\begin{array}{C}A\\\\ B\\end{array}\\right] = \\left[\\begin{array}{C}x(0)\\\\ \\partial_t x(0)\\end{array}\\right] .\\] "],["eigenvalues.html", "Chapter 53 Eigenvalues, eigenvectors 53.1 Vector solutions to linear differential equations 53.2 Eigenvectors and eigenvalues 53.3 Exercises", " Chapter 53 Eigenvalues, eigenvectors In the previous chapters, you’ve seen how linear dynamics, when unstable, lead trajectories off to infinity. Chapter 51 looked at some ways that nonlinearity can tame instability, as in the simple models of linear growth. In this chapter, we return to linear dynamics to develop a quantitative theory of stability. Such theory is important in many engineering and design applications. For instance, a building exposed to earthquake risk can be economically designed to be strong specifically against the type of shaking produced by earthquakes. An electronic circuit can be designed to be sensitive to certain kinds of communication signals while still resisting noise or jamming. Example 53.1 Cruise control is a feature of many modern automobiles. It enables a driver to set a desired speed for the car to follow automatically, thus reducing cognitive load on the driver. Early models of cruise control introduced in the 1970s (and still common in 2020) had an extremely simple logic. The speedometer constantly monitors the car’s speed \\(v\\). The driver sets a desired speed, which we’ll call \\(v_0\\). The cruise control actuator—the mechanism that works to maintain the speed at \\(v_0\\) by, let’s say, adjusting the throttle to increase or reduce speed as appropriate—is designed to produce a throttle input proportional to the deviation in actual speed \\(v\\) from the set speed \\(v_0\\). \\[\\text{throttle_input} = -a (v - v_0)\\ .\\] You can see that when \\(v = v_0\\), the throttle input from the system is zero. When \\(v_0 &lt; v\\), as when starting to go downhill, the throttle input will be negative, reducing the speed. A simple model is that the throttle input is proportional to \\(\\partial_t\\, v\\): positive input increases speed, negative input decreases speed. The overall system is then described by a linear, first-order differential equation \\[\\partial_t\\,v = -a(v-v_0)\\ .\\] This equation has a fixed point at \\(v = v_0\\) (as desired). To describe more simply the dynamics around the fixed point, we can define a new dynamical state \\(y=v - v_0\\). Differentiating both sides with respect to time gives \\(\\partial_t y = \\partial_t v\\), so we can re-write the original differential equation as \\[\\partial_t y = -a y\\] which has a solution \\(y(t) = A e^{-at}\\) as we’ve seen before. For any positive coefficient \\(a\\), the control system is stable: a deviation from \\(v_0\\) will be followed by exponential decay back to \\(v_0\\). A modern cruise control system adds an important feature: the car slows down automatically if it gets too close to the car in front. Let’s call the distance to the leading car \\(x\\) and define “too close” to mean closer than distance \\(x_0\\). The car is travelling at velocity \\(v\\) and the car in front at \\(v_f\\). If \\(v_f &lt; v\\), the distance between the cars gets smaller: \\(\\partial_t x = -(v - v_f)\\). On the other hand, if \\(x_0 &lt; x\\), the car is far enough away that the velocity can be increased: \\(\\partial_t v = b(x - x_0)\\). We can unite these two first-order differential equations into a single, second-order equation: \\[\\partial_t x = -(v - v_f) \\ \\ \\implies\\ \\ \\partial_{tt} x = - \\partial_t v = - b(x-x_0)\\] To solve this system, define \\(y \\equiv x - x_0\\). This implies \\(\\partial_{tt} y = \\partial_{tt} x\\), so the equation describing the control system becomes \\[\\partial_{tt} y = - b y\\ .\\] The solution to this is \\(y(t) = A \\sin\\left(\\sqrt{b} \\ t\\right)\\) as you can confirm by substitution. Result: The simple car-following control system oscillates. That’s not a very good experience for the driver! By constructing a theory of stability, we may be able to figure out a re-design that will cause the oscillations to go away. 53.1 Vector solutions to linear differential equations The form in which we have been writing linear differential equations in two state variables is \\[\\partial_t x = a x + b y\\\\ \\partial_t y = c x + d y\\] A key part of constructing a theory of stability is finding a set of simple mathematical ideas that enable us to view dynamics in a simpler way. The idea we will introduce here is thinking about the state and trajectory of a differential equation in terms of vectors. We’ll work here with systems with a two-variable dynamical state, but the results apply just as well to higher dimensional states. That’s important in applied work, where the systems being modeled are complicated with many state components. We can re-write the linear differential equation using vector and matrix notation. Suppose that we collect the \\(x\\) and \\(y\\) components of the state into a vector, \\[\\vec{w(t)} =\\left[\\begin{array}{c}x(t)\\\\y(t)\\end{array}\\right]\\ .\\] The differential equation, in terms of \\(\\vec{w(t)}\\) is \\[\\partial_t \\vec{w(t)} = \\left[\\begin{array}{cc}a&amp;b\\\\c&amp;d\\end{array}\\right] \\vec{w(t)}\\ .\\] Now imagine that we pick two non-colinear vectors, \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) that span the state space. Since the vectors are assumed to span the state, any initial condition can be written as a linear combination of those two vectors: \\[\\vec{w(0)} =\\left[\\begin{array}{c}x(0)\\\\y(0)\\end{array}\\right] = m_1 \\vec{u_1} + m_2 \\vec{u_2}\\ .\\] For the moment, we won’t worry about how best to choose \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\); any two vectors that are not colinear will do. Example 53.2 \\(\\ \\) As a running example, we’ll work with the pair of first-order differential equations \\[\\partial_t x = x + y\\\\ \\partial_t y = 2 x \\ \\ \\ \\ \\] which, in vector/matrix form are \\[\\partial_t \\vec{w(t)} = \\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right] \\vec{w(t)}\\ .\\] Imagine that we choose, arbitrarily, \\[\\vec{u_1} = \\color{magenta}{\\left[\\begin{array}{r}1\\\\-3\\end{array}\\right]}\\ \\ \\ \\text{and}\\ \\ \\ \\vec{u_2} = \\color{blue}{\\left[\\begin{array}{r}1.0\\\\0\\end{array}\\right]}\\ .\\] For the example, we’ll calculate a trajectory starting at the initial condition \\(\\vec{w(0)} = \\left[\\begin{array}{r}-1.1\\\\ 2.1\\end{array}\\right]\\): traj &lt;- integrateODE(dx ~ x + y, dy ~ 2*x, x=-1.1, y=2.1, tdur=2) traj_plot(y(t) ~ x(t), traj) Figure 53.1: The trajectory calculated starting at (-1.1, 2.1). The graph is annotated with the vectors \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) and the flow field. The initial condition (marked “0” in Figure 53.1) is, like any other point in the state space, a linear combination of \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\). We can find the scalar coefficients of the linear combination using any of the methods presented in Block 5, for instance the telescope method. We’ll illustrate with qr.solve(): M &lt;- cbind(rbind(1,-3), rbind(1,0)) w0 &lt;- rbind(-1.1, 2.1) qr.solve(M, w0) ## [,1] ## [1,] -0.7 ## [2,] -0.4 So, \\(\\vec{w(0)} = -0.7 \\vec{u_1} - 0.4 \\vec{u_2}\\). Keep these scalar coefficients, \\(-0.7\\) and \\(-0.4\\) in mind for the next example. We can use integrateODE() to find the solution starting at any initial condition. In particular, we can find the solution \\(\\vec{u_1}\\) as the initial condition and, similarly, using \\(\\vec{u_2}\\) as the initial condition. traj_u1 &lt;- integrateODE(dx ~ x + y, dy ~ 2*x, x=1, y=-3, tdur=2) traj_u2 &lt;- integrateODE(dx ~ x + y, dy ~ 2*x, x=1, y= 0, tdur=2) Figure 53.2 shows these trajectories. Figure 53.2: Trajectories from the initial conditions \\(\\color{magenta}{\\vec{u_1}}\\) and \\(\\color{blue}{\\vec{u_2}}\\). At first glance, the two trajectories \\(\\vec{u_1(t)}\\) and \\(\\vec{u_2(t)}\\) in Figure ?? that start from \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) might not look much like the trajectory in Figure 53.1 that starts from \\(\\vec{w(0)} = -0.7 \\vec{u_1} - 0.4 \\vec{u_2}\\). But in fact there is a very simple relationship between the trajectories: \\[\\vec{w(t)} = -0.7 \\vec{u_1(t)} - 0.4 \\vec{u_2(t)}\\ .\\] To state the situation more generally, any solution to the differential equations can be written as a linear combination of the solutions starting at \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\), regardless of how \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) were chosen. We can see this algebraically. Since \\(\\vec{u_1(t)}\\) and \\(\\vec{u_2(t)}\\) are solutions to the linear differential equation, it must be that \\[\\partial_t \\vec{u_1(t)} = \\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right] \\vec{u_1(t)}\\ \\ \\text{and}\\ \\ \\partial_t \\vec{u_2(t)} = \\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right] \\vec{u_2(t)}\\ .\\] Taking a linear combination of these equations gives \\[\\partial_t \\left[m_1\\, \\vec{u_1(t)} + m_2 \\vec{u_2(t)}\\right] = \\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right] \\left[m_1\\, \\vec{u_1(t)} + m_2 \\vec{u_2(t)}\\right]\\] The same will be true in general, that is, for the matrix \\(\\left[\\begin{array}{cc}a&amp;b\\\\c&amp;d\\end{array}\\right]\\). 53.2 Eigenvectors and eigenvalues In the previous section, we saw that the solution to any linear differential equation starting at any initial condition can be written as a linear combination \\(m_1 \\vec{u_1(t)} + m_2 \\vec{u_2(t)}\\), where \\(\\vec{u_1(t)}\\) is the solution starting at an initial condition \\(\\vec{u_1}\\) and \\(\\vec{u_2(t)}\\) is the solution starting at \\(\\vec{u_2}\\). It does not matter how \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) are chosen, so long as they are not colinear, that is, so long as they span the state space. In this section, we’ll demonstrate that there is a particular way of selecting \\(\\vec{u_1}\\) and \\(\\vec{u_2}\\) that makes the solutions \\(\\vec{u_1(t)}\\) and \\(\\vec{u_2(t)}\\) have a very simple, purely exponential format. The vectors to be chosen are the eigenvectors of the matrix \\(\\left[\\begin{array}{cc}a&amp;b\\\\c&amp;d\\end{array}\\right]\\). We’ll call these eigenvectors \\(\\vec{\\Lambda_1}\\) and \\(\\vec{\\Lambda_2}\\). (This use of the Greek letter \\(\\Lambda\\) (capital “lambda”) and it’s lower-case version \\(\\lambda\\), is conventional in mathematics, physics, and engineering. So it’s worth learning to identify the letters.) Our task in this section is to show how to compute the eigenvectors \\(\\vec{\\Lambda_1}\\) and \\(\\vec{\\Lambda_2}\\) and that the solutions \\(\\vec{\\Lambda_1(t)}\\) and \\(\\vec{\\Lambda_2(t)}\\) are in fact simple exponentials. In Chapter 54 we’ll derive the formula for the eigenvectors. Here, we’ll use the R function eigen() to do the calculations for us. Example 53.3 \\(\\ \\) Eigenvectors can be calculated using the R function eigen() applied to the abcd matrix that defines the linear differential equation. For the system of first-order differential equations \\[\\partial_t x = x + y\\\\\\partial_t y = 2x\\ \\ \\ \\ \\ \\] the matrix is, as we’ve seen, \\[\\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right]\\ .\\] Carrying out the eigenvector calculation is straightforward: M &lt;- cbind(rbind(1,2), rbind(1,0)) eigen(M) ## eigen() decomposition ## $values ## [1] 2 -1 ## ## $vectors ## [,1] [,2] ## [1,] 0.7071068 -0.4472136 ## [2,] 0.7071068 0.8944272 The eigenvectors are the two columns of the matrix labeled vectors returned by the calculation. Here, that’s \\[\\vec{\\Lambda_1} = \\left[\\begin{array}{r}0.7071\\\\0.7071\\end{array}\\right] \\ \\ \\ \\text{and}\\ \\ \\ \\ \\vec{\\Lambda_2} = \\left[\\begin{array}{r}-0.4472\\\\0.8944\\end{array}\\right]\\ .\\] The calculation also produces eigenvalues. Here that’s \\(\\lambda_1 = 2\\) and \\(\\lambda_2 = -1\\). We can see what’s special about \\(\\vec{\\Lambda_1}\\) and \\(\\vec{\\Lambda_2}\\) by plotting them along with the flow field, as in Figure 53.3. Figure 53.3: The eigenvectors for the \\(\\left[\\begin{array}{cc}1&amp;1\\\\2&amp;0\\end{array}\\right]\\) plotted along with the flow. The eigenvectors mark the directions where the flow is either directly toward the fixed point or directly away from it. Here, the flow on the subspace of \\(\\color{magenta}{\\vec{\\Lambda_1}}\\) is away from the fixed point, while the flow along the subspace of \\(\\color{blue}{\\vec{\\Lambda_2}}\\) is inward to the fixed point. The consequence of this alignment of the flow with the eigenvectors is that the trajectory from any initial condition \\(m_1 \\vec{\\Lambda_1}\\) will have the form \\(m_1(t) \\vec{\\Lambda_1}\\) and similarly for an initial condition \\(m_2(t) \\vec{\\Lambda_2}\\). As we did in the previous section, let’s calculate the trajectories \\(\\color{magenta}{\\vec{\\Lambda_1(t)}}\\) and \\(\\color{blue}{\\vec{\\Lambda_2(t)}}\\) starting at the two eigenvectors and plot out the \\(y(t)\\) component of the solution. Since we’re anticipating an exponential form for the function, we’ll use semi-log axes, where an exponential will look like a straight line. traj_eigen1 &lt;- integrateODE(dx ~ x + y, dy ~ 2*x, x=0.7071, y=0.7071) traj_eigen2 &lt;- integrateODE(dx ~ x + y, dy ~ 2*x, x=-0.4472, y=0.8944) traj_plot(y(t) ~ t, traj_eigen1, color=&quot;magenta&quot;) %&gt;% traj_plot(y(t) ~ t, traj_eigen2, color=&quot;blue&quot;) %&gt;% gf_refine(scale_y_log10(breaks=c(0.3290, 0.7071, 0.8944, 5.2248))) We’ve marked the \\(y\\) axis with the starting and ending values of each function, so that you can find the exponential parameter \\(k\\) for each function. \\[\\color{magenta}{y_1(t) = 0.7071 e^{k_1 t}}\\\\ \\color{blue}{y_2(t)} = 0.8944 e^{k_2 t}\\] To find \\(k_1\\) and \\(k_2\\), plug in \\(t=1\\) to the solution: \\[\\color{magenta}{y_1(1) = 5.2248 = 0.7071 e^{k_1}} \\implies k_1=2\\\\ \\color{blue}{y_2(1) = 0.3290 = 0.8944 e^{k_2}} \\implies k_2 = -1\\] Look back at the results from the eigen(M) calculation. These values for \\(k_1\\) and \\(k_2\\) are exactly the eigenvalues that were computed from the matrix M. In standard notation, rather than \\(k_1\\) and \\(k_2\\), the notation \\(\\lambda_1 = k_1\\) and \\(\\lambda_2 = k_2\\) is preferred. (Remember, \\(\\lambda\\) is the Greek letter “lambda” in it’s lower-case form.) Every solution to the differential equation has the form \\[m_1\\, e^{\\lambda_1 t} \\vec{\\Lambda_1} + m_2\\, e^{\\lambda_2 t} \\vec{\\Lambda_2}\\ .\\] The scalar coefficients \\(m_1\\) and \\(m_2\\) can be found from the initial condition. The stability of the system depends only on \\(\\lambda_1\\) and \\(\\lambda_2\\). If either one of these is positive, then the system is unstable. 53.3 Exercises Exercise XX.XX: OwCtGH The exercise is based on the interactive applet shown below. Click on the image to open up the applet in another tab of your browser. Then arrange so that the applet’s tab is side by side with this one. That way you can see the questions and figure out the answer at the same time. We are going to look at trajectories that go round and round: oscillating solutions to the linear dynamics around a fixed point. In the applet, click on the left-hand graph to set the \\(a\\) and \\(b\\) values in the [ab10] matrix. Clicking on the right-hand graph will start a trajectory (shown in red) from the place where you click. You can create an oscillatory flow by clicking anywhere in the blue parabolic region in the left-hand graph. Play around with clicking in different spots in the parabolic region. Set the number of time steps for the red trajectory until you can see at least two full revolutions around the origin. Question A Click near (but not on) the fixed point. Which of these best describes the shape of the trajectory? A tightly wound spiralExcellent!  A loosely wound spiral︎✘ A rectangular shape︎✘ Alternating between heading toward the fixed point and heading away from it.︎✘ Question B Leaving the a and b values the same as when you answered the previous question, start the trajectory about half-way from the fixed point. How does the new trajectory compare to the one from the previous problem? A more tightly wound spiral︎✘ A more loosely wound spiralCorrect.  A spiral that goes the other way round︎✘ A rectangular shape︎✘ AN EARLY PROBLEM to explore what happens to the eigenvalues at different (a,b) values. Saddle, unstable, stable oscillation, unstable oscillation. explain what the “real part” is and what the “imaginary part” is. Question: set (a,b) to close to (???, ???). Which of these is closest to the real part of the eigenvalues? Which is closest to the imaginary part of the eigenvalues. Point out that there are really only two decimal numbers that appear in an eigenvalue, regardless of whether they are real or complex. Can you find an (a,b) that makes the real part of the eigenvalue very small (e.g, &lt; 0.05). What accomplishes this? Compare to the eigenvalue formula. Which of these conditions is sufficient that the trajectory will head away from the fixed point (eventually). At least one eigenvector has a positive real part. ANOTHER PROBLEM INVOLVING C and D Click near the edge of the parabolic zone with [just say what a and b should be approximately], increase D. At what point does the spiral behavior disappear? What happens to the eigenvalues at this point. Exercise XX.XX: Rdc7vE Question tmp-1: What are the numerical values of the eigenvalues of the matrix \\(\\left[\\begin{array}{rc}-1 &amp; \\frac{3}{4} \\\\ 1 &amp; 0\\end{array}\\right]\\)? \\(\\frac{1}{2}\\) and \\(-\\frac{3}{2}\\) (+) [] \\(\\frac{1}{2}\\) and \\(-\\frac{5}{2}\\) [] \\(\\frac{1}{2}\\) and \\(+\\frac{5}{2}\\) [] \\(-\\frac{1}{2}\\) and \\(-\\frac{5}{2}\\) [] Question tmp-2: What are the numerical values of the eigenvalues of the matrix \\(\\left[\\begin{array}{rc}0 &amp; \\frac{1}{2} \\\\ 1 &amp; 0\\end{array}\\right]\\)? \\(\\pm\\sqrt{2}/2\\) (+) [] \\(\\pm\\sqrt{2}\\) [] \\(\\pm 2\\) [] \\(\\pm\\frac{1}{2}\\) [] Eigenvalues are important because they dramatically simplify the interpretation of matrices and of dynamical system behavior near fixed points. Eigenvalues are numbers. To use the language of linear combinations, an eigenvalue is a scalar. As you know, when you multiply a vector times a scalar, the result has the same direction (or the exact opposite direction) but might be longer or shorter. Like this: \\[ 3 \\left[\\begin{array}{c}1\\\\2 \\end{array}\\right] = \\left[\\begin{array}{c}3\\\\6 \\end{array}\\right]\\ \\ \\ \\ \\text{or}\\ \\ \\ \\ \\ -4 \\left[\\begin{array}{r}3\\\\-1 \\end{array}\\right] = \\left[\\begin{array}{r}-12\\\\4\\end{array}\\right]\\] In contrast, matrix multiplication of a vector can generate a result that has a different direction than the original vector, like this: \\[\\left[\\begin{array}{rc}0 &amp; \\frac{1}{2} \\\\ 1 &amp; 0\\end{array}\\right]\\cdot \\left[\\begin{array}{c}2 \\\\ 1\\end{array}\\right] = \\left[\\begin{array}{c}\\frac{1}{2} \\\\2\\end{array}\\right]\\ \\ \\ \\ \\text{or}\\ \\ \\ \\ \\left[\\begin{array}{rc}-1 &amp; \\frac{3}{4} \\\\ 1 &amp; 0\\end{array}\\right]\\cdot \\left[\\begin{array}{r}1 \\\\ -4\\end{array}\\right] = \\left[\\begin{array}{c}4 \\\\1\\end{array}\\right]\\] An eigenvector is a vector has a seemingly magical property with respect to multiplication by the matrix it characterizes: the result of the multiplication is a vector that has the same direction as the original but scaled by it’s corresponding eigenvalue \\(\\lambda\\). That is, if \\(\\lambda\\) is an eigenvalue of \\({\\mathbf M}\\) and \\({\\mathbf \\Lambda}\\) is the corresponding eigenvector: \\[{\\mathbf M}\\cdot {\\mathbf \\Lambda} = \\lambda {\\mathbf \\Lambda}\\] Question tmp-3: Which of these is an eigenvector of the matrix \\(\\left[\\begin{array}{rc}-1 &amp; \\frac{3}{4} \\\\ 1 &amp; 0\\end{array}\\right]\\)? (Hint: Multiply the matrix by each of the vectors listed. For one of them, the result of the multiplication will be aligned with the vector used. You can use the constant of proportionality to answer the next question, but you’ll have to start by choosing the right one of the options that follow.) \\(\\left[\\begin{array}{r}-3\\\\2\\end{array}\\right]\\) (+) [] \\(\\left[\\begin{array}{r}3\\\\2\\end{array}\\right]\\) [] \\(\\left[\\begin{array}{r}-2\\\\3\\end{array}\\right]\\) [] \\(\\left[\\begin{array}{r}2\\\\3\\end{array}\\right]\\) [] Question tmp-4: What is the eigenvalue associated with the correct answer from the previous problem? -1.5 (+) [] -1 [] -0.5 [] 0.5 [] 1.5 [] Question tmp-5: Consider the two matrices \\[{\\mathbf M}_1 = \\left[\\begin{array}{rr}5 &amp; 6 \\\\0 &amp; 1\\end{array}\\right]\\ \\ \\text{and}\\ \\ \\left[\\begin{array}{rr}-3 &amp; 1 \\\\0 &amp; 1\\end{array}\\right]\\] Which of the following is not an eigenvector of \\({\\mathbf M}_1\\) or of \\({\\mathbf M}_2\\)? (We’ve rounded off to two decimal places and provided a sandbox for calculations.) \\(\\left[\\begin{array}{r}6\\\\1\\end{array}\\right]\\) [] \\(\\left[\\begin{array}{r}-1\\\\1\\end{array}\\right]\\) [] \\(\\left[\\begin{array}{r}3\\\\2\\end{array}\\right]\\) (+) [] \\(\\left[\\begin{array}{r}3.02\\\\10\\end{array}\\right]\\) [] \\(\\left[\\begin{array}{r}3.30\\\\-1\\end{array}\\right]\\) [] You can use the sandbox below either for arithmetic calculations that you hand write or to use matrix-related R commands. In the initial code in the sandbox is a test that shows whether a vector v is an eigenvector of M. In this example it is and has eigenvalue 0.5615 (rounding off to 4 decimal places). You can print out M or v in the ordinary way, with the simple commands M or v respectively. M &lt;- rbind(cbind(-3, 2), cbind(1, 0)) v &lt;- rbind(5.6155, 10) (M %*% v) / v # element-by-element division Exercise XX.XX: PD3CiZ In this exercise, you’ll be using an app that allows you to set \\(a\\) and \\(b\\) in the [ab10] matrix and hunt for eigenvectors. Open up the app in another browser tab and arrange it side-by-side with this document, so you can see both at the same time. You used a somewhat similar app when exploring linear, two-dimensional finite-difference equations. Here’s a link, but you don’t need to open that app for this exercise. This new app does a few things differently: In the old app, you had four number-entry boxes to set the values of the [abcd] matrix. Here, because we’re using the [ab10] format, you need only set \\(a\\) and \\(b\\). You can do this by clicking within the left-hand graph. The a-b selector graph is annotated with the type of generic behavior that the differential-equation system will show for any combination of \\(a\\) and \\(b\\). This allows you to reason backward from the behavior you are interested in to the corresponding values of \\(a\\) and \\(b\\). Since the type of behavior is encoded in the eigenvalues, you are effectively inverting the eigenvalue formula to find \\(a\\) and \\(b\\). The flow field (right-hand graph) shows stream-lines of continuous-time motion. Imagine you had a bunch of glitter which you cast out over a pool of water with a given flow pattern. If you took a time-exposure photo, you would see each piece of glitter as it moved along with the water in which it is embedded. You can click in the flow field to start a trajectory at that point. You can control the time domain—that is, how long is the time exposure of the photo—with the radio buttons at the bottom. There is a thin, green line annotating the flow field. This line runs from the fixed point (right in the center) in the direction of the point on which you click to start a trajectory. A vector with the same orientation as the green line is given numerically below the graph. This orientation is also described using an angle measurement in degrees. There is no display of the solution, that is, \\(x()\\) versus \\(t\\). This is because we want you to understand the geometry of the flow. First, play around with the app. Choose miscellaneous values of \\(a\\) and \\(b\\), observe the flow, and click in the flow field to draw a red trajectory. Notice what happens when you make the number of steps larger or smaller. In unstable directions, you can get a good view of the trajectory by starting it near the fixed point. If you start it at the periphery of the graph, most of the trajectory will be outside the display. And if the number of steps is very small, you may not see it at all because the glyph is so thin near the start. When coming from a stable direction, click near the periphery of the graph to get a good view, since the red trajectory will naturally be heading in towards the origin. When estimating the orientation of an eigenvector, try to get the green line heading straight down the middle of the red trajectory. This often requires a bit of fiddling, moving the starting point just a tiny amount to find one that is just right. When you are on an eigenvector, the trajectory will be dead straight on the green line. Any trajectory not starting on an eigenvector will be curved to a greater or lesser extent, depending on the relative sizes of the eigenvalues. In the following questions, pick the choice closest to the answer you found. The exact choice of \\(a\\) and \\(b\\) stemming from a click depends somewhat on the graphics resolution of your display, so you should expect only to be able to get close to the \\(a\\) and \\(b\\) values given in the question. Question tmp-6: Set \\(a=-1.0\\) and \\(b = 0.5\\) (or as close as you can get) and observe the flow. This is a saddle: stable in one direction, unstable in another. There will be one stable eigenvector, where the flow moves directly outward from the origin, and one unstable eigenvector, where the flow moves directly inward toward the origin. Which one of these is the orientation (in degrees) of the unstable eigenvector? -149.7 [] -63.6 [] -31.7 [] 69.1 (+) [] 73.5 [] 106.6 [] 143.7 [] 149 [] Question tmp-7: Which of these best describes the eigenvalue corresponding to the unstable eigenvector? Negative and real [] Zero and real [] Positive and real (+) [] Complex with a negative real part [] Complex with a positive real part [] Question tmp-8: Keeping \\(a=-1.0\\) and \\(b = 0.5\\), hunt for the stable eigenvector. Which one of these is the orientation (in degrees) of the stable eigenvector? -149.7 [] -63.6 [] -31.7 [] 69.1 [] 73.5 [] 106.6 [] 143.7 (+) [] 149 [] Question tmp-9: Set \\(a=2\\) and \\(b = -0.5\\) and observe the flow. This is a source: all initial conditions lead to motion away from the fixed point. But for this \\(a\\) and \\(b\\), some directions are “faster” than others. Which one of these is the orientation (in degrees) of the fast eigenvector? -149.7 (+) [] -63.6 [] -31.7 [] 69.1 [] 73.5 [] 106.6 [] 143.7 [] 149 [] Question tmp-10: Keeping \\(a=2\\) and \\(b = -0.5\\), what is the orientation of the slow eigenvector? -149.7 [] -63.6 [] -31.7 [] 69.1 [] 73.5 (+) [] 106.6 [] 143.7 [] 149 [] Question tmp-11: Staying with the flow from \\(a=2\\) and \\(b = -0.5\\), which of these best describes the pair of eigenvalues? Both are real and positive (+) [] Both are real and negative [] One is complex, the other real [] Both are complex, one has negative real part [] Question tmp-12: Set \\(a=-2\\) and \\(b = -0.5\\) and observe the flow. This is a sink: all initial conditions lead to motion toward the fixed point. Which one of these is the orientation (in degrees) of the fast eigenvector? -149.7 [] -63.6 [] -31.7 [] 69.1 [] 73.5 [] 106.6 [] 143.7 [] 149 (+) [] Question tmp-13: Keeping \\(a=-2\\) and \\(b = -0.5\\), what is the orientation of the slow eigenvector? -149.7 [] -63.6 [] -31.7 [] 69.1 [] 73.5 [] 106.6 (+) [] 143.7 [] 149 [] Question tmp-14: Staying with the flow from \\(a=2\\) and \\(b = -0.5\\), which of these best describes the pair of eigenvalues? Both are real and positive (+) [] Both are real and negative [] One is complex, the other real [] Both are complex, one has negative real part [] Both are complex, both have negative real part [] Question tmp-15: Set \\(a=-1\\) and \\(b = -1\\) and observe the flow. This is a node: the flow is spiral with the fixed point at the center. Is the flow stable or unstable? stable (+) [] unstable [] neither stable nor unstable [Is it getting closer to the fixed point or further away? That’s the question that determines stability.] Question tmp-16: Keeping \\(a=-1\\) and \\(b = -1\\), what can you correctly say about the eigenvectors? They have almost the same orientation [] There is only one eigenvector [There are almost aways two eigenvectors.] There are no eigenvectors (+) [This is true in the sense that there is no place where the motion is on a straight line toward or away from the origin.] Question tmp-17: Staying with the flow from \\(a=2\\) and \\(b = -0.5\\), which of these best describes the pair of eigenvalues? Both are real and positive (+) [] Both are real and negative [] One is complex, the other real [] Both are complex, one has negative real part [] Both are complex, both have negative real part [] Question tmp-18: Set \\(a=0\\) and some \\(b &lt; 0\\). The result will be a trajectory that goes around in a closed loop. (You will want to make the number of steps large to see a complete loop.) You may not be able to click on exactly \\(a=0\\), but you should be able to get close enough that the trajectory is a very tightly wound spiral. We’re interested here in how many cycles the trajectory covers in a fixed number of time steps, that is, whether the trajectory moves quickly or slowly around the loop. Which of these statements is true about the relationship between \\(b\\) and the speed of the motion? There’s no relationship between \\(b\\) and speed of oscillation. [] When \\(b\\) is closer to zero, the speed is higher. [] When \\(b\\) is further from zero, the speed is higher. (+) [] Question tmp-19: We’re going to look at the relationship between the eigenvalues and the speed of oscillation. Keep \\(a=0\\) and \\(b &lt; 0\\), which guarantees that the motion will be circular. Vary \\(b\\), each time observing how many loops the trajectory makes (for a fixed number of steps), and what the eigenvalues are. Which of these statements is not true about the speed of oscillation and the eigenvalues. The larger the magnitude of the imaginary part of the eigenvalues, the faster the oscillation. [] The two eigenvalues have exactly the same imaginary part, except one is positive and the other negative. [] The speed of oscillation relates to the difference between the imaginary part of the eigenvalues. (+) [] The real part of the eigenvalues is the same for both when there is oscillatory motion. [] EXERCISES: Give numbers for \\(abcd\\) and \\(x(0)\\) and \\(\\partial_t x(0)\\). Find the eigenvalues and \\(A\\) and \\(B\\). EXERCISE: CALCULATE THE EIGENVALUES and eigenvectors from a series of matrices. What is their stability? What is the solution starting from this or that initial condition. "],["second-order-de.html", "Chapter 54 Force-balance equations 54.1 Ballistics 54.2 The harmonic oscillator 54.3 Exponential or sinusoid? 54.4 Exponentials with “imaginary” inputs 54.5 Damping 54.6 Exercises", " Chapter 54 Force-balance equations Up to now, we have been studying dynamics in the format of one or more first-order differential equations. For instance, \\[\\partial_t x = f(x, y)\\\\ \\partial_t y = g(x, y)\\] where \\(f(x,y)\\) and \\(g(x,y)\\) are the dynamical functions. This is not the style in which differential equations were introduced in the late 1600s. Instead, Isaac Newton (1642-1727) wrote his differential equations in the format of his Second Law of Motion, which reads (in a 1792 translation): LAW II: The alteration of motion is ever proportional to the motive force impressed; and is made in the direction of the right line in which that force is impressed. — Source In contemporary language, we would say things differently. Instead of “alteration of motion” we would write \\(\\partial_t v\\), where \\(v\\) is the velocity of the moving object. We call \\(\\partial_t v\\) the acceleration. Instead of “motive force” we would say simply “force,” and instead of “made in the direction of the right line in which that force is impressed”, we would say that velocity, acceleration, and force are vector quantities. Newton’s “ever proportional to” amounts to saying that \\[\\partial_t \\vec{v} = b \\vec{F}\\,\\] that is, change in motion is proportional to force. Newton stipulated that the constant of proportionality, \\(b\\), is the reciprocal of mass, that is \\(1/m\\). Writing acceleration \\(\\vec{a} = \\partial_t \\vec{v}\\), the previous equation amounts to \\[m \\vec{a} = \\vec{F}\\ ,\\] the form in which beginning physics students first hear it. Newton, of course, was very interested in gravity. From previous experiments dropping weights and rolling balls down ramps, as was done by Galileo Galilee (1564-1642), Newton knew that the force of gravity on an object (near the surface of Earth) is proportional to the object’s mass, that is \\[\\vec{F} = -g m\\ ,\\] where the direction of \\(\\vec{F}\\) is straight downwards toward the center of the Earth. The negative sign in front of \\(g\\) reflects this downward direction. We’re assuming that position and velocity are both defined in a positive, upward direction.2 developed his Theory of General Relativity.] The simple model of an object moving under the force of gravity is \\(\\partial_t v = g\\). Notice that this is not a linear differential equation—\\(g\\) is not a linear function of \\(v\\) but a constant, and there’s no fixed point—so the solution is not an exponential. But we can find the solution easily enough by integrating both sides of the equation with respect to \\(t\\). \\[\\int \\partial_t v\\, dt = \\int -g\\, dt \\ \\ \\implies v(t) = -g\\, t + C\\] where \\(C\\) captures the constants of integration from both integrals into one number. It’s worth noticing how much mathematics needs to be understood before this method of solution makes sense. The fundamental theorem of calculus is what tells us that \\(\\int \\partial_t v\\, dt = v(t) + B\\), and you have to know about how to anti-differentiate a constant function to make sense of \\(\\int g\\, dt = -g\\,t + D\\). You also need to know why constants of integration, such as \\(B\\) and \\(D\\), get included when writing the function that results from an anti-differentiation. (You might need to revisit Block 3 to refresh your memory about such things.) There’s also some physical context to be considered. By setting \\(t=0\\) in \\(v(t) = -g\\,t + C\\), for instance, we can identify \\(C\\) as the velocity at time zero, which we might write \\(v(0)\\) or \\(v_0\\) for short. And what about the position of the object? The solution \\(v(t) = -g\\,t + v_0\\) has nothing to say directly about the position \\(x(t)\\) of the object as a function of time. We can work position \\(x(t)\\) into things by recognizing that \\(v(t) = \\partial_t x(t)\\), which is the definition of velocity. Anti-differentiating both sides of \\(v(t) = -g\\, t + v_0\\) gives us a more complete story that include both initial velocity \\(v_0\\) and initial position \\(x_0\\): \\[\\int v(t)\\, dt = \\int \\left(\\strut -g\\, t + v_0\\right)\\ dt \\implies x(t) = -\\frac{1}{2} g\\,t^2 + v_0\\,t + x_0\\ , \\] where \\(x_0\\) is the constant of integration from this second stage of anti-differentiation. (Plug in \\(t=0\\) to see why we’re justified in taking \\(x_0\\) as the initial position.)3 Still one more way to write the dynamics of falling under the influence of gravity …. Recognizing that \\(v(t) = \\partial_t x(t)\\), we can see that \\(\\partial_t v(t) = \\partial_{tt} x(t)\\). So the original differential equation could be written: \\[\\partial_{tt} x = -g\\] This is an example of a second-order differential equation, so called because of the appearance of a second derivative, \\(\\partial_{tt}x\\). In this chapter, we’ll study second-order differential equations in a variety of contexts. But, as for Newton, movement under the influence of gravity will be a focus. Since the second-order differentiation can be interpreted as representing the balance between force and acceleration, we’ll call these force-balance equations. In general, a force-balance equation has the form \\[\\partial_{tt} x = f(\\partial_t x, x)\\], the acceleration is a function both of position and velocity. In the above example, the dynamical function has a particularly simple form: \\(f(\\partial_t x, x) \\equiv -g\\). Second-order differential equations can always be written as a pair of first-order differential equations. To see this, let one of the first-order equations be \\[\\partial_t x = v\\ .\\] The other equation, \\(\\partial_{tt} x = f(\\partial_t x, x)\\) can be re-written in terms of \\(v\\): \\[\\partial_t v = f(v, x)\\ .\\] Since we know how to solve sets of first-order differential equations by Euler’s method, we can always find the solution \\(x(t)\\) to any second-order differential equation. 54.1 Ballistics A lot of the theory of second-order differential equations was developed in the setting of a ball being set off with an initial velocity from an initial position. Such a focus on the flight of balls might seem trivial. Fortunately, language allows us to construct a scientific-sounding word by adding the suffix “istic” to the root “ball.” This suffixing produces the word ballistics. The importance of ballistics to Newton can be seen by a famous diagram he drew, shown in Figure 54.1. In the diagram, Newton traces the path of a ball shot horizontally from a cannon placed at the top of a mountain. Figure 54.1: Newton’s diagram showing ballistic motion under the force of gravity. Since the motion in Newton’s diagram has both vertical and horizontal components, we’re going to need two second-order differential equations: \\[\\text{Horizontal}: \\ \\ \\partial_{tt} x = 0\\\\ \\ \\ \\ \\text{Vertical}: \\ \\ \\ \\ \\ \\ \\partial_{tt} y = -g\\] The zero on the right-hand side of the equation of horizontal movement reflects that gravity does not act horizontally. We found a solution for the vertical equation in the previous section, \\[y(t) = -\\frac{1}{2} g\\,t^2 + 0\\,t + y_0\\ .\\] The \\(0\\, t\\) component to the solution reflects that the vertical component of the ball, coming out of the cannon, is zero. The solution for the horizontal component of motion can be found by anti-differentiating both sides of the equation of hortizontal motion: \\[\\int \\partial_{tt} x(t)\\, dt = \\partial_t x(t) = \\int 0\\, dt = v_0\\] where \\(v_0\\) is the initial horizontal velocity. A second stage of anti-differentiation gives \\(x(t)\\) itself: \\[\\int \\partial_t x(t) = \\int v_0 dt = v_0\\, t + x_0\\] Regrettably, symbolic anti-differentiation works only in simple cases. To support more realistic models of ballistics, let’s see how to translate the two second-order differential equations into sets of first-order equations. The state variables will be \\(x(t)\\) and \\(y(t)\\), but we also have to add another pair, \\(u(t)\\) and \\(v(t)\\) standing for the horizontal and vertical velocities respectively. The first-order equations will be: \\[\\partial_t x = u\\\\ \\partial_t y = v\\\\ \\partial_t u = 0\\\\ \\partial_t v = -g \\] To illustrate, we’ll solve this set of four first-order equations numerically. We need to specify the initial values for \\(x_0\\), \\(y_0\\), \\(u_0\\) and \\(v_0\\). We’ll let the cannon be located at horizontal position \\(x_0 = 0\\) and vertical position \\(y_0 = 100\\) meters. The vertical velocity is, initially, zero, so \\(v_0 = 0\\). And suppose the cannon produces an initial horizontal velocity of \\(u_0 = 250\\) meters/sec. The constant \\(g\\) is known to be 9.8 meters/sec2. Here’s the trajectory: traj &lt;- integrateODE( dx ~ u, dy ~ v, du ~ 0, dv ~ -9.8, #dynamics x=0, y=100, u = 250, v=0, #initial conditions tdur=5 ) traj_plot(y(t) ~ x(t), traj) traj_plot(v(t) ~ u(t), traj) P1 &lt;- traj_plot(y(t) ~ x(t), traj) %&gt;% gf_hline(yintercept=~0, color=&quot;brown&quot;) %&gt;% gf_labs(subtitle=&quot;(x, y) position as a function of time&quot;) P2 &lt;- traj_plot(v(t) ~ u(t), traj) %&gt;% gf_labs(subtitle=&quot;(u, v) velocity as a function of time&quot;) gridExtra::grid.arrange(P1, P2, nrow=1) Figure 54.2: Trajectory of the cannon ball shot with an initial horizontal velocity and no initial vertical velocity. The trajectory is plotted in slices of state space: position \\((x, y)\\) and velocity \\((u, v)\\). The time at which the ball reaches the points marked on the trajectory give the time. The left panel in Figure 54.2 shows that the trajectory is a parabola. At about \\(t=4.4\\) secs the \\(y\\) position is zero. If zero is the location of the ground, the part of the trajectory for \\(4.4 &lt; t\\) is invalid, since the ball has already hit the ground. The ball travels a little more than 1100 meters horizontally before hitting the ground. The right panel might seem somewhat strange. You can see that the vertical component of velocity, \\(v(t)\\) starts out at zero and increases linearly with time, becoming more and more negative as gravity continuous to accelerate the ball downward. The vertical velocity, \\(u(t)\\), stays constant at \\(u(t) = 250\\) meters per second. This is because there is no horizontal force on the ball. The world’s first programmable, electronic, general-purpose digital computer was started up in 1945 at the University of Pennsylvania, where it is still on display. The date and location have something to say about why the computer was built. 1945 is, of course, at the end of World War II. The computer was built to carry out some important war-time calculations. The place, Philadelpha, Pennsylvania, has to do with the location of the US Army’s center for developing and testing ordnance: the Aberdeen Proving Ground which is only 75 miles from the University of Pennsylvania. The name given to the computer, ENIAC, has a science-fiction flavor but is in fact rooted in its purpose: the Electronic Numerical Integrator and Computer. ENIAC was constructed to calculate the trajectories of artillery shells. Knowing the trajectory is essential to being able to fire artillery accurately. The ballistics of real world artillery shells is more complex than the simple model we constructed earlier. What’s missing from that model is air resistance, which is a function of the shell’s velocity and altitude. To illustrate, let’s add in a simple model of air resistance to the earlier ballistic model. In this model, the force of air resistence is a vector pointing in the opposite direction to overall velocity and proportional to velocity squared. The velocity vector is simply \\(\\left[\\begin{array}{c}u\\\\v\\end{array}\\right]\\). The air resistence force will be \\[-\\alpha\\sqrt{\\strut u^2 + v^2} \\left[\\begin{array}{c}u\\\\v\\end{array}\\right]\\ .\\] Consequently, the horizontal component of the air-resistence vector is \\(-\\alpha\\, u \\sqrt{\\strut u^2 + v^2}\\) and the vertical component is \\(-\\alpha\\, v \\sqrt{\\strut u^2 + v^2}\\). Incorporating air resistence into the model can be done like this: \\[r(u, v) \\equiv \\alpha \\sqrt{\\strut u^2 + v^2}\\\\ \\partial_t x = u\\\\ \\partial_t y = v\\\\ \\partial_t u = -u\\, r(u,v)\\\\ \\partial_t v = -g - v\\, r(u,v)\\] ENIAC would have been programmed to carry out the calculation we now do with integrateODE(): r &lt;- makeFun(alpha*sqrt(u^2 + v^2) ~ u &amp; v, alpha=0.003) traj2 &lt;- integrateODE( dx ~ u, dy ~ v, du ~ -u*r(u,v), dv ~ -9.8 - v*r(u,v), #dynamics x=0, y=100, u = 250, v=0, #initial conditions tdur=6 ) traj_plot(y(t) ~ x(t), traj) traj_plot(v(t) ~ u(t), traj) P1 &lt;- gf_hline(yintercept=~0, color=&quot;brown&quot;) %&gt;% traj_plot(y(t) ~ x(t), traj, nt=2, color=&quot;orange&quot;) %&gt;% traj_plot(y(t) ~ x(t), traj2) %&gt;% gf_labs(subtitle=&quot;(x, y) position as a function of time&quot;) P2 &lt;- traj_plot(v(t) ~ u(t), traj2) %&gt;% gf_labs(subtitle=&quot;(u, v) velocity as a function of time&quot;) gridExtra::grid.arrange(P1, P2, nrow=1) Figure 54.3: Adding air resistence to the model changes the trajectory. For reference, the trajectory without air resistence is plotted in \\(\\color{orange}{\\text{orange}}\\). Air resistance causes the cannon ball to travel a shorter horizontal distance and to arrive with a much reduced velocity. 54.2 The harmonic oscillator Consider the motion of a weight attached to a spring, as in Figure ??. We’ll denote the vertical position of the mass by \\(y(t)\\). Such a spring-mass system has a fixed point where the spring is stretched just enough to cancel out gravity and the velocity is zero. We’ll measure \\(y\\) relative to this fixed point. Figure 54.4: A spring-mass system in motion. Source: Svjo CC BY-SA via Wikimedia Commons According to Hooke’s Law, a stretched or compressed spring exerts a force that is proportional to the amount of extension or compression. With our measuring \\(y\\) relative to the fixed point, the Hooke’s Law force will be \\[m\\, \\partial_{tt} y = - s\\, y\\ ,\\] where \\(m\\) is the amount of mass and \\(s\\) is the stiffness of the spring. This force-balance equation corresponds to the second-order differential equation \\[\\partial_{tt} y = - \\frac{s}{m} y\\ .\\] You can see that the motion is oscillatory, which suggests that the solution to the differential equation will be of the form \\(y(t) = A \\sin(\\omega t)\\). Taking this as an ansatz leads to finding a value of \\(\\omega\\), which is called the angular frequency of the oscillation. (In terms of the period of oscillation \\(P\\), the angular frequency is \\(\\omega = 2 \\pi/P\\).) To find \\(\\omega\\), plug in the ansatz to the differential equation: \\[\\partial_{tt} A \\sin(\\omega t) = - \\frac{s}{m}\\, A \\sin(\\omega t)\\] Differentiating \\(\\sin(\\omega t)\\) once let’s us re-write the left-hand side of the equation in terms of a first derivative \\[\\partial_{t} A \\omega\\, \\cos(\\omega t) = - \\frac{s}{m}\\, A \\sin(\\omega t)\\] Differentiating again gives \\[- \\omega^2 A\\sin(\\omega\\, t) = - \\frac{s}{m}\\, A\\sin(\\omega t)\\ .\\] Simplifying this by cancelling out the \\(A \\sin(\\omega t)\\) term gives \\(\\omega^2 = \\frac{s}{m}\\), where \\(\\omega\\) is the angular frequency of the oscillation. Instead of using \\(A \\sin(\\omega t)\\) as the ansatz we could have used \\(A \\sin(\\omega t) + B \\cos(\\omega t)\\). Working through this ansatz would produce exactly the same result, that \\(\\omega^2 = \\frac{s}{m}\\). So the solution to the spring-mass system will be, in general, a linear combination of the sine and the cosine functions with angular frequency \\(\\omega\\). 54.3 Exponential or sinusoid? In Chapter 53, we established that solutions to second-order linear differential equations have the form \\(m_1 e^{\\lambda_1 t} + m_2 e^{\\lambda_2 t}\\). Yet in the previous section, we saw one linear second-order differential equation, \\(\\partial_{tt} y = - \\omega^2 y\\) where the solution is a linear combination of a sine and a cosine function: \\(y(t) = A \\sin(\\omega t) + B \\cos(\\omega t)\\) with \\(\\omega = \\sqrt{\\frac{s}{m}}\\). How is it possible for the solution to be both in the form of a linear combination of exponentials and a linear combination of sine and cosine? Sinusoids oscillate up and down and up and down, whereas exponentials are monotonic. To find out what might be the relationship between an exponential and a sinusoid, let’s plug an exponential ansatz \\(y(t) = A e^{\\lambda t}\\) into the spring-mass system \\(\\partial_{tt} y = -\\omega^2 y\\). \\[\\partial_{tt} A e^{\\lambda t} = \\lambda^2 A e^{\\lambda t} = -\\omega^2 A e^{\\lambda t}\\ .\\] As before, we’ll cancel out the common term \\(A e^{\\lambda t}\\) to get a simple relationship: \\[\\lambda^2 = -\\omega^2\\ \\ \\ \\implies\\ \\ \\ \\lambda = \\pm \\sqrt{\\strut-1}\\ \\omega \\ .\\] Generally, the symbol \\(i\\) is used to stand for \\(\\sqrt{\\strut -1}\\), so our eigenvalues can be written \\(\\lambda = \\pm i \\omega\\). The solution to the spring-mass system, according to this analysis, is: \\[y(t) = m_1 e^{i\\omega t} + m_2 e^{-i \\omega t}\\] In other words, \\(e^{i \\omega t}\\)—notice the \\(i\\) in the argument to the exponential—is a sinusoid with angular frequency \\(\\omega\\). 54.4 Exponentials with “imaginary” inputs The “imaginary” in the section title is used in it’s mathematical sense. In interpreting the word “imaginary,” you should keep in mind a long history in mathematics of assigning insulting names to mathematical objects that, at the time they were first introduced. That’s why some numbers are vilified as “negative,” and some as “irrational.” The insult is even more dire for numbers like \\(i\\), which are called the “imaginary” numbers. Regrettably, the word “imaginary” leads many people to shy away from them, just as many people avoid genres such as fantasy fiction. That imaginary numbers are introduced as kind of freakish—is there actually a numerical value for \\(\\sqrt{\\strut -1}\\)?—and rarely touched until advanced calculus, means that students are unused to them. You’ll only get comfortable with “imaginary” numbers when you start to work with them extensively, as happens in physics and engineering courses. Our goal here is merely to increase your awareness of imaginary numbers and some of the ways they are used in the sciences. To that end, we offer three different approaches to understanding the function \\(e^{i\\omega t}\\). Basic, pragmatic understanding. This is the level of understanding that you must have in order to make sense of the rest of this chapter and Chapter 55. Here it is: \\[e^{i\\omega t}\\ \\text{is simply a shorthand for}\\ \\cos(\\omega t).\\] So whenever you see \\(e^{i \\omega t}\\), think of \\(\\cos(\\omega t)\\). Algebraic understanding via Taylor Polynomials. (optional) This level of understanding can give you confidence that the basic, pragmatic understanding in (1) has honest roots. It also shows the way that (1) is not 100% on target (although good enough for a large fraction of mathematical work). But for many people, algebra is a rocky road to understanding. The starting point for the algebraic understanding is the Taylor polynomial approximation for \\(e^{\\omega t}\\). Recall from Chapter 26 that \\[e^{\\omega t} = 1 + \\omega t + \\frac{1}{2!}\\omega^2 t^2 + \\frac{1}{3!}\\omega^3 t^3 + \\frac{1}{4!} \\omega^4 t^4 + \\frac{1}{5!} \\omega^5 t^5 + \\frac{1}{6!} \\omega^6 t^6 + \\cdots\\] You may also recall the Taylor polynomial expansion of sine and cosine: \\[ \\cos(\\omega t) = 1 - \\frac{1}{2!} \\omega^2 t^2 + \\frac{1}{4!}\\omega^4 t^4 - \\frac{1}{6!} \\omega^6 t^6 + \\cdots\\] \\[\\color{magenta}{\\sin(\\omega t) = \\omega t - \\frac{1}{3!}\\omega^3 t^3 + \\frac{1}{5!} \\omega^5 t^5 + \\cdots}\\] You can see some association between \\(e^{wt}\\), \\(\\cos(\\omega t)\\), and \\(\\sin{\\omega t}\\) by looking at \\[\\cos(\\omega t) + \\color{magenta}{i \\sin(\\omega t)} = 1 + \\color{magenta}{i \\omega t} -\\frac{1}{2!} \\omega^2 t^2 - \\color{magenta}{i \\frac{1}{3!} \\omega^3 t^3} + \\frac{1}{4!}\\omega^4 t^4 + \\color{magenta}{i \\frac{1}{5!} \\omega^5 t^5} - \\frac{1}{6!}\\omega^6 t^6 + \\cdots\\] Now consider the Taylor polynomial for \\(e^{i\\omega t}\\). This will be the same as the Taylor polynomial for \\(e^{\\omega t}\\) but everywhere substituting \\(i \\omega\\) in place of the plain \\(\\omega\\). That is: \\[e^{i \\omega t} = 1 + \\color{magenta}{i\\omega t} + \\frac{1}{2!}i^2\\omega^2 t^2 + \\color{magenta}{\\frac{1}{3!}i^3\\omega^3 t^3} + \\frac{1}{4!} i^4\\omega^4 t^4 + \\color{magenta}{\\frac{1}{5!} i^5\\omega^5 t^5} + \\frac{1}{6!} i^6\\omega^6 t^6 + \\cdots\\] Since \\(i\\equiv \\sqrt{\\strut -1}\\), we have the following facts for the powers \\(i^n\\): \\[i^2 = -1\\ \\ \\ \\ \\ \\color{magenta}{i^3 = -i}\\ \\ \\ \\ \\ i^4 = 1\\ \\ \\ \\ \\ \\color{magenta}{i^5 = i}\\ \\ \\ \\ \\ i^6 = -1\\ \\ \\text{and so on}.\\] Substitute these facts about \\(i^n\\) into the Taylor polynomial for \\(e^{i\\omega t}\\): \\[e^{i \\omega t} = 1 + \\color{magenta}{i\\omega t} - \\frac{1}{2!}\\omega^2 t^2 - \\color{magenta}{i \\frac{1}{3!}\\omega^3 t^3} + \\frac{1}{4!} \\omega^4 t^4 + \\color{magenta}{i \\frac{1}{5!} \\omega^5 t^5} - \\frac{1}{6!} \\omega^6 t^6 + \\cdots\\] which exactly matches the Taylor polynomial for \\(\\cos{\\omega t} + \\color{magenta}{i \\sin(\\omega t)}\\). The arithmetic of complex numbers. (optional) A complex number is a number like \\(2 - 3i\\) which consists of two parts: the real-part \\(2\\) and the imaginary part \\(-3\\). When you multiply one complex number by another you get a complex number (although either the real or imaginary parts might happen to be zero.) For example: \\[(2 + 3i)^2 = (2+3i)(2+3i) = \\underbrace{4}_{2\\times 2} + \\underbrace{ \\ 6 i\\ }_{2 (3i)} + \\underbrace{\\ 6 i\\ }_{(3i)2}\\ \\ \\underbrace{- 9}_{(3i)(3i)}\\ = -5 +12 i.\\] R knows the rules for arithmetic on complex numbers. Here’s a demonstration of the oscillations that result from raising a complex number to successive powers. lambda &lt;- 0.65 + 0.76i lambda^2 ## [1] -0.1551+0.988i lambda^3 ## [1] -0.851695+0.524324i lambda^4 ## [1] -0.952088-0.3064776i lambda^5 ## [1] -0.3859342-0.9227973i lambda^6 ## [1] 0.4504687-0.8931283i lambda^7 ## [1] 0.9715821-0.2381771i lambda^8 ## [1] 0.812543+0.5835873i lambda^9 ## [1] 0.0846266+0.9968644i lambda^10 ## [1] -0.7026097+0.7122781i Notice that the real part of the result oscillates between negative and positive. The imaginary part also oscillates, but delayed a bit from the real part. Just like sine and cosine. We can get a clearer picture by plotting \\(e^{i\\omega t}\\) over the domain \\(0 &lt; t &lt; 10\\). As an example, in Figure 54.5 we’ll set \\(\\omega = 2\\). We need to be a little careful, since our plotting functions are not arranged to display complex numbers. But there is an easy workaround: plot the “real” and “imaginary” parts separately. The R operators Re() and Im() do this work. f &lt;- makeFun(exp(1i * omega * t) ~ t, omega = 2) slice_plot(Re(f(t)) ~ t, domain(t=c(0, 10)), color = &quot;magenta&quot;) %&gt;% slice_plot(Im(f(t)) ~ t, color=&quot;brown&quot;) Figure 54.5: The real and imaginary parts of \\(e^{i \\omega t}\\) plotted as a function of \\(t\\). 54.5 Damping It’s common for there to be friction, called damping, in a spring mass system. To keep things very simple, we’ll consider that the friction is proportional to the velocity and, as in the cannonball example, in the direction opposite to velocity. That is: \\[\\partial_{tt} y = -r\\, \\partial_t y -b y\\ ,\\] where \\(b\\) would be the positive number \\(\\frac{s}{m}\\) and \\(r\\) is another positive number reflecting the magnitude of friction. (Think of \\(r\\) as standing for “resistance.”) As always, this second-order differential equation can be written as a pair of first-order differential equations. One of the first-order differential equations will be \\[\\partial_t y = v\\ ,\\], which is just the definition of velocity \\(v\\). The other first-order equation will be \\[\\partial_t v = -r v - b y\\ .\\] Both equations are linear. In the previous chapter, we wrote such a pair of linear first-order differential equations in terms of a vector \\[\\vec{w(t)} = \\left[\\begin{array}{c}v(t)\\\\y(t)\\end{array}\\right]\\ .\\] In terms of the vector \\(\\vec{w(t)}\\) the dynamics can be written in vector/matrix form: \\[\\partial_t \\vec{w} = \\left[\\begin{array}{c}-r \\ \\ \\ -b\\ \\ \\\\1 \\ \\ \\ \\ \\ \\ \\ 0\\end{array}\\right]\\, \\vec{w}\\ .\\] This form suggests, at least to the avid reader of the previous chapter, that we look for a solution \\(y(t) = m_1\\, e^{\\lambda_1\\, t} + m_2\\, e^{\\lambda_2\\, t}\\) in terms of the eigenvectors and eigenvalues of the matrix \\(\\left[\\begin{array}{cc}r &amp; b\\\\1 &amp; 0\\end{array}\\right]\\). We used the R function eigen() to compute the eigenvalues and eigenvectors of the matrix, given numerical values for \\(r\\) and \\(b\\). Let’s now try to find an algebraic formula for the eigenvalues. After all, it’s the eigenvalues that determine the stability of the fixed point. As an ansatz for the for the original second-order differential equation \\[\\partial_{tt} y = r\\, \\partial_t y + b y\\ ,\\] let’s use \\(y(t) = A e^{\\lambda t}\\), a simple exponential function. Plugging in the ansatz to the differential equation gives: \\[A \\lambda^2 e^{\\lambda t} = - r A \\lambda e^{\\lambda t} - b A e^{\\lambda t}\\ .\\] We can cancel out the common term \\(A e^{\\lambda t}\\) from all the terms in the equation, and bring all the terms to the left-hand side of the equation, leaving us with \\[\\lambda^2 + r \\lambda + b = 0\\ .\\] This is a quadratic polynomial in \\(\\lambda\\), so we can use the “quadratic formula” to find values for \\(\\lambda\\) that are consistent with the parameters \\(a\\) and \\(b\\). In applying the quadratic formula you have to remember that the standard statement is for the roots of \\(a x^2 + b x + c = 0\\) and make adjustment for the fact that our polynomial uses the parameter names differently: \\(\\lambda^2 + r \\lambda + b = 0\\). \\[\\lambda = \\frac{- r \\pm \\sqrt{\\strut r^2 - 4 b}}{2}\\ .\\] Recall that the parameter \\(r\\) describes the amount of friction or resistence in the system; it’s a positive number. Similarly, the nature of springs is that \\(b\\) is a positive number. The relative values of \\(r\\) and \\(b\\) determine the motion of the system. Suppose the stiffness of the spring is much larger than the friction. Then \\(r^2 &lt; 4b\\). This being the case, the \\(\\sqrt{\\strut r^2 - 4 b}/2\\) will be an imaginary number. Altogether, the eigenvalues will be \\(\\lambda = -\\frac{r}{2} \\pm {i \\omega}\\). The solution will be \\[y = m_1 e^{\\lambda_1 t} + m_2 e^{\\lambda_2 t} \\\\ = m_1 e^{-\\frac{r}{2}t + i \\omega t} + m_2 e^{\\frac{r}{2} - i\\omega t} \\\\ = m_1 e^{-r t/2} e^{i\\omega t} + m_2 e^{-r t/2} e^{-i \\omega t} \\\\ = e^{-r t/2}\\underbrace{\\left[m_1 e^{i \\omega t} + m2 e^{i\\omega t}\\right]}_{\\text{sinusoid}(\\omega t)}\\] Result: an exponentially decaying sinusoid. To graph this function, we need to choose appropriate numerical values for \\(r\\) and \\(b\\). Let’s set \\(r=1\\). Since \\(r^2 &lt; 4b\\), we must have \\(\\frac{1}{4} &lt; b\\): we’ll choose \\(b = 6\\) which meets this criterion. Figure 54.6 shows the solution to the differential equation: traj &lt;- integrateODE(dv~ -r*v - b*y, dy ~ v, v=10, y=0, r=1, b=6, tdur=20) traj_plot(y(t) ~ t, traj) Figure 54.6: An exponentially decaying sinusoid arising from \\(r = 1\\) and \\(b = 6\\). This is the situation with a swinging door. You shove it to swing open, after which it oscillates with a decreasing amplitude. In contrast, suppose the spring is weak compared to the damping such that \\(4b &lt; r^2\\). Now \\(\\sqrt{\\strut r^2 - 4b}\\) is a positive number, not imaginary. What’s more, since \\(b\\) is positive, \\(\\sqrt{\\strut r^2 - 4 b} &lt; r\\). This means that both eigenvalues are negative. We’ll illustrate the situation with \\(r=1, b=0.2\\): traj2 &lt;- integrateODE(dv~ -r*v - b*y, dy ~ v, v=10, y=0, r=1, b=0.1, tdur=20) traj_plot(y(t) ~ t, traj2) %&gt;% gf_lims(y = c(0, NA)) Figure 54.7: A heavily damped spring-mass system with \\(r = 1\\) and \\(b = 0.1\\). The situation in Figure 54.7 is the sort of behavior one expects when giving a shove to an exit door in theater or stadium. The shove causes the door to swing open, after which it slowly returns to the closed position. That gives plenty of time for the people following you to get to the door before it closes. Finally, consider the case where \\(r^2 - 4 b = 0\\), a balance between resistance and springiness. In this case, both eigenvalues are \\(\\lambda = -r/2\\). traj3 &lt;- integrateODE(dv~ -r*v - b*y, dy ~ v, v=10, y=0, r=1, b=0.25, tdur=20) traj_plot(y(t) ~ t, traj3) %&gt;% gf_lims(y = c(0, NA)) Figure 54.8: A critically damped oscillation with \\(r=1\\), \\(b=0.25\\). This is a situation called critically damped. The door swings open, then closes as fast as it can without any oscillation. Example 54.1 \\(\\ \\) Consider the second-order linear differential equation \\[\\partial_{tt} y + 2\\, \\partial_t y - 3\\, y = 0\\ .\\] Is this system stable? For this system, \\(a=2\\) and \\(b = - 3\\), so the eigenvalues are \\[\\lambda = \\left(-2 \\pm \\sqrt{\\strut 4 + 12}\\right)/2 = 1 \\pm \\sqrt{\\strut 16}/2 = -1 \\pm 2\\] In other words, \\(\\lambda_1 = -3\\) and \\(\\lambda_2 = +1\\). This indicates that the system is a saddle: unstable in one direction and stable in the other. To confirm our work, let’s use eigen() to find the eigenvalues of the matrix \\(\\left[\\begin{array}{cc}2 &amp; 3\\\\1 &amp; 0\\end{array}\\right]\\): M &lt;- cbind(rbind(-2,1), rbind(3,0)) eigen(M) ## eigen() decomposition ## $values ## [1] -3 1 ## ## $vectors ## [,1] [,2] ## [1,] -0.9486833 -0.7071068 ## [2,] 0.3162278 -0.7071068 Although R is doing all the calculations for us, it’s possible to write the directions of the eigenvectors only in terms of the eigenvectors: \\[\\vec{\\Lambda_1} = \\left[\\begin{array}{c}\\lambda_1\\\\1\\end{array}\\right]\\ \\ \\text{and}\\ \\ \\vec{\\Lambda_2} = \\left[\\begin{array}{c}\\lambda_2\\\\1\\end{array}\\right]\\] For the system with \\(\\lambda_1 = 3\\) and \\(\\lambda_2 = -1\\), you can confirm that the eigenvectors calculated with this formula point in the same directions as the eigenvectors reported by eigen(). Let’s return to the car-following control system introduced in Chapter 53. Recall that \\(x\\) was defined to be the distance between two cars and \\(x_0\\) the distance to be maintained. In terms of \\(y = x - x_0\\) the system was \\[\\partial_{tt} y = - b y\\ .\\] You can see that this system has no damping; \\(y(t)\\) will be a sinusoidal oscillation. The ride will be more pleasant, however, if the oscillations can be damped out. To accomplish this, we should add a new term to the second-order differential equation, a damping term to give \\[\\partial_{tt} y = -a\\, \\partial_t y- b\\, y\\ .\\] We should set the parameters \\(a\\) and \\(b\\) to make the real part of the eigenvalues negative. Only then will we have designed a workable control system. For a human driver, following a car at a steady distance requires careful attention but in practice is not too difficult a task. Could it be the case that drivers have an intuitive understanding of the need for damping? Perhaps complex eigenvalues ought to be a standard topic in driving schools? That might be, but there is a more down-to-earth explanation of how humans handle the car-following task. The quantity \\(\\partial_{tt} y\\) is the acceleration, and the control pedal that leads to positive acceleration is called the “accelerator.” But the pedal does not actually set acceleration. In reality, the pedal sets velocity as well as acceleration. A simple model is \\(\\text{pedal} = r \\partial_t y + s \\partial_{tt} y\\), where \\(y\\) is the velocity of the car and \\(r\\) and \\(s\\) are positive parameters. To understand this model of the pedal, think what happens when you press the accelerator and hold it. The car accelerates, but only up to the point where a steady state velocity is reached. Or, consider what happens if you partially release the pedal. The car slows down until it reaches a new, slower, steady-state velocity. With a human driver, the control system is not \\(\\partial_{tt} y = - b y\\). Instead, the control system is \\[\\text{pedal} - p_0 = - b y\\ .\\] For steady-state driving at the desired velocity \\(\\partial_t y\\) we press the pedal by an amount \\(p_0\\). To perform the car-following task, we push down or lighten up on the pedal, depending on whether we are farther or closer to the car ahead than our desired distance. Combining the models for how \\(\\text{pedal}\\) is controlled and how \\(\\text{pedal}\\) relates to velocity and acceleration, we have \\[r \\partial_t y + s \\partial_{tt} y - p_0 = -b y\\] or, re-arranging terms \\[ \\partial_{tt} y = \\underbrace{- \\frac{r}{s} \\partial_t y}_{\\text{damping}} - \\frac{b}{s} y + p_0\\ .\\] The nature of the gas pedal itself leads to a damping term in the dynamics, without our having to think about it consciously. 54.6 Exercises Exercise XX.XX: N9iexG At the very beginning of this 1987 video, the climber, Catherine Destivelle, is dangling from a rope. Make an estimate of how long the rope is (specifically the length of the rope from the climber’s harness to the bolts at the top of the route), based on the eigenvalues of the linear dynamics of swinging. The standard differential-equation model for the changing angle \\(\\theta\\) of a pendulum is \\[L \\partial_{tt} \\theta = - g \\theta\\] where \\(L\\) is the length of the pendulum (in meters) and \\(g\\) is the acceleration due to gravity (9.8 m/s^2 on the Earth’s surface). Question A What are the eigenvalues of the standard model for swinging? \\(\\lambda_1 = L\\) and \\(\\lambda_2 = g\\)︎✘ \\(\\lambda_{1,2} = \\pm \\frac{L}{g}\\)︎✘ \\(\\lambda_{1,2} = \\pm \\sqrt{L/g}\\)︎✘ \\(\\lambda_{1,2} = \\pm ⅈ \\sqrt{L/g}\\)Correct.  Question B Units for \\(L\\) and \\(g\\) were given in the paragraph above. Using these units, what are the corresponding units of the eigenvalues? Since ⅈ is “imaginary”, it makes no sense to talk about units.︎✘ Since we multiply \\(\\lambda\\) by \\(t\\) in the solution \\(e^{\\lambda t}\\), there had better be some units to \\(\\lambda\\)! seconds/meter︎✘ 1/secondsRight!  meters per second︎✘ Question C From the video, estimate the period of the oscillation. Which of these is closest to the duration of a full back-and-forth swing?     2 seconds︎✘        3 seconds︎✘ This is a good estimate of half a cycle.       4 seconds︎✘        6 seconds\\(\\heartsuit\\ \\) Question D It’s conventional to give separate names to the components of \\(\\lambda\\). The “real” part is often denoted \\(k\\), the ⅈ part is called \\(\\omega\\). The period (in seconds, say) is the quantity \\(P\\) such that \\(\\omega P = 2 \\pi\\). What are the units of \\(\\omega\\) for \\(P\\) in seconds?     seconds︎✘        1/seconds\\(\\heartsuit\\ \\)       meters per second︎✘        It has no units.︎✘ Put together these three facts to find a formula for \\(L\\). Remember: \\(\\omega = \\sqrt{L/g}\\) and \\(6\\,\\text{sec}\\,\\omega = 2 \\pi\\) and \\(g = 9.8\\)m/s. Question E What’s a good estimate of \\(L\\)?     5 meters︎✘        10 meters\\(\\heartsuit\\ \\)       15 meters︎✘        20 meters︎✘ PS. Glad to report that as of July 2020, Catherine was 60 years old. Exercise XX.XX: CMBvRg Let’s plot \\(e^{i\\omega t}\\) over the domain \\(0 &lt; t &lt; 10\\) using \\(\\omega = 2\\). We need to be a little careful, since our plotting functions are not arranged to display complex numbers. But there is an easy workaround: plot the “real” and “imaginary” parts separately. f &lt;- makeFun(exp(1i * omega * t) ~ t, omega = 2) slice_plot(Re(f(t)) ~ t, domain(t=c(0, 10)), color = &quot;magenta&quot;) %&gt;% slice_plot(Im(f(t)) ~ t, color=&quot;brown&quot;) Question A Which part of \\(e^{i \\omega t}\\) is the cosine function? The “real” partExcellent!  The “imaginary” part︎✘ The negative of the “imaginary” part︎✘ The negative of the “real” part︎✘ Now let’s consider \\(e^{(k + i\\omega) t}\\), where the input to the exponential function has a real part \\(k\\) and an imaginary part \\(\\omega\\). As before, the output of the exponential will be a complex number, so we’ll plot the real and imaginary parts separately. g &lt;- makeFun(exp((k + 1i * omega) * t) ~ t, omega = 2, k=-1) slice_plot(Re(g(t)) ~ t, domain(t=c(0, 10)), color = &quot;orange3&quot;, npts=500) %&gt;% slice_plot(Im(g(t)) ~ t, color=&quot;dodgerblue&quot;, npts=500) Question B At what time \\(t\\) does the sine-like function complete one full oscillation?     At about \\(t=1.6\\)︎✘        At about \\(t=3.14\\)\\(\\heartsuit\\ \\)       At about \\(t=4.7\\)︎✘        At about \\(t=6.28\\)︎✘ Question C Find a value for \\(\\omega\\) that will produce one full oscillation every two time units. Graph it out to make sure that you have five full oscillations over the \\(0 &lt; t &lt; 10\\) domain. What is that \\(\\omega\\)?     \\(\\omega = 1\\)︎✘        \\(\\omega = \\pi/2\\)︎✘        \\(\\omega = \\pi\\)\\(\\heartsuit\\ \\)       \\(\\omega = 2 \\pi\\)︎✘ Question D Keeping \\(\\omega\\) at the value that produce five complete cycles over \\(0 &lt; t &lt; 10\\), find a value for \\(k\\) such that the amplitude of the oscillation at \\(t=10\\) will be half that of the amplitude at \\(t=0\\). What is \\(k\\)?     \\(k \\approx -0.70\\)︎✘        \\(k \\approx -0.07\\)\\(\\heartsuit\\ \\)       \\(k \\approx 0.07\\)︎✘        \\(k \\approx 0.70\\)︎✘ Question E Set \\(\\omega\\) at the value that produces 20 complete cycles over \\(0 &lt; t &lt; 10\\) and \\(k\\) at the value such that the amplitude of the oscillation at \\(t=10\\) will be twice that of the amplitude at \\(t=0\\). What are \\(\\omega\\) and \\(k\\)? \\(\\omega = \\pi,\\ k \\approx 0.35\\)︎✘ \\(\\omega = 2 \\pi,\\ k \\approx 0.35\\)︎✘ \\(\\omega = 4 \\pi,\\ k \\approx 0.070\\)Nice!  \\(\\omega = 6 \\pi,\\ k \\approx 0.7\\)︎✘ Exercise XX.XX: IVEjiX Passive electrical circuits Second-order differential equations are used to model simple electrical circuits. In a step outside of calculus (meaning: you won’t be examined on it) it’s worth pointing out the correspondence between concepts of motion (acceleration, velocity, position) and electrical circuits (voltage, current, charge). There are three classical idealized passive components of circuits: capacitor, denoted resistor, denoted inductor, denoted In every case, we will be interested in the voltage across the two ends of the component. And we’ll think about the dynamics of the circuit in terms of electrical charge which we’ll denote \\(x\\). For a capacitor the voltage is proportional to charge \\(x/C\\), where \\(C\\) is the “size” of the capacitor. For a resistor the voltage is proportional to the flow of charge, that is, current \\(r \\dot{x}\\), where \\(R\\) is the amount of resistance, basically the “size” of the resistor. For an inductor the voltage is proportional to the change in the flow of charge, that is, \\(L \\ddot{x}\\), where \\(L\\) is the inductance. Only a capacitor is capable of holding a voltage on its own. The other circuit elements can carry a voltage when they are part of a circuit. We’re going to explore a simple circuit. To prime the circuit, we’re going to connect the two dots at the bottom of the circuit with a battery. This will charge up the capacitor in much the same way as we “charge up” a spring by pulling on it. Next remove the battery and get ready to observe the motion. Complete the circuit by closing the switch between the two dots. Doing so establishes the circuit, analogous to setting up the dynamics of the system. The initial condition is the amount of charge \\(x\\) on the capacitor and, at the instant the switch is closed, no flow of current, giving \\(\\dot{x} = 0\\). The “force-balance” is the requirement that the sum of the voltages across the circuit elements be zero. This amounts to \\[L \\ddot{x} = -R\\, \\dot{x} - \\frac{1}{C} x \\] Consider a circuit with inductance \\(L=1\\), resistance \\(R=3\\) and capacitance \\(C = 1\\). What will be the eigenvalues of the dynamics? Will the fixed point at \\(x=0\\) be stable or not? Solution: \\(\\lambda_{1,2} = \\frac{1}{2}\\left[-3 \\pm \\sqrt{\\strut 9 - 4 }\\right] = (-3 \\pm \\sqrt{5})/2\\) so \\(\\lambda_1 \\approx -0.382\\) and \\(\\lambda_2 \\approx -2.618\\). Since both eigenvalues are negative, the fixed point is stable. Exercise XX.XX: P4xpYP Friction is an inevitable feature of real-world spring-mass systems. Without friction the spring-mass force-balance differential equation is \\(m\\partial_{tt} x = -k\\, x\\). How does friction fit in? For a mass moving at velocity \\(\\dot{x}\\), the friction force will be in the direction opposed to the velocity and, when velocity is zero, friction goes away. Following our general calculus idea of approximating with a simple straight-line function, we get a force \\(\\text{friction} = -r \\dot{x}\\). Adding in the friction force gives a new force-balance equation which has a famous name in physics: the “damped harmonic oscillator.” \\[m \\ddot{x} = -r \\dot{x} - k x\\] Note that all of the coefficients \\(m, r\\), and \\(k\\) are positive Since we’ve gotten in the habit of using \\(a\\) and \\(b\\) on the right side of the equation, we’ll re-write the force-balance equation as \\[\\ddot{x} = a \\dot{x} + b x\\] where \\(a = -r/m\\) and \\(b = -k/m\\). As the name “damped harmonic oscillator” suggests, we expect that the solution to the force-balance equation will be a “damped” oscillation, that is an oscillation that decreases in amplitude over time as friction draws energy out of the system (and dissipates it as heat). But how fast and in what form will the amplitude decrease? Question A Suppose that friction is strong, that is \\(a\\) is big. More specifically, suppose \\(a^2 &gt; 4 b\\). What will be true about \\(\\sqrt{\\strut a^2 - 4b}\\)? It will be purely “imaginary”.︎✘ It will be purely “real”.Right!  It will be complex, that is with a non-zero real part and a non-zero imaginary part.︎✘ There’s no way to tell for sure.︎✘ Question B When \\(a^2 &gt; 4b\\), can either of the eigenvalues be positive? NoCorrect.  Yes, one eigenvalue can be positive.︎✘ Both eigenvalues must be positive.︎✘ Depends on the specific values of \\(a\\) and \\(b\\).︎✘ When friction dominates (that is, large \\(|a|\\)) the eigenvalues are both real and negative. This means there is no oscillation and the motion decays to \\(x = 0\\). Question C Question: Suppose that friction is weak, that is \\(a^2 &lt; 4|b|\\). What will be true about \\(\\sqrt{a^2 + 4b}\\)? It will be purely “imaginary”.Correct.  It will be purely “real”.︎✘ It will be complex, that is with a non-zero real part and a non-zero imaginary part.︎✘ There’s no way to tell for sure.︎✘ Suppose that we define \\(\\omega \\equiv \\sqrt{\\strut 4b - a^2}/2\\) and \\(k = a/2\\). (Recall, that for \\(a\\) to describe friction, we must have \\(a &lt; 0\\).) The eigenvalues will be of the form \\({k + i\\omega}\\) and a solution to the differential equation will be \\(e^{(k + i\\omega)t} = e^{kt} e^{ i \\omega t}\\). Question D What will \\(e^{-kt} e^{i \\omega t}\\) be? An exponentially decaying sinusoidGood.  An exponentially growing sinusoid︎✘ Remember that \\(a &gt; 0\\), so \\(k = a/2 &gt; 0\\) and \\(e^{-kt}\\) is a decaying exponential. An ordinary sinusoid.︎✘ Exercise XX.XX: Yn47ct ::: {.underconstruction} Launch the cannon ball with an upward vertical component of velocity, that is, with the initial velocity vector at angle \\(\\theta\\) from the horizontal. You can model this by setting the initial \\(v_0 = 250 \\sin\\left(\\strut \\pi \\theta/180\\right)\\) and \\(u_0 = 250 \\cos\\left(\\strut \\pi \\theta/180\\right)\\), where \\(\\theta\\) has units of degrees. FIND THE \\(\\theta\\) that maximizes the horizontal distance traveled. ::: Exercise XX.XX: iX26Ra Confirm numerically, using eigen() that the eigenvalues of the matrix \\[\\left[\\begin{array}{cc}a &amp; b\\\\c &amp; d\\end{array}\\right]\\] are \\[\\lambda_{1,2} = \\frac{1}{2}\\left[{\\large\\strut}(a-d)^2 \\pm \\sqrt{\\strut(a+d)^2 - 4bc}\\right]\\] and the eigenvectors are \\[\\vec{\\Lambda_1} = \\left[\\begin{array}{c}\\lambda_1 - d\\\\c\\end{array}\\right]\\ \\ \\text{and}\\ \\ \\vec{\\Lambda_2} = \\left[\\begin{array}{c}\\lambda_2 - d\\\\c\\end{array}\\right]\\] Exercise XX.XX: xkQnvD ::: {.underconstruction} Linearize the rabbit fox system around the fixed point. Is it stable. ::: It’s remarkable that the same \\(m\\) appears both in Newton’s Second Law and in the description of the force of gravity. There was no mathematical theory for this until Albert Einstein (1879-1955)↩︎ Another bit of physics which is still not included in the differential equation is that it will only hold until the object hits the ground, at which point the force of gravity will be counter-acted by the force of the ground on the object.↩︎ "],["forcing.html", "Chapter 55 Forcing and resonance", " Chapter 55 Forcing and resonance Harmonic Oscillator Forcing and resonance maybe return to the cruise control stability problem, putting in disturbances from the car in front. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
