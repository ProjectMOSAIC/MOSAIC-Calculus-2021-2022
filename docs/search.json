[{"path":"index.html","id":"welcome-to-calculus","chapter":"Welcome to calculus","heading":"Welcome to calculus","text":"Calculus set concepts techniques form mathematical basis dealing motion, growth, decay, oscillation. phenomena can simple ball arcing ballistically air complex airflow wing generates lift. Calculus used biology business, chemistry, physics engineering. foundation weather prediction understanding climate change. basis algorithms heart rate blood oxygen measurement wristwatches. key part language science. electron orbitals chemistry, stresses bones beams, business cycle recession rebound understood primarily calculus. 10Calculus central science beginnings. coincidence scientific method introduced language calculus invented small group people historical period known Enlightenment. Learning calculus always badge honor entry ticket professions. Millions students’ career ambitions enhanced passing calculus course thwarted lack access one.1880s, hit musical featured “model modern major general.” One claims modernity: “’m good integral differential calculus.” (Watch .)modern 1880 modern anymore. Yet, amazingly, calculus today every bit central science technology ever much important logistics, economics myriad fields ever . reason science, engineering, society now fully adopted computer almost aspects work, study, life. collection use data growing dramatically. Machine learning become way human decision makers interact data.Think means become “computerized.” take everyday example, consider video. span human life, moved system involved people going theaters watch shadows recorded cellulose film distribution airwaves low-resolution television, introduction high-def broadcast video, demand streaming huge libraries movies. Just anyone can record, edit, distribute video. range topics (including calculus) can access video tutorial demonstration incredibly vast. recent progress owed computers. 20The “stuff” computers operate, transform, transmit always mathematical representations stored bits. creation mathematical representations objects events real world essential every task sort computer performs. Calculus key component inventing using representations.may scratching head. calculus important, many friends took calculus came away wondering ? ’s important “slopes” “areas” come high-school teacher might trouble telling calculus ?disconnect enthusiasm expressed preceding paragraphs lived experience students real. two major reasons disconnect, tackle head-book.First, teachers mathematics deep respect tradition. respect merits, result almost calculus taught using methods appropriate era paper pencil–computer era. see, book express concepts calculus way carries directly uses calculus computers genuine work. 30Second, uses calculus enabled topics Calc Calc II alone, courses Calc /II preliminary: linear algebra dynamics. small fraction students start Calc ever reach parts calculus useful. Fortunately, large amount bloat standard textbook topics Calc /II can removed make room important topics. try book.","code":""},{"path":"index.html","id":"computing-and-apps","chapter":"Welcome to calculus","heading":"Computing and apps","text":"text provides two complementary ways access computing. intuitive designed purely exercise visualize mathematical concepts mouse-driven, graphical apps. illustrate, app ’ll use Block 6. can click snapshot open app browser.fundamentally, carrying computing composing computer commands text computer carry commands. One good way sandbox–kind app provides safe place enter commands. ’ll access sandbox browser (click image try now).’ve entered computer commands, press “Run” button commands carried . (can also press CTRL+Enter keyboard.)40An important technique teaching learning computing present scaffolding computer commands. first, scaffolding may complete, correct commands can cut--pasted sandbox calculation carried . times left student modify fill missing parts scaffolding. example, introduce drawing graphs functions choice domain, might see scaffold blanks filled :can hardly expected point make sense part command, soon .get used computing sandbox, may prefer install R RStudio software laptop. usually provides faster response lowers load sandbox cloud servers used students.Experienced R users may even prefer skip sandbox entirely use standard resources RStudio edit evaluate computer commands. ’d use exactly R commands regardless whether use cloud server laptop.","code":"slice_plot( exp(-3*t) ~ t, domain( --fill in domain-- ))"},{"path":"index.html","id":"exercises-and-feedback","chapter":"Welcome to calculus","heading":"Exercises and feedback","text":"Learning facilitated rapid, formative feedback. Many exercises book arranged give .50Short answer exercises often arranged give immediate feedback goes beyond right--wrong. words, answer incorrect, try tell incorrect provide hint guide correct answer. frivolous example:Question word calculus mean literally?small stone Right-oh! stones part apparatus numerical calculations, back days pencil invented. source trouble students. ︎✘ Calculus sometimes reputation, say, “pain, gain.” Find better answer. element calcium. ︎✘ , get right answer ’ll realize two related cases. exercises meant drill, provide right--wrong feedback. Still exercises provide feedback . Typically, intended raise stakes graded work, encouraging think carefully choosing answer.","code":""},{"path":"change.html","id":"change","chapter":"1 Change","heading":"1 Change","text":"Calculus change, change relationships. Consider complex intricate network relationships determine climate: changing climate implies relationship , say, global average temperature time. Scientists know temperature changes levels CO2 methane change due production elimination atmospheric geological processes. change one component climate (e.g., ocean acidification pH level) provokes change others. Calculus foundational study change relationships. 100This book presents calculus terms two simple concepts central study change: quantities functions. words everyday meanings , happily, close specific mathematical concepts using . Close … identical. , pay careful attention brief descriptions follow.","code":""},{"path":"change.html","id":"quantity-vs-number","chapter":"1 Change","heading":"1.1 Quantity vs number","text":"mathematical quantity amount. measure amounts depends kind stuff measuring. real-world stuff might mass time length. equally well can velocity volume momentum corn yield per acre. live world stuff, tangible (e.g., corn, mass, force) harder get hands minds around (acceleration, crop yield, fuel economy). important use calculus helping us conceptualize abstract kinds stuff mathematical compositions simpler stuff. example, crop yield incorporates mass length time. Later, ’ll see us using scientific-sounding term dimension instead “stuff.” fact, Chapter 16 entirely dedicated topic dimensions, now ’s sufficient understand numbers alone quantities.people inclined think “quantity” “number”; conflate two. understandable misguided. number meaningless. meaning number 5 without context? Quantity, hand, combines number appropriate context describe amount stuff.first thing need know quantity kind stuff describes. “mile” kind stuff: length. meter kind stuff: length. liter different kind stuff: volume. gallon acre-foot kind stuff: volume. inch (length) kind stuff hour (time).“Stuff,” mean , measure. know, measure units. units appropriate depends kind stuff. Meters, miles, microns appropriate units length, even though actual lengths units differ markedly. (mile roughly 1.6 million millimeters.) 110Only know dimension units number meaning. Thus, number part specifying quantity.’s salient difference number quantity comes calculus: sorts arithmetic mathematical operations can performed combine numbers: addition, multiplication, square roots, etc. performing mathematics quantities, multiplication division universally allowed. addition subtraction, square roots, , operation makes sense dimensions suitable.mathematics units dimension technical world common sense everyday world. instance (may make sense point), people tell taking square root 10 liters, know immediately either just mistaken haven’t told essential elements situation. ’s just someone said, “swam across tennis court.” know person either used wrong verb—walk run work—wasn’t tennis court, something important unstated, perhaps, “flood, swam across tennis court.”","code":""},{"path":"change.html","id":"functions","chapter":"1 Change","heading":"1.2 Functions","text":"central concept book functions mathematical computing sense. Functions primary topic Block 1. function something takes one inputs returns output. calculus, ’ll deal mainly functions take one quantities inputs return another quantity output. sometimes ’ll work functions take functions input return quantity output. even functions take function input return function output.function something takes one inputs returns output.’ve almost certainly seen functions expressed mathematical form \\(f(x)\\). function \\(f()\\), input \\(x\\). Perhaps ’s obvious point \\(x\\) quantity. \\(f(x)\\) means apply function \\(f()\\) input quantity \\(x\\), creating output \\(f(x)\\). computing, explicit notations identify output function. Strangely, high-school mathematics . major source confusion students learning calculus professionals using computers work calculus. 120It’s possible present calculus without functions. instance, Isaac Newton, inventor calculus, spoke “flowing quantities.”1It’s practically impossible (generally unwise) computing without functions. basic building block every mainstream modern computer language. Since operations calculus actual practice performed computer, common sense suggests describe calculus terms functions. ’s book., may take bit getting used . reason notation used high-school algebra almost calculus texts notation functions. example, many students familiar famous equation: \\[y = m x + b\\]\nUsing language math classes, can say equation involves two “variables.” experience, know variables \\(x\\) \\(y\\). letters, \\(m\\) \\(b\\), something else. Many students reflexively call “slope” “intercept” “line.”used probably don’t see huge ambiguity involved. instance, variable? Common sense suggest ’s thing varies. know value \\(x\\), still variable? statistics, variable something else entirely: trait. Since statistics mathematics used together, bound bring confusion. 130The notation equations poor substitute notation functions. instance, input output? ’s explicitly stated equation. , using allowed manipulations algebra, re-arrange \\[y = m x + b \\ \\ \\text{}\\ \\ \\ m = \\frac{y-b}{x}\\] still function? , function \\(m x + b\\)? \\(x\\) input \\(x\\) \\(y\\) inputs? \\(b\\)? re-arrangement, problem \\(x\\) zero, problem never encounter original \\(y=mx+b\\).engineers mathematicians invented computer languages realized explicit identifying input, output, function ; computers demand unambiguous instructions.2 Sorting difficult process even mathematically talented skilled pioneers notation. , can forgiven occasional confusion dealing notation pre-dates computing. 140In book ’ll explicit consistent ways denote functions can always figure inputs translated output. good start learning read function notation see equivalent \\(y=m x + b\\) notation: \\[g(x) \\equiv m x + b\\]\nNotice ’re using \\(\\equiv\\) (three parallel bars) rather \\(=\\). Pronounce \\(\\equiv\\) “defined ,” “equiv” short. ’s \\(y\\). \\(x\\) appears parentheses left side \\(\\equiv\\) say explicitly “\\(x\\) stands input.” notation provides place state name function, case \\(g()\\), can refer function unambiguously operations . Since often ’ll using many functions time, ’s helpful way distinguish name. functional notation makes easy create many different names, e.g. \\(g_\\star()\\), \\(h_\\text{altitude}()\\), azimuth(), . high-school habit using \\(y\\) doesn’t give flexibility.","code":""},{"path":"change.html","id":"fundamental-model-of-change","chapter":"1 Change","heading":"1.3 Fundamental model of change","text":"start chapter, says, “Calculus change, change relationships.” idea function gives definite perspective . relationship function’s input function’s output. input might day year (1-365, often called “Julian Date”), output cumulative rainfall day. Every day rains, cumulative rainfall increases. another function(, input might altitude hike Pikes Peak output air temperature. Typically, gain altitude temperature goes . still another function, input might number hours noon, output brightness sunlight. sun goes , light grows dimmer, point. 150The rate change based simple question: input changes \\(x = \\) \\(x = B\\), much output change? course, output function \\(f(x)\\) \\(f(x=)\\) \\(f(x=B)\\) respectively. rate--change relationship ratio \\[\\frac{\\color{red}{f(x=B) - f(x=)}}{\\color{blue}{B-}}\\ \\ \\text{also written}\\ \\ \\frac{\\color{red}{\\text{rise}}}{\\color{blue}{\\text{run}}}\\]focus rate change rather something simpler, example net change \\(\\color{red}{f(x=B) - f(x=)}\\)? reason goes back scientific breakthrough 1600s: writing Newton’s laws motion. language laws first successfully expressed language rates change. intervening 400 years, laws updated theory relativity quantum mechanics. laws expressed rates change. undertaking study just quantitative field engineering economics ’ll find theory expressed using functions rates change.may recognize formula rate change familiar quantity: slope line. Everyone understands line , geometry primary concern . describe relationships using functions us straight-line function fundamental way expressing relationship. Straight-line functions can written several ways, ’ll tend use two predominant forms:\n\\[\\line(x) \\equiv x + b\\ \\ \\ \\text{}\\ \\ \\ \\ \\line(x) \\equiv [x - x_0]\\]\ntwo forms interchangeable, ’ll see upcoming chapters, sometimes ’s convenient use one form . either case, rate change , quantitatively, value parameter \\(\\). 160The simple function \\(\\line(x)\\), whose change relationship understand intuitively, used approximate complicated change relationships. approximation place, can calculations change relationships much easily. Collectively, set mathematical concepts techniques support describing calculating change relationships name Calculus.writing \\(\\line(x) \\equiv [x - x_0]\\) used square braces \\(\\left[\\strut\\ \\right]\\) rather parentheses \\(\\left(\\strut\\ \\right)\\) surround \\(x - x_0\\). Either used difference meaning. traditional mathematical notation, either serves demarcate sub-expression. ’ll using parentheses extensively expressions like \\(\\line(x)\\), ’s nice visual break.Since inputs functions quantities, ’s convenient give names remind human reader stand .common name use book input function :\\(\\large x\\) general-purpose name complies practice high-school algebra. Remember, us \\(x\\) “unknown” often algebra; calculus \\(x\\) name input.Perhaps next common input name \\(\\large t\\). name typically used input meant time. creating function represent relationship time (day) outdoor brightness, might use notation: \\(\\text{brightness}(t)\\)input names use book \\(y\\), \\(z\\), \\(u\\), \\(v\\), \\(w\\). won’t shy away descriptive names, like \\(T\\) “temperature” \\(V\\) volume, even \\(\\text{altitude}\\) (describes ).following function definitions, input name?Question Input name \\(g(t) \\equiv 2 t^2 + 8\\)?    t Right-oh!        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question B Input name \\(\\line(z) \\equiv z + b\\)?    t ︎✘        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z Right! Question C Input name \\(h(t) \\equiv 2 t^2 + 8 w\\)?    t Good.        u ︎✘        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question D Input name \\(f(u) \\equiv u + b + u^2\\)?    t ︎✘        u Right!        v ︎✘        w ︎✘        x ︎✘        y ︎✘        z ︎✘ Question E Input name \\(g(w) \\equiv x + 4\\)?plots shows graph function two inputs, \\(\\) \\(B\\), marked.Question plot (1), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)    -15/2 ︎✘ Remember take difference: \\(f(B) - f()\\).        15/2 ︎✘ order B significant!        2/15 ︎✘ ’s “rise” “run,” way around.        -2/15 ︎✘ ’s “rise” “run,” way around.        8/2 ︎✘ order B significant!        -8/2 Right-oh!        2/8 ︎✘ order B significant!        -2/8 ︎✘ ’s “rise” “run,” way around.        -15/5 ︎✘ Remember take difference: \\(B - \\) Question B plot (2), rate change interval \\(\\) \\(B\\)? (Pick closest answer.)    -17/2 ︎✘ Remember take difference: \\(f(B) - f()\\).        2/17 ︎✘ ’s “rise” “run,” way around.        -10/2 ︎✘ order B significant!        10/2 Right-oh!        2/10 ︎✘ order B significant!        -2/10 ︎✘ ’s “rise” “run,” way around.        -17/-5 ︎✘ Remember take difference: \\(B - \\) Question C haven’t told exactly yet, give try. rate change near point marked \\(C\\)? (Pick closest answer.))","code":""},{"path":"pattern-book.html","id":"pattern-book","chapter":"2 Functions for modeling","heading":"2 Functions for modeling","text":"*Mathematical modeling process mathematics used understand, analyze, predict real-world situation. process often occurs cycles revisit following three stages: 200Translate real-world situation mathematical form (called model)Shape model answer question handEvaluate model’s reliability agreement real-world situationWe’ll discuss stage modeling process following paragraphs explore concrete example way Sir Isaac Newton applied theory universal gravitation motion planets.first stage mathematical modeling involves translating real-world situation mathematical form; output result stage called mathematical model. book objective translation phase almost always choose construct one functions represent relationships involved system studied. ’ll learn several strategies turning know system appropriate functions. ’ll learn standard frameworks organizing ideas help determine functions related, instance Newton’s framework relating position, velocity, acceleration rates change one another. 210As concrete example first stage, consider Newton translate observations planetary motion mathematical form. trying make sense motion planets light novel theory gravity universal force attraction masses, rather something peculiar celestial bodies. showed motions planets, moons, Sun governed basic principles apple falling tree. , modeled force quantity can measured, simplified complexity planets mere masses (another measurable quantity), supposed position motion related.\n\ntheory motion planets based two fundamental mathematical models: First,\n\\[F = ma\\ \\ \\ \\text{(Newton's Second Law)}\\] relates force, mass, acceleration. Second, \\[F = \\frac{G m_1 m_2}{d^2}\\ \\ \\ \\text{(Law Universal Gravitation)}\\]\n(sometimes called inverse square law), relates mass two objects (\\(m_1\\) \\(m_2\\)), distance force gravitation. ’ll get purpose \\(G\\) Chapter 16, moment, understand process translating observations planetary motion mathematical form characteristic first stage modeling process.second stage modeling involves mathematical work shape model form can directly answer modeler’s question interest. instance, Newton knew previous astronomical observations Kepler’s theorizing planets’ orbits elliptical shape needed work two models order deduce orbital shapes consistent Second Law Universal Gravitation.book ’ll learn use several key tools mathematical work functions. might well name now: differentiation, anti-differentiation, optimization, zero-finding. tools derive directly Newton’s work planetary motion, thankfully, constrained using technology day application. Instead, leverage modern computers make tool easier use. job learn enough know , , use tool.third final stage mathematical modeling often involves evaluating model. goal determine reliable model’s answer see consequences model consistent happens real world. evaluation often leads re-assessment model return stage 1 improve things. resulting loop called modeling cycle. example, seems likely Newton start knowing gravitation follows inverse square law. Perhaps went several modeling cycles found form consistent Kepler’s elliptical orbits.book ’ll learn techniques comparing models data making predictions models can compared observations. ’ll also see examples evaluation function suggests revisions might improve model.","code":""},{"path":"pattern-book.html","id":"pattern-book-functions","chapter":"2 Functions for modeling","heading":"2.1 Pattern-book functions","text":"section, introduce Pattern-book functions–short list simple mathematical functions provide large majority tools representing real world mathematical object.\nThink items list different actors, skilled portraying archetypical character: hero, outlaw, lover, fool, comic. play brings together different characters, costumes , relates one another dialog means. purpose telling story providing insight human relationships emotions. 230A mathematical model kind story mathematical modeler kind playwright. combines mathematical character types tell story relationships. handful archetypal mathematical functions, analog character actors drama comedy. creating mathematical model, clothe actors suit era location assemble together harmony discord.Costume designers others start nothing. reference guides collect patterns designer can customize needs hand. reference guides sometimes called “pattern books.” (See Figure 2.1 example.)\nFigure 2.1: pattern book theatrical costumes\nSimilarly, start pattern set functions collected generations experience. remind us role modeling, ’ll call pattern-book functions. pattern-book functions useful describing diverse aspects real world simple calculus-related properties make relatively easy deal . just handful pattern-book functions untold numbers useful modeling functions can constructed. Mastering calculus part matter becoming familiar mathematical connections among pattern-book functions. (’ll see due time.)list pattern-book functions showing traditional notation R formula:functions shown traditional formula notation highlight connections math already studied, \\(x\\) used input functions tradition. 240The list pattern-book functions short. memorize names able easily associate name traditional notation.next several chapters, introduce several features functions. features include:monotonicity downconcavity downhorizontal asymptotesvertical asymptotesperiodicitycontinuityBy end Block 1, able list basic pattern-book functions describe features relevant . 250These pattern-book functions widely applicable. nobody confuse pictures pattern book costumes ready wear. pattern must tailored fit actor customized fit theme, setting, action story. 260Similarly, mathematical functions used real-world applications—opposed pattern-book functions—adorned parameters. Parameters work fitting pattern units dimensions input output quantities. Continuing analogy, pattern sock, parameter size needed fit foot. just different systems sizing shirts, trousers, shoes, , tradition favored idioms parameterizing different kinds pattern-book functions. haven’t yet introduced idioms, Chapter ?? well advised learn interpret glance.universal agreement names pattern-book functions except two: gaussian logarithm.name “gaussian” descriptive; graph gaussian function looks like camel’s hump, curve bell, bump road. sorts bell-shaped functions differ slightly origins detailed shape. book, may use terms “hump,” “bell,” “bump” remind basic shape, specific mathematical function mind called gaussian function, named tremendously influential mathematician, Carl Friedrich Gauss (1777-1855). function, first published 1718 (Gauss born), important role throughout physical science, technology, data science. probability theory social sciences, shape function given simple name “normal distribution”; shows many places considered utterly unsurprising “normal.”name “logarithm” anything descriptive. name coined inventor, John Napier (1550-1617), emphasize original purpose invention: simplify work multiplication exponentiation. name comes Greek words logos, meaning “reasoning” “reckoning,” arithmos, meaning “number.” catchy marketing term new invention, least speak Greek!Although invented practical work numerical calculation, logarithm function become central mathematical theory well modern disciplines thermodynamics information theory. logarithm key measurement information magnitude. know, units information used particularly describe information storage capacity computers: bits, bytes, megabytes, gigabytes, . much way different units length (cm, meter, kilometer, inch, mile, …), different units information magnitude. almost everything measured, speak “units” measurement. logarithms, instead “units” tradition another word used: base logarithm. common units outside theoretical mathematics base-2 (“bit”) base-10 (“decade”). unit convenient mathematical notation “base e,” \\(e = 2.71828182845905...\\). genuinely good choice units logarithm, ’s hardly obvious anyone encountering first time. make choice palatable, ’s marketed “base natural logarithm.” book, ’ll using natural logarithm official pattern-book logarithm.","code":""},{"path":"pattern-book.html","id":"the-power-law-family","chapter":"2 Functions for modeling","heading":"2.2 The power-law family","text":"Three pattern-book functions—\\(1/x\\), \\(x\\), \\(x^2\\)—actually belong infinite family called power-law functions. three shown occur often closely related pattern-book functions receive special names (inverse, proportional, square) place list; however, family power-law functions form general pattern needed modeling.examples power-law functions \\(x^3, x^4, \\ldots\\) well \\(x^{1/2}\\) (also written \\(\\sqrt{x}\\)), \\(x^{1.36}\\), . also special (albiet less frequently used) names, power-law functions can written \\(x^p\\), \\(x\\) input \\(p\\) number. 290.Within power-law family, helpful know able differentiate several overlapping groups:monomials. power-law functions \\(m_0(x) \\equiv x^0\\), \\(m_1(x) \\equiv x^1\\), \\(m_2(x) \\equiv x^2\\), \\(\\ldots\\), \\(m_p(x) \\equiv x^p\\), \\(\\ldots\\), \\(p\\) whole number (.e., non-negative integer). course, \\(m_0()\\) exactly constant function, since \\(x^0 = 1\\). Likewise, \\(m_1(x)\\) identity function since \\(x^1 = x\\). rest, just two general shapes: arms even powers \\(p\\) (like \\(x^2\\), parabola); one arm odd powers \\(p\\) (like \\(x^3\\), cubic).\nFigure 2.2: Graphs monomial functions order 2 5.\nnegative powers. power-law functions \\(p<0\\), \\(f(x) \\equiv x^{-1}\\), \\(g(x) \\equiv x^{-2}\\), \\(h(x) \\equiv x^{-1.5}\\). negative powers, size output inversely proportional size input. words, input large (close zero) output small, input small (close zero), output large. behavior happens negative exponent like \\(x^{-2}\\) can rewritten \\(\\frac{1}{x^2}\\); input inverted becomes denominator, hence term “inversely proportional.”\nFigure 2.3: Graphs power-law functions negative exponents. Note function output large \\(x\\) near zero.\nnon-integer powers, e.g. \\(f(x) = \\sqrt{x}\\), \\(g(x) = x^\\pi\\), . \\(p\\) either fraction irrational number (like \\(\\pi\\)), real-valued power-function \\(x^p\\) can take non-negative numbers input. words, domain \\(x^p\\) \\(0\\) \\(\\infty)\\) \\(p\\) integer. likely already encountered domain restriction using power law \\(p=\\frac{1}{2}\\), since \\(f(x)\\equiv x^{1/2}=\\sqrt{x}\\), square root negative number real number. may heard imaginary numbers allow take square root negative number, moment, need understand working real-valued power-law functions non-integer exponents, input must non-negative.\nFigure 2.4: domain power-law functions non-integer power \\(0 \\leq x < \\infty\\).\n","code":""},{"path":"pattern-book.html","id":"constructing-functions","chapter":"2 Functions for modeling","heading":"2.3 Constructing functions","text":"Often, modeling involves building complicated function simple shapes provided pattern-book functions. yet time say much , want show construction looks like traditional style notation style used programming computers. ’ll see later, make complicated functions generally combine simpler functions one three different ways: linear combinations, products, composition. 270For instance, linear combination simple functions called “monomials” can look like traditional notation:\n\\[g(x) \\equiv 2 + 3 x - 7x^2\\]\nlike R/mosaic computer notation using:notice R/mosaic notation elements common traditional notation, order somewhat different.g <- means give function name \\(g.\\) (book, usually write function names pair parentheses suffix, e.g. \\(g(x).\\) reminds name refers function. R name simply g, even though often write g() text.) <- called assignment operator, instruction R give name object. , object R function created makeFun().2 + 3*x - 7*x^2 formula function, , expression found right-hand side \\(\\equiv\\) traditional notation.~ x part R/mosaic notation says, “name input x.” traditional notation, name input parentheses following name function \\(g\\,{\\mathbf{(x)}}\\), R/mosaic notation, two different places: function name left assignment operator (<-) name name input follows tilde (~).formula name input always related R/mosaic notation called tilde expression. formula left-hand side tilde (~) argument name right-hand side tilde. one argument, names go right-hand side tilde expression, separated &. (people prefer use + separator. ’s fine, use & convention throughout book.)makeFun() R/mosaic operator takes information contained tilde expression turns R function; literally “makes R function,” hence name, makeFun().Functions constructed product simple functions can look like tradition notation:\n\\[h(t) \\equiv \\sin(t) e^{-t}\\]\nlike computer notation:","code":"\ng <- makeFun(2 + 3*x - 7*x^2 ~ x)\nh <- makeFun(sin(t)*exp(-t) ~ t)"},{"path":"pattern-book.html","id":"function-shapes","chapter":"2 Functions for modeling","heading":"2.4 Function shapes","text":"going building models selecting appropriate function putting functions together various ways. might remind Lego blocks. know, Legos come different shapes: \\(6\\times 2\\), \\(4\\times 2\\), \\(2\\times 2\\), . Similarly, pattern-book functions distinctively shaped graph. Knowing shapes name help need build model. 280The proportional function constant function extremely simple shapes. Note graph constant function just line, line zero slope.tempting deny constant function function. , output depend input. Still, situation arises frequently modeling: start supposing one quantity depends another, sometimes turns . Since functions way representing relationships, helpful function situation “relationship.” constant function job.may also notice proportional function shown nothing change input; simply returns output value received input. reason, proportional pattern-book function (\\(f(x)=x\\)) sometimes called identity function. Later show simple pattern-book function can endowed parameters form basis many change relationships.Copy paste R/mosaic command SANDBOX. command shows simple way graph function, case exp(). Press “Run code” execute command draw graph.exercise, ’ll modifying sandbox code draw different functions, can examine shapes.task read interpret graphs basic modeling functions. , looking zero-crossings: neighborhood point function’s domain output function negative inputs one side positive inputs side. zero touched crossed, ’ll call “touched zero.”Make list pattern-book functions. function list, say whether function crosses zero, touches zero doesn’t cross, doesn’t touch part domain shown graphic: \\(-3 \\leq x \\leq 3\\). Also note value function appears reaching horizontal asymptote zero negative \\(x\\), positive \\(x\\), , neither.’ll show answers exponential function. ’ll modify computer command graph pattern-book functions.pattern-book functions, graph crosses either vertical axis (\\(x=0\\)) horizontal axis (, \\(f(x) = 0\\)), . ’s helpful know exact quantitative value input function graph crosses horizontal axis, exact quantitative value output function graph crosses vertical axis.questions ask , pattern-book functions, find specific input/output pair know exact values. (Feel free open SANDBOX try various possibilities.)Question exact output pattern-book exponential function input \\(x=0\\)?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 Excellent! Question B exact output pattern-book sine function input \\(x=0\\)?    0 Good.        0.3989423 ︎✘        1/2 ︎✘        1 ︎✘ \nQuestion C exact input pattern-book logarithm function output 0?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 Right-oh! Question D exact output pattern-book sigmoid function input \\(x=0\\)?    0 ︎✘        0.3989423 ︎✘        1/2 Right!        1 ︎✘ Question E output (several digits) pattern-book hump function input \\(x=0\\)?    0 ︎✘        0.3989423 Correct. Right. 0.4 ’re sketching graph.        1/2 ︎✘        1 ︎✘ Question F exact input pattern-book reciprocal function output 1? (’s axis crossing.)    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 Excellent! Question G exact input pattern-book proportional function output 1/2? (’s axis crossing.)    0 ︎✘        0.3989423 ︎✘        1/2 Right-oh!        1 ︎✘ Question H exact output pattern-book constant function?    0 ︎✘        0.3989423 ︎✘        1/2 ︎✘        1 Right-oh! Question pattern-book square function just touches horizontal axis. ’s input happens?pattern-book functions distinctive property called scale invariance. means graph function looks even plotted different horizontal vertical axes. function \\(\\ln(x)\\) plotted two different scales Figure ?? shows graph function practically shape.Figure ?? shows power-law function, \\(g(x) \\equiv x^2\\), also scale invariant.pattern-book functions scale invariant, example \\(\\sin(x)\\).contrast scale-invariant functions, pattern-book functions characteristic scale. domain length whole characteristic feature function evident. Graphing larger domains simply squashes characteristic feature small part graphic domain. instance, \\(\\sin()\\) function cycle characteristic feature. cycle pattern-book function characteristic length \\(2 \\pi\\), length cycle. Consequently, graph looks different depending length graphics domain multiples characteristic length. can see Figure ?? graph domain \\(-10 < x < 10\\), , 3 times characteristic scale, looks different graph larger domain length 30 times characteristic scale.equally well say \\(\\sin()\\) function characteristic scale 360 degrees, amount \\(2 \\pi\\) radians. people find easiest interpret angles measured degrees, usual practice mathematics computing argument \\(\\sin()\\) (trigonometric functions interpreted) radians. might think choice using degrees using radians arbitrary. Chapter ?? ’ll see surprising reason radians “natural” way measure angles.Question gaussian (hump) function dnorm() characteristic scale. domain length can encompass characteristic shape gaussian?    0.1 ︎✘        1 ︎✘        4 Good. Almost gaussian fits within domain \\(-2 < x < 4\\), length 4.        16 ︎✘        256 ︎✘ Question B sigmoid function pnorm() also characteristic scale. domain length can encompass characteristic shape sigmoid?","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-3, 3)))"},{"path":"pattern-book.html","id":"instructor-notes","chapter":"2 Functions for modeling","heading":"2.5 Instructor notes","text":"huge coincidence one pattern-book functions match particular relationship, one shown data. ’ll need tailor pattern-book functions combine various ways capture real-world relationship. 295A helpful demonstration students can display real-world data, ask pattern-book function seems best lot, ask students shift shrink function correspond better data.start, data relating pressure volume gas constant temperature s collected Robert Boyle (1627-1691) led formulate “Boyle’s Law.” correct pattern-book function data \\(\\recip(x) \\equiv 1/x\\). plotted doesn’t match data. (Try scaling function \\(1/x\\) \\(1000/x\\). home correct value.)illustrate, ’s graph month--month utility data house Minnesota plotted along pattern-book function \\(x\\).Ask students straight-line pattern appropriate modeling data \\(x\\) isn’t, , good model.monthly use natural gas (mainly heating) versus average outdoor temperature month. ’ll plot next exponential function.\nFlipping exponential left right scaling help:","code":"\ngf_point(pressure ~ volume, data = Boyle) %>%\n  slice_plot(1/volume ~ volume)\ngf_point(kwh ~ elecbill, data = Utilities) %>%\n  slice_plot(x ~ x, domain(x=c(0,140)))\ngf_point(ccf ~ temp, data = Home_utilities) \nslice_plot(exp(temp) ~ temp, domain(temp=c(0,80)))\ngf_point(ccf ~ temp, data = Home_utilities) %>%\nslice_plot(300*exp(-temp/20) ~ temp, domain(temp=c(0,80)))"},{"path":"structure-of-a-function.html","id":"structure-of-a-function","chapter":"3 Structure of a function","heading":"3 Structure of a function","text":"[F-10] Recognize functions way representing (storing) know able use properly basic nomenclature functions).’re used mathematical functions stated formulas, expressions composed addition, multiplication, square roots, . 300The expression \\(m x + b\\) uses multiplication addition.\\(\\sqrt{\\strut 1 - x^2}\\) uses squaring (\\(x^2\\)), subtraction square root.\\(3\\sin\\left(\\frac{2 \\pi}{P} x\\right) + 4\\) uses multiplications, division, sin function, additionThere’s nothing mathematical concept “function” requires formula. computer functions general based algebraic formula. word used describe internals computer function algorithm, generalization “formula” includes many non-arithmetic operations looping branching.press function button like “sin” “ln” “exp” calculator, likely little idea process set action create result. Indeed, people , even among professionals. problem. can name function ’s appropriate purpose, can apply function input, can something output.chapter functions functions organized: name goes, input goes, determines output.","code":""},{"path":"structure-of-a-function.html","id":"inputs-to-output","chapter":"3 Structure of a function","heading":"3.1 Inputs to output","text":"using formulas extensively, best can visualize functions generally something ’s necessarily formula. section gives another perspective describe think function. Remember, functions take inputs return corresponding output. arrangement accomplishes (ensures output always returned given input) function, even arithmetic nowhere sight. example, simple useful framework organizing information table, generally set array rows columns. table can thought function, despite containing formulas arithmetic: relates one columns (input) another column (output).instance, table several internal combustion engines various sizes:row table reports one, specific engine. column one attribute engine. Using tables can easy. example, asked report fast engine named “Enya 60-4C” spins, go Enya 60-4C row “RPM” column read answer: 11,800 revolutions per minute (RPM).table like describes general relationships engine attributes. instance, might want understand relationship () RPM engine mass, relate diameter (, “bore”) depth (, “stroke”) cylinders power generated engine. single entry table doesn’t tell us general relationships; need consider rows columns whole. 310If examined relationship engine power (BHP) bore, stroke, RPM, find (rule) larger bore stroke, powerful engine. ’s qualitative description relationship. educated people able understand qualitative description. Even don’t know exactly “power” means, rough conception .Often, ’re interested quantitative description relationship one (bore, stroke) \\(\\rightarrow\\) power. Remarkably, many otherwise well-educated people uncomfortable idea using quantitative descriptions relationship: sort language description written ; perform calculations use description; translate data (table) quantitative description; translate quantitative description address particular question make decision.course constructing using quantitative descriptions: , mathematical modeling. Skills modeling essential work engineering science, highly valued many fields commerce, management, government. Often, work applying quantitative skills called calculation. name calculus used describe methods widely used undertaking calculations.Functions fundamental way organizing mathematical models calculations. undoubtedly seen previous mathematics education, ’s worth reviewing basics can share vocabulary communicating .function transformation one inputs output.keep things simple, now ’ll focus inputs outputs numeric. Later, ’ll need nuanced view “numeric” takes account different kinds things represented numbers, e.g. length, power, RPM.","code":""},{"path":"structure-of-a-function.html","id":"bureaucratic","chapter":"3 Structure of a function","heading":"3.2 A bureaucratic analogy","text":"’ll many opportunities work functions defined formulas. , emphasis functions really just way storing correspondence inputs outputs formulas need nothing except one way describing pattern. Instead formula, imagine long corridor sequence offices, identified room number. input function room number. evaluate function input, knock appropriate door , response, ’ll receive piece paper number take away . number output function. 320This sound first simple true, … mathematical function office gives exactly number every time someone knocks door. Obviously, worker office highly tedious requires special skill. Every time someone knocks worker’s door, writes number piece paper hands person knocking. person number absolutely concern office worker.utility functions depends artistry insight person creates : modeler. important point course teach artistry. Hopefully learn artistry translate insight creation functions useful work. even just use functions created others, knowing functions built helpful using properly.sort function just described, offices along single corridor. functions said one input, , equivalently, “functions one variable.” operate function, just need one number: address office ’ll collect output.Many functions one input: two, three, four, … tens, hundreds, thousands, millions, …. course, ’ll work mainly functions two inputs, skills develop applicable functions two inputs.function two inputs look like office metaphor? Imagine office building many parallel corridors, numeric ID. evaluate function, need two numeric inputs: number corridor number door along corridor. two numbers hand, locate appropriate door, knock receive output number return. 330Three inputs? Think building many floors, floor many parallel corridors, corridor many offices sequence. Now need three numbers identify particular office: floor, corridor, door.Four inputs? street many three-input functions along . Five inputs? city many parallel four-input streets. .Applying inputs function order receive output small part calculations. Calculations usually organized algorithms, just say algorithms descriptions calculation. calculation … function!calculation work? Think business. People come business one inputs. take inputs , following carefully designed protocol, hand staff, perhaps duplicating simple arithmetic create new number. Thus equipped relevant numbers, member staff goes evaluate particular function numbers. (, staff member goes appropriate street, building, floor, corridor, door, returning number provided office.) staff re-assembles roadside stand, sorting numbers returned , following strict protocol. Perhaps combine new numbers ones originally given inputs. event, send staff new instructions—person’s instructions consist simply set inputs head evaluate return . point, perhaps many cycles, perhaps just one, able combine numbers ’ve assembled single result: number return person came business first place.calculation might involve just one function evaluation, involve chain sends workers buzzing around city visiting businesses turn activate staff add urban tumult.reader familiar floors corridors office doors may note addresses discrete. , office 321 offices 320 322 neighbors. Calculus continuous functions, need way accept, say, 321.487… input. office. 340A slight modification procedure produce continuous function. works like : input 321.487… messenger goes office 321 322 collects respective outputs. Let’s imagine -14.3 12.5 respectively. ’s needed small calculation, case look like \\[-14.3 \\times (1 - 0.487...)   + 12.5 \\times 0.487...\\] called linear interpolation lets us construct continuous functions discrete data.Blocks 2 5 ’ll discuss widely used ways produce just continuous functions smooth functions. Understanding difference continuous smooth wait introduce couple calculus concepts: derivatives limits.","code":""},{"path":"structure-of-a-function.html","id":"domain-input-space","chapter":"3 Structure of a function","heading":"3.3 Domain: input space","text":"know, powerful way thinking numbers terms space geometry. instance, single number corresponds point line: -called number line. pair inputs, say, (x, y) corresponds point plane, often called Cartesian coordinate plane. Three numbers corresponds point space, perhaps organized (x, y, z) Cartesian space. higher-dimensional spaces, usually special training needed become comfortable . discomfort, might prefer work office metaphor. Just fun, ’s can think 10-dimensional space: 10 numbers, one telling planet, next specifying continent planet, country, state, city, street, building, floor, corridor, door.set inputs function can evaluated called domain function. Sometimes describe domain space, e.g. number line, plane, . Sometimes domains including restrictions. instance, particular input might meaning positive, offices corresponding negative values input. , input might restricted interval 0 1. Sometimes calculus, domain excludes isolated point. instance, may office door marked 0 neighboring doors open working offices. 350","code":""},{"path":"structure-of-a-function.html","id":"range-output-space","chapter":"3 Structure of a function","heading":"3.4 Range: output space","text":"range function set outputs can produced. Since stage ’re working functions return single number output, ’s common describe range part number line. instance, functions positive outputs. functions’ outputs always interval 0 1. (case, instance, function returns probability output.)Consider graph function \\(g(x)\\):Question domain \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ︎✘ \\(-3 \\leq x \\leq 2\\) Correct. \\(-4 \\leq x \\leq 4\\) ︎✘ might called “graphics” domain, yet function graph doesn’t extend whole interval. \\(-10 \\leq g(x) \\leq 40\\) ︎✘ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) ︎✘ domain refers horizontal axis. Question B range \\(g(x)\\)?\\(-\\infty < x < \\infty\\) ︎✘ range refers output function. \\(x\\) input. \\(-3 \\leq x \\leq 2\\) ︎✘ range refers output function. \\(x\\) input. \\(-4 \\leq y \\leq 4\\) ︎✘ ’re used calling function output \\(y\\), ’s bad habit. Break ! \\(-10 \\leq g(x) \\leq 40\\) ︎✘ vertical extent graphics frame. \\(-1 \\leq g(x) \\leq 33\\) Good. \nWeather forecasting numerical processWeather forecasting numerical process highly influential book, 1922, Lewis Fry Richardson. envisioned calculation weather forecast kind function. domain forecast latitude longitude point globe, rather rectilinear organization corridor.One fantastic illustration idea shows building constructed form inside-globe. many points globe, business. (can see clearly foreground, shows several boxes workers.) 360\nFigure 3.1: artist’s depiction organization calculations weather forecasting Richardson’s system. Source\nbusiness might work way: business person report current air pressure point globe, another person reports temperature, another reporting humidity, . compute predicted weather next day, business staff assigned visit neighboring businesses find pressure, temperature, humidity, etc. Still staffers take collected output neighbors carry arithmetic translate outputs forecast tomorrow. instance, knowing pressure neighboring points enables direction wind calculated, thus humidity temperature air coming region business handles. today’s numerical weather prediction models, globe divided finely latitude, longitude, altitude, software handles storage present conditions calculation future minutes later. Repeating process using forecast enables prediction made minutes , .important concepts calculus relate process collecting outputs neighboring points combining : instance finding difference sum. illustrate, first set equations Richardson’s Weather forecasting … written notation calculus: 370You can hardly expected point understand calculations described equations, involve physics air flow, coriolis force, etc. ’s worth pointing notation:equations momentum column air particular latitude (\\(\\phi\\)) longitude.\\(M_E\\) \\(M_N\\) east-west north-south components momentum.\\(\\partial M_E /\\partial t\\) rate east-west momentum change next small interval time (\\(\\partial t\\)).\\(p_G\\) air pressure ground level column air.\\(\\partial p_G / \\partial n\\) difference air pressure column air columns north south.Calculus provides notation describing physics climate means translate physics arithmetic calculation.two pattern-book functions domain runs whole number line: \\(-\\infty < x < \\infty\\).pattern-book function domain excludes zero negative numbers inputs?function’s domain set possible inputs function. function’s range set possible outputs. pattern-book functions, specify range.Question range pattern-book exponential function?positive outputs Right-oh! negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ︎✘ Question B range pattern-book sine function?positive outputs ︎✘ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities Excellent! Yes. output pattern-book sinusoid functions always interval -1 1, inclusive Question C range pattern-book logarithm function?positive outputs ︎✘ non-negative outputs ︎✘ negative outputs ︎✘ whole number line Correct. closed, finite interval possibilities ︎✘ Question D range pattern-book square function?positive outputs ︎✘ Close. Zero one possible outputs. can say, equivalently, range positive outputs plus 0 non-negative outputs. non-negative outputs Right-oh! negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities ︎✘ Question E range pattern-book proportional function?positive outputs ︎✘ negative outputs ︎✘ whole number line Correct. closed, finite interval possibilities ︎✘ range extends \\(-\\infty\\) \\(\\infty\\). Question F range pattern-book sigmoid function?positive outputs ︎✘ negative outputs ︎✘ whole number line ︎✘ closed, finite interval possibilities Correct. Right. pattern-book sigmoid function output always interval \\(0 \\leq \\pnorm(x) \\leq 1 .\\) Open SANDBOX. (Just click link, although may eventually given ways open sandbox.)see breakout box like , means ’re providing computer code can paste sandbox run. exercise, code isPaste two lines sandbox press “Run code.” Verify get result:[1] 1.285941Each line pasted sandbox command. first command gives value \\(x\\). second command uses value \\(x\\) calculate function output. function \\(g(x)\\equiv \\sin(x) \\times \\sqrt{\\strut x}\\). (’ll see give function name like \\(g()\\) Section ??.)simplify code single line sin(2)*sqrt(2)? produce output introduce ambiguity human reader. want make clear reader (computer) whatever \\(x\\) might , used input \\(\\sin()\\) \\(\\sqrt{\\strut\\ \\ \\ }\\) functions.following questions, numbers rounded two three significant digits. Select answer closest computer output.Question Change \\(x\\) 1. ’s output \\(\\sin(x) \\ \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 ︎✘        0.84 Good.        0.99 ︎✘        2.14 ︎✘        NaN ︎✘ Question B Change \\(x\\) 3. ’s output \\(\\sin(x) \\  \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 Right-oh!        0.84 ︎✘        0.99 ︎✘        2.14 ︎✘        NaN ︎✘ Question C Change \\(x\\) \\(-5\\). ’s output \\(\\sin(x) \\  \\sqrt{\\strut x}\\)    -1.51 ︎✘        0.244 ︎✘        0.84 ︎✘        0.99 ︎✘        2.14 ︎✘        NaN Excellent! stands --Number, get calculate square root negative input. sandbox, change function \\(\\sqrt{\\strut\\pnorm(x)}\\).Question D \\(x=2\\), ’s output \\(\\sqrt{\\strut\\pnorm(x)}\\)?activity, start getting familiar structure R computer commands. Particularly mathematical formulas involved, commands similar across many computer languages, learn applicable languages Python MATLAB.first high-level computer language FORTRAN, released 1957. name stands “formula translation.” FORTRAN enabled arithmetic operations written way nearly traditional notation. , computer programs written using alpha-numeric codes meaningless casual reader. unfortunately still use term “computer code” refer programs, despite 70-years progress improving legibility.best way learn implement mathematical formulas computer language read examples practice writing .examples:examples written using numbers inputs mathematical operations. syntax exactly using input name x y altitude, instance (x - y) / 2. order command using x y work, meaning must previously attached symbols. ’ll come back important topic another day.Read table examples several times. Note find confusing. cover right side table write R expression item left side. Similarly, cover left side table translate R expression traditional notation.Open SANDBOX , one time, write run R expression traditional-notation expressions. give numerical result traditional expressions let confirm R version correct.\\((16 - 3)/2\\) gives result 6.5\\(\\sqrt{\\frac{19}{3}}\\) gives 2.5166115\\(\\cos(\\frac{2 \\pi}{3})\\) gives -0.5\\(\\pi^3 + 2\\) gives 33.0062767\\(\\pi^{3+2}\\) gives 306.0196848… add examples …grasp render traditional-notation formulas R, read principles help consolidate understanding.Computer languages generally, R particular, involve expressions written typewriter format: one conventional character another straight line. superscripts subscripts used. , \\(\\frac{1}{3}\\) written 1/3. equivalent \\(\\sqrt{7}\\) sqrt(7).Parentheses:\nopening parenthesis directly follows name, sqrt(, means named operation applied quantity inside parentheses. sqrt(7) means “take square root 7” log(10) means “take (natural) logarithm 10.” common mathematical functions typically take one input. ’ll stick now.\nopening parenthesis directly follow name, 6 - (2+3), parentheses stand grouping exactly way traditional notation. instance, \\((6 + 15) / 3\\) translated (6 + 15) / 3.\nopening parenthesis directly follows name, sqrt(, means named operation applied quantity inside parentheses. sqrt(7) means “take square root 7” log(10) means “take (natural) logarithm 10.” common mathematical functions typically take one input. ’ll stick now.opening parenthesis directly follow name, 6 - (2+3), parentheses stand grouping exactly way traditional notation. instance, \\((6 + 15) / 3\\) translated (6 + 15) / 3.Multiplication exponentiation often written traditionally terms relative position quantities. \\((3 + 2)\\pi\\) means multiply 5 times \\(\\pi\\), even though multiplication sign written. Similar, \\(\\pi^{3 + 2}\\) means raise \\(\\pi\\) fifth power. “exponentiation sign” used, just positioning \\(3+2\\) superscript: \\(^{3+2}\\). R (almost every computer language) multiplication exponentiation must written explicitly. quantities \\((3 + 2)\\pi\\) \\(\\pi^{3 + 2}\\) translated (3 + 2) * pi pi^(3+2).One additional note: examples can written single line code, true many short formulas. Later , ’ll encounter longer formulas written single line readable spread two consecutive lines.R command complete sentence, SANDBOX display error like :Error parse(text = x, keep.source = TRUE) : :5:0: unexpected end input “unexpected end input” computer’s way saying, “haven’t finished sentence don’t know .”R expressions incomplete. job, sandbox, turn complete expression. Sometimes ’ll creative, since sentence incomplete , like computer, don’t really know means say! erroneous expressions can fixed adding changing text.Open sandbox copy items , one time, sandbox. Press “Run code” item verify get error message.first item, sandbox look like :\nFigure 3.2: Running invalid command produce error message.\n, fix command get numerical result rather error message.Working help develop eye finger-memory R commands.sin 3((16 - 4) + (14 + 2) / sqrt(7)pnorm(3; mean=2, sd=4)log[7]14(3 + 7)e^23 + 4 x + 2 x^2","code":"\nx <- 2\nsin(x)*sqrt(x)"},{"path":"fun-describing.html","id":"fun-describing","chapter":"4 Describing functions","heading":"4 Describing functions","text":"need communicate functions fellow humans computers. Important modes communication include: 400Graphs functions show “shape”Tables inputs outputsWord descriptionsComputer function nameMathematical notationIn chapter, ’ll illustrate five different modes using pattern-book functions. ’s important become proficient five.","code":""},{"path":"fun-describing.html","id":"computer-commands-slice-plot-intro","chapter":"4 Describing functions","heading":"4.1 Computer commands {# slice-plot-intro}","text":"Since ’ve already introduced pattern-book functions, good time show draw graph . short introduction, ’ll discuss graphics generally look graphics functions two inputs.pattern-book functions just single input. can draw graphs single-input functions using slice_plot() R/mosaic operator. need specify two pieces information slice_plot():function graph. R/mosaic, state ’s called tilde expression. couple examples suffice moment.\nfunction name, like exp() log() sin(), tilde expression looks like exp(x) ~ x. left side tilde put name function want graph input name parentheses. can choose input name like: using x, limited using x letter. Sometimes even use named inputs (e.g. exp(time)). right side tilde, place input name . ’ll explain name appears two places later.\nfunction written formula, instance 1/z t^2, put formula left side tilde input name right side, like 1/z ~ z 1/t ~ t.\nfunction name, like exp() log() sin(), tilde expression looks like exp(x) ~ x. left side tilde put name function want graph input name parentheses. can choose input name like: using x, limited using x letter. Sometimes even use named inputs (e.g. exp(time)). right side tilde, place input name . ’ll explain name appears two places later.function written formula, instance 1/z t^2, put formula left side tilde input name right side, like 1/z ~ z 1/t ~ t.graphics domain. know, domain function collection possible legitimate inputs. pattern-book functions, domain \\(-\\infty < x < \\infty\\). might expect, ’s impractical graphical axis infinitely long. choose finite interval function domain use. finite interval called “graphics domain.” specify domain statement like domain(x = c(-5,5)), setting graphics domain \\(-5 \\leq x \\leq 5\\). Note input name used domain() must match input name selected tilde expression.R uses c() function collect together two numbers define left right borders domain. traditional notation, write interval formats like \\((-5, 5)\\) \\([-5, 5]\\) \\(-5 \\leq x \\leq 5\\). None work R language. instance, fragment (-5, 5) complete expression R; opening parenthesis needs preceded function name. c() function invented purpose. can combine number arguments, two enough purpose : specify interval number line.3The tilde expression graphics domain specifier two arguments slice_plot(). correct commands drawing graph:","code":"\nslice_plot(sin(t) ~ t, domain(t=c(-5,5)))\nslice_plot(exp(x) ~ x, domain(x=c(-3,2)))\nslice_plot(log(z) ~ z, domain(z=c(-0.5, 10)))\nslice_plot(t^2 ~ t, domain(t=c(-2, 2)))"},{"path":"fun-describing.html","id":"tables-of-inputs-and-outputs","chapter":"4 Describing functions","heading":"4.2 Tables of inputs and outputs","text":"Another way describing function give table inputs outputs. Like graphics, table can show possible inputs.modern computing, tables one primary means describe functions. People working calculus needed reference collection books containing tables functions used. 420With computers, better faster ways get output function input. Still, modelers often use recorded data construct functions. Tables perhaps widely used method storing accessing data, although electronic spreadsheets used today instead printed tables.Even today, table can nice way describe function interested output handful possible inputs.Conceptually, ’s helpful keep mind every pattern-book function just way organizing information stored table.generate tabular descriptions functions follow book. ’s much convient implement function software output can easily displayed given inputs. hand, book ’ll often use data tabular form create modeling function. ’s little point introducing additional calculus concepts, patient.","code":""},{"path":"fun-describing.html","id":"word-descriptions","chapter":"4 Describing functions","heading":"4.3 Word descriptions","text":"Knowing correctly using handful phrases goes long way able communicate people functions single input. Often, words make sense everyday speech (“steep,” “growing,” “decaying,” “goes ,” “goes ,” “flat”). 430Sometimes words used everyday speech casual person isn’t sure exactly mean. instance, often hear phrase “growing exponentially.” graph exponential function illustrates exactly sort growth: flat small \\(x\\) growing steadily steeper steeper \\(x\\) increases.Still words best understood learn calculus. “Concave ,” “concave ,” “approaching 0 asymptotically,” “continuous,” “discontinuous,” “smooth,” “minimum …,” “minimum …,” “approaching \\(\\infty\\) asymptotically,” “vertical asymptote.”next short sections describe six simple shape concepts: concavity, continuity, monotonicity, periodicity, asymptotes, local extrema.’ll illustrate concepts using three pattern-book functions graphed Figure 4.1. 431\nFigure 4.1: Three pattern-book functions: () exponential, (b) sinusoid, (c) power-law \\(x^{-1}\\).\n","code":""},{"path":"fun-describing.html","id":"concavity","chapter":"4 Describing functions","heading":"4.3.1 Concavity","text":"slope function given input tells fast function output increasing decreasing input changes slightly. Concavity directly function output changes, function’s slope changes. instance, function might growing slowly region domain gradually shift larger growth adjacent region. , function might decaying steeply gradually shift slower decay. instances positive concavity. opposite pattern change slope called negative concavity. slope doesn’t change —straight-line functions way— concavity zero.Concavity clear appearance function graph. function positive concave region, graph looks like smile. Negative concavity looks like frown. Zero concavity straight line. 432Referring three function examples Figure 4.1 …exponential concave everywhere domain.sinusoid alternates back forth concave concave .particular power law \\(x^{-1}\\) concave \\(x > 0\\) concave \\(x < 0\\).function switches positive concavity negative concavity, sinusoid well gaussian sigmoid functions, input value switch occurs function zero concavity. (Continuous functions pass negative positive vice versa must always cross zero.) -points zero concavity called inflection points. function can zero, one, many inflection points. instance, sinusoid inflection points \\(x = \\ldots, -\\pi, 0, \\pi, 2\\pi, \\ldots\\), cubic power function \\(f(x)\\equiv x^3\\) one, exponential none.\nFigure 4.2: diagram showing cubic function concave point inflection concave thereafter.\n“Inflection point” appears news stories, important know means context. mathematical definition change direction curvature graph. business, however, generally means something less esoteric, “time significant change situation” “turning point.”4 business sense effectively means function—say profits function time, unemployment function time—non-zero concavity, . ’s existence concavity rather change sign concavity.One benefits learning calculus gain way think previous paragraph ’s systematic, ’s always easy know whether talking slope function change slope function.Answer questions pattern-book functions. can refer graphs Figures 2.2 2.4.Question best describes concavity gaussian function?’s concave. ︎✘ curves, ’s either concave . ’s concave . ︎✘ places, others. ’s concave center concave flanks. Right! ’s concave left concave right ︎✘ Look Question B best describes concavity sigmoid function?’s concave. ︎✘ curves, ’s either concave . ’s concave . ︎✘ places, others. ’s concave left concave right. ︎✘ Look ’s concave left concave right. Good. Question C best describes concavity second-order monomial \\(m_2(x) \\equiv x^2\\)?’s concave. ︎✘ curves, ’s either concave . ’s concave . ︎✘ smile frown? ’s concave left concave right. ︎✘ Look ’s concave everywhere. Good. \nactivity, examining various pattern-book functions look two different features:Slope: whether graph slope consistently positive, negative, , neither, andConcavity: whether function graphed concave , concave , neither, (.e., concave regions domain others).Copy paste R/mosaic command SANDBOX draw function graph. Remember press “Run code.”\nmodify command draw another function, replace exp(x) another formula, instance 1/x.Make list pattern-book functions. function list, say whether function crosses zero, touches zero doesn’t cross, doesn’t touch part domain shown graphic: \\(-3 \\leq x \\leq 3\\). Also note value function appears reaching horizontal asymptote zero negative \\(x\\), positive \\(x\\), , neither.’ll show answers exponential function. ’ll modify computer command graph pattern-book functions.","code":"\nslice_plot(exp(x) ~ x, domain(x=c(-3, 3)))"},{"path":"fun-describing.html","id":"continuity","chapter":"4 Describing functions","heading":"4.3.2 Continuity","text":"function continuous can trace graph function without lifting pencil page. function continuous interval (,b) can trace function whole interval. pattern-book functions continuous interval domain except logarithm power-law functions negative exponents. (includes reciprocal since power-law negative exponent: \\(1/x = x^{-1}\\).) exceptions defined \\(x=0\\).illustrate, consider power-law function graphed Figure 4.1. interval (,b) include 0, function continuous. inputs \\(x < 0\\), function negative. inputs \\(0 < x\\), function positive. , interval includes \\(x=0\\) function jumps discontinuously negative positive. 433","code":""},{"path":"fun-describing.html","id":"monotonicity","chapter":"4 Describing functions","heading":"4.3.3 Monotonicity","text":"function monotonic domain sign slope never changes domain. Monotonic functions either steadily increase value , alternatively, steadily decrease value.Another way thinking monotonicity consider order inputs outputs compared number line. function monotonically increasing preserve order inputs along number line maps inputs outputs, whereas monotonically decreasing function reverse order. instance, input \\(x\\) comes input \\(y\\) (.e., \\(x<y\\)), \\(f(x)<f(y)\\) monotonically increasing functions (order preserved), \\(f(y)<f(x)\\) monotonically decreasing functions (order outputs reversed).pattern-book functions Figure 4.1: exponential power-law function monotonic: exponential grows monotonically power-law \\(x^{-1}\\) decreases monotonically. sinusoid monotonic domain longer half cycle: function switchs positive slope negative slope different parts cycle. 434","code":""},{"path":"fun-describing.html","id":"periodicity","chapter":"4 Describing functions","heading":"4.3.4 Periodicity","text":"phenomenon periodic repeats pattern . pattern repeated called cycle; periodic function whole one cycle placed next previous one forth. day-night cycle example periodic phenomenon, march seasons. period duration one complete cycle; period day-night cycle 24 hours, period seasonal progression 1 year.Real-world periodic phenomena often show slight variation one cycle next.\npattern-book functions, sinusoid periodic. exactly periodic, repeating exactly cycle . period—, length input interval contains exactly one cycle—value \\(2\\pi\\) pattern-book sinusoid. used model periodic phenomenon, model function needs tailored match period phenomena.idea representing sinusoids phenomena almost exactly periodic, instance communications signal vibration, fundamental many areas physics engineering. 435","code":""},{"path":"fun-describing.html","id":"asymptotic-behavior","chapter":"4 Describing functions","heading":"4.3.5 Asymptotic behavior","text":"Asymptotic refers two possible situations depending whether input output considered:input function gets bigger bigger size, going \\(\\infty\\) \\(-\\infty\\). , input changes way output gets closer closer specific value, function said horizontal asymptote value.example Figure 4.1 exponential function. \\(x \\rightarrow -\\infty\\), , \\(x\\) goes left domain, output tends asymptotically zero.output function gets bigger bigger size, going \\(\\infty\\) \\(-\\infty\\) without input likewise. visual appearance graph like sky-rocket: output changes tremendously fast even though input changes little. vertical line skyrocket approaches called vertical asymptote. power-law function \\(x^{-1}\\) vertical asymptote \\(x=0\\). consider inputs closer closer \\(x=0\\), outputs grow larger larger magnitude, tending toward \\(\\infty\\) \\(-\\infty\\).Several pattern-book functions horizontal vertical asymptotes . instance, function \\(x^{-1}\\) horizontal asymptote zero \\(x \\rightarrow \\infty\\) \\(x \\rightarrow -\\infty\\). 436The sinusoid neither vertical horizontal asymptote. input \\(x\\) increases either \\(-\\infty\\) \\(\\infty\\), output sinusoid continues oscillate, never settling single value. , course, output sinusoid everywhere \\(-1 \\leq \\sin(x) \\leq 1\\), possibility vertical asymptote.","code":""},{"path":"fun-describing.html","id":"locally-extreme-points","chapter":"4 Describing functions","heading":"4.3.6 Locally extreme points","text":"Many continous functions region input domain output gradually growing, reaches peak, gradually diminishes. called local maximum. “Maximum” output reaches peak particular input, “local” neighborhood peak function output smaller peak.Likewise, functions can local minimum: bottom bowl rather top peak.three pattern-book functions Figure 4.1, sinusoid local maximum, , periodic, repeats every cycle. sinusoid similarly local minimum every cycle..Many modeling applications involve finding input function output maximized. input called argmax. “Argument” synonym “input” mathematical computer functions, “argmax” refers input function reaches maximum output. instance, businesses attempt set prices maximize profit. low price, sales good income low. high price, sales low bring much income. ’s sweet spot middle. 437Other modeling applications involve finding argmin, input output minimized. instance, aircraft speed fuel consumption minimum distance travelled. things equal, ’s best operate speed.process finding argmin argmax called optimization. since maxima minima much mathematically, collectively called extrema.function extremum possibly monotonic, since growth positive one side extremum negative side.","code":""},{"path":"fun-describing.html","id":"computer-function-names","chapter":"4 Describing functions","heading":"4.4 Computer function names","text":"might expect, computer programmers language developers written software implementing several pattern-book functions: exp(), log(), sin(), dnorm(), pnorm(). functions, name tells everying, far computer concerned, needed calculate output given input. 440Computer notation power-law proportional functions different body functions short. instead using parentheses apply named function, invoking power-law proportional functions done using syntax like x^p x z^4.5When function like \\(\\sqrt[3]{x}\\) written \\(x^{1/3}\\) make sure include exponent grouping parentheses: x^(1/3). Similarly,\nlater course encounter power-law functions exponent written formula. Particularly common power-law functions written \\(x^{n-1}\\) \\(x^{n+1}\\). translating computer notation, make sure put formula within grouping parentheses, instance x^(n-1) x^(n+1).","code":""},{"path":"fun-describing.html","id":"mathematical-notation","chapter":"4 Describing functions","heading":"4.5 Mathematical notation","text":"grown traditional mathematical notation likely familiar notation several pattern-book functions: \\(\\ln x\\), \\(\\sin x\\), \\(e^x\\), \\(x^p\\) (\\(x^2\\) \\(p=2\\) \\(\\sqrt{x}\\) \\(p=1/2\\)). 450Traditional notation mixes several things computer notation sensibly keeps separate. computer programmer’s point view, traditional notation idiosyncratic rather systematic.interested things, three concepts computing may help appreciate differences:Functional notation computing, notation function name followed parentheses6 inputs inside parentheses called “functional notation.” instance, exp(x) functional notation, since input x parentheses. Traditional mathematical notation sometimes leaves parentheses, \\(\\sin \\frac{\\pi}{2}\\) \\(\\ln 10\\). course always include parentheses, abolutely required computer notation, traditional notation well, .e. \\(\\sin\\left(\\frac{\\pi}{2}\\right)\\).Functional notation computing, notation function name followed parentheses6 inputs inside parentheses called “functional notation.” instance, exp(x) functional notation, since input x parentheses. Traditional mathematical notation sometimes leaves parentheses, \\(\\sin \\frac{\\pi}{2}\\) \\(\\ln 10\\). course always include parentheses, abolutely required computer notation, traditional notation well, .e. \\(\\sin\\left(\\frac{\\pi}{2}\\right)\\).Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes inbetween arguments. ’ve seen “infix” notation parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). R, power-law functions often written infix notation, e.g. 3^2 x^3. see traditional notation like \\(e^x\\), tempted first write e^x. R, exponential function written functional notation: exp(x).Infix notation functions two inputs, computing languages often support different arrangement function name inputs name comes inbetween arguments. ’ve seen “infix” notation parts traditional arithmetic notation, instance, \\(3 + 5\\) \\(8/2\\). R, power-law functions often written infix notation, e.g. 3^2 x^3. see traditional notation like \\(e^x\\), tempted first write e^x. R, exponential function written functional notation: exp(x).Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Markup notation undoubtedly familar word processing , particularly, style word processing called --see----get (WYSIWYG). WYSIWYG, can enter plain text just using keyboard, want make something boldface italics, use mouse select text involved select style menu. Typically, WYSIWYG mathematical content involves similar mouse-based process. contrast, mainstream computer languages, mouse needed . computer commands constructed plain, linear sequences letters characters.Traditional mathematical notation includes features superscripts special symbols easily written pencil hand. Often notation beautiful aesthetically cherished mathematicians. computer commands computer languages straight sequences characters using function infix notation.7","code":""},{"path":"fun-notation.html","id":"fun-notation","chapter":"5 Notation for functions","heading":"5 Notation for functions","text":"Part difficulty mathematics many people making sense nomenclature notation. taught high school highly idiomatic system can mastered extensive experience. Mathematicians undoubtedly skilled logic, mathematics ancient history littered language synonyms, near synonyms, inconsistencies, diacritical marks, letters unfamiliar alphabets. 500To illustrate cultural admiration abstraction mathematics, consider famous poem, Jabberwocky, University Oxford mathematician, Charles Lutwidge Dodgson (1832-1898):’Twas brillig, slithy toves\n       gyre gimble wabe:\nmimsy borogoves,\n       mome raths outgrabe.words commonly encountered traditional mathematics notation.equation, formula, function, variable, unknown, rootAnd mathematical sentences.\\(y = x\\)\\(y = \\sqrt{x}\\)\\(y^2 = x\\)\\(x^2 = x\\)\\(x = \\sqrt{x}\\)five sentences equations. ’s easy, equal sign two sides. formulas? functions? ’re used calling \\(x\\) \\(y\\) variables. become unknowns? Sentence (iv) might interpreted describing roots. sentence (v) says thing (iv) related roots.510","code":""},{"path":"fun-notation.html","id":"a-notation-for-computing","chapter":"5 Notation for functions","heading":"5.1 A notation for computing","text":"traditional notation practically useless computing. programmer deep understanding notation intended mean given circumstance can construct computer expression carry meaning computer’s work.illustrate, similar-looking sentences. math notation, can mean something. R, one valid others invalid. Read one try guess one valid others . 520Once ’ve made choice, open SANDBOX see got right.Try one line time, erase trying another line. code invalid, pressing “Run code” lead error message sandbox. valid line lead error message.student knows make sense math notation find much help writing computer notation. ’s like well educated foreigner trying make sense sentences meaningful others .“Chair meeting,” “seat meeting.”\n“Seat guest,” “chair guest.”\n“Bush ,” “tree .”\n“Tree cat,” “bush cat.”\n“Table motion,” “desk motion.”\n“Bench player,” “couch player.”\n“Couch meaning” “bench meaning.”book, ’re going use mathematical notation corresponds usable computer notation. first step stop using \\(=\\) mean many different things. 530","code":"\ny = x\ny = sqrt(x)\ny^2 = 3\ny = sqrt(3)\ny - x = 0\n0 = (x+3)(x-2)"},{"path":"fun-notation.html","id":"words-for-using-functions","chapter":"5 Notation for functions","heading":"5.2 Words for using functions","text":"Throughout course, use words inputs output refer handed function received back result. “handed ” metaphor clear naming mean use function. section simply gives vocabulary describe various aspects using functions. concept functions fundamental mathematics computing, many synonyms aspect. helps aware synonyms since different people write functions different—equivalent!—ways. 540In everyday speech, “argument” discussion people differing views. computing, argument means something else entirely: synonym “input function.” ’s good concrete image mind, ’ll suggest thinking computer printer analogy function. computer printer takes several different kinds input: electricity, paper, ink toner, instructions transmitted via cable wireless connection. inputs arrives printer particular interface: electrical supply cord, tray holding paper, tank cartridge ink, radio receiver. interfaces different inputs—, use word, arguments—printer.Common sense tells shouldn’t put toner paper tray, connect electrical supply cord ink tank. provide right kind stuff input interface order get anticipated output printer.pattern-book functions single input. functions ’s appropriate speak “input ” “argument ” function. general, functions construct modeling purposes multiple inputs arguments. instance, function \\(g(x, y) \\equiv e^x \\sin(y)\\) “x-input” “y-input.” can just well say “x-argument g()” “y-argument g(),” even “first argument g()” “second argument g().” Whether use preposition “” “” matter personal style; either .act employing function produce output corresponds given set inputs much like “printing file.” course, word “printing” right choice mathematical computational functions. Instead, several equivalent phrases common use:\"Apply function arguments.“Invoke function.”“Evaluate function.”“Run function.”(ii) (iv), implicit “arguments.” application/evaluation/running function necessarily involves giving specific values inputs.difference “function” “applying function” much difference printer “printing document,” screwdriver “driving (extracting) screw, , wizard-world fans, difference ”spell\" act “casting spell.”R/mosaic, application modeling function like g() (defined earlier paragraph) two arguments looks like g(5, pi) two arguments separated comma. might also look like g(z, pi), even g(x=z, y=pi) g(y=pi, x=z) use argument names save us trouble remembering argument came first definition. 550When applying function one argument, refrain using argument name. ’s unnecessary since can hardly get order arguments wrong , depending wrote software function, might used x name argument.’s another matter defining function. instance, \\[g(x, y) \\equiv e^x \\sin(y)\\] mean “apply \\(g()\\) arguments \\(x\\) \\(y\\).” Instead, means, “’m setting \\(g()\\) function, kind promise future whenever write \\(g(3, \\pi)\\) something similar, defined function applied arguments. now, don’t need arithmetic calculation, just remember ’ve made promise named \\(g()\\).”R/mosaic, using tilde-expression signals asking kind promise something time comes.time course, functions define described eitherA formula, 3*x + 2 \\(x^2 \\sin(y)\\)Another kind computation sort typically covered high-school math: iterative process, branching process, neural network, . processes usually expressed using computer programming language unfamiliar many students.","code":""},{"path":"fun-notation.html","id":"algorithms","chapter":"5 Notation for functions","heading":"5.3 Formulas and algorithms","text":"idea “algorithm” generalizes formulas. starter definition :algorithm set instructions performing computation.High-school math typically involves presenting algorithm formula. learned, maybe middle school, follow arithmetic steps involved algorithms described formulas. also likely used calculator perform arithmetic evaluate functions \\(\\sin()\\) \\(\\ln()\\) \\(\\sqrt{\\strut}\\) don’t know evaluate using simple arithmetic. calculator implementing algorithm programmed enable calculation \\(\\sin()\\) \\(\\ln()\\) .slightly detailed definition “algorithm” highlights algorithms written terms , simpler algorithms.algorithm set instructions performing computation written terms algorithms already know perform.purposes, “algorithms already know perform” taken arithmetic—addition, subtraction, multiplication, division—well evaluation pattern-book functions. Admittedly, people compute logarithms fluently can add numbers, already R implementations basic modeling functions: exp(), log(), sin(), power-law, dnorm(), pnorm().\nvast majority functions see book (mathematical modeling general) can constructed basic arithmetic application pattern-book functions. 560","code":""},{"path":"fun-notation.html","id":"algorithms-without-formulas","chapter":"5 Notation for functions","heading":"5.4 Algorithms without formulas","text":"Many functions described algorithms use concepts common computer programming unknown traditional mathematical notation. names like iteration branching many refer stored lists fixed numbers (like office workers street, building, floor, corridor, door image function). ’ll deal things later, now …going use word algorithm name kind expression right \\(\\equiv\\) function definition. formula specific kind algorithm generally written traditional math notation.Algorithms, including ones formulas, written terms set symbols stand inputs. instance, \\(mx + b\\), \\(x\\), \\(m\\), \\(b\\) names give quantities used calculation.notation using function definition lists names two places, others one place. , look \\[g(x) \\equiv m x + b\\]\n\\(x\\) appears algorithm list input name \\((x)\\) left \\(\\equiv\\).\\(m\\) \\(b\\) different; appear algorithm. word quantities mathematics parameter. Eventually, algorithm followed, ’re going put specific numerical values place parameter. 570Where parameter values come ? subject mathematical notation silent. figure context experience. potentially confusing, especially human around sort things .","code":""},{"path":"fun-notation.html","id":"computer-notation","chapter":"5 Notation for functions","heading":"5.5 Computer notation","text":"notation used computer programming lets us explicit symbols refer function inputs parameters function.\nDepending computer language things can handled one way another. (experienced computer programmers: issue scope can complex right.) 580In software used CalcZ (R/mosaic, R language augmented mosaic package extensions), take simple--use approach. works like :modeling functions construct R/mosaic list parameters formally arguments function.wrote traditional notation \\[g(x, m, b) \\equiv m x + b\\]also way give default numerical values parameters can write \\(g(3.5)\\) computer know find parameter values. writing formulas using math notation, ’ll extend traditional notation write, instance, \\(g(x, m=2, b=3) \\equiv m x + b\\).R/mosaic, construct mathematical function like \\(g()\\) using makeFun() function:also writebut notation means give specific numerical values m b inputs whenever evaluate g(). won’t default values “parameters--inputs” m b. 590[F-31-R] Identify create R versions mathematical functions using makeFun() tilde expressions.[F-33] Master conventions used CalcZ giving names functions referring functions “pronouns.”","code":"\ng <- makeFun(m*x + b ~ x, m=2, b=3)\ng <- makeFun(m*x + b ~ x)"},{"path":"fun-notation.html","id":"calcz-naming-conventions","chapter":"5 Notation for functions","heading":"5.6 CalcZ naming conventions","text":"’re going using creating lot functions CalcZ. functions already proper names, usually written using short sequences letters: instance pattern-book functions \\(\\sin()\\), \\(\\ln()\\), \\(\\exp()\\). 600Other functions needed just sentence paragraph section, perhaps used example lay steps algorithm. natural languages English, often use pronouns purposes: , , , , , , …. also use pronouns identifying functions. policy :pronoun function usually named \\(f()\\) \\(g()\\) \\(h()\\) corresponding upper-case letters \\(F()\\), \\(G()\\), \\(H()\\). particular choice letter f, g, h significance whatsoever. just way give unambiguous handle function going using little .occasion, use subscripts superscripts pronoun letters, instance \\(f_1()\\) \\(g^\\star()\\). way give us many possible pronouns need . Perhaps analogous words like “sister,” “parent,” “husband,” “cousin,” etc. allow us refer, without proper name, specific person.occasions, function relates specific quantity position velocity, use names \\(x()\\), \\(y()\\), \\(z()\\), \\(u()\\), \\(v()\\), \\(w()\\), . letters , course, ones frequently use name inputs functions. know whether letter meant refer input rather function? parentheses provide clue: \\(x()\\) function name, \\(x\\) input name. 610It can become tedious give name every function, even ’s used . Consider sentence example:“functions \\(g(x) \\equiv \\sqrt{\\strut x}\\) \\(h(x) \\equiv x^3\\) examples power-law functions.”Long awkward. ’ll feel free write instead,“\\(\\sqrt{\\strut x}\\) \\(x^3\\) examples power-law functions.”Without formality provided “\\(g(x) \\equiv\\)” can hard know whether \\(\\sqrt{\\strut x}\\) means “square-root function” \"take square root specific number \\(x\\). convention use based name used expression. standard argument names end alphabet used without subscript (e.g. \\(x_0\\)) special symbol subscript (e.g. \\(t^\\star\\)), intend expression function. However, want apply function specific values inputs write following styles:\\[f(x^\\star) \\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x^\\star}\\ \\ \\mbox{}\\ \\ \\sqrt{\\strut x=3}\\ \\ \\mbox{}\\ \\ \\left.\\sqrt{\\strut x}\\right|_{x=3}\\ \\ \\mbox{}\\ \\ \\left.g(x)\\strut \\right|_{x=3}\\]One important techniques calculus take something often think number turn function whose output number. take time get used calculus notation able tell glance whether something function number. 620Here’s illustration make sense already studied calculus:\\[\\int_0^3\\!\\! f(t) dt\\ \\ \\text{number, }\\int_0^x\\!\\! f(t) dt \\ \\ \\text{function.}\\ \\ \\]high-school math notation, can hard tell expression intended function number. Careful attention CalcZ conventions make much easier figure whether expression resolves function number. first read mathematical expression, good first question ask , “kind thing ? function? number?”essential can apply conventions reflexively. able say kind thing symbol stands key understanding mathematical expression means.Use CalcZ naming conventions answer questions.Question \\(h()\\)?name function Correct. Right. Typically use \\(f()\\), \\(g()\\), \\(h()\\) something similarly generic stand function ’re going working little . Think pronouns. Just can say, meaningfully, “gave ,” can say \\(h(x) \\equiv f(x) + g(2*x)\\) name input. ︎✘ Sorry, usually letters like \\(x\\), \\(y\\), \\(t\\). specific numerical value ︎✘ Sorry, ’ll use constructions subscript like \\(x_0\\) \\(y_\\star\\) like . Question B come write \\(f()\\) name function rather just \\(f\\) \\(f(x)\\)?good reason ︎✘ certainly intend empty parentheses remind reader name refers function. spot place violate intention, point us. ’s reminder ’re talking function name “\\(f\\).” Right! parentheses part name. ︎✘ . Names R never contain parentheses. f, fbar, fred valid names R command, f() . use parentheses writing human audience reminder name referring function. computer doesn’t need reminders Question C sort thing denoted \\(x_0\\) \\(y_\\star\\) \\(y_{max}\\)?particular numerical value Excellent! Right. instance, might particular value input function produces output zero. might particular location domain function. name input ︎✘ Sorry. won’t typically use subscripts referring input name. Question D symbols might stand entire domain function?    \\(y\\) Good. Right. Another term use symbol standing domain “name input.”        \\(f()\\) ︎✘ , write name function called “\\(f\\)”        \\(y_0\\) ︎✘ . \\(y_0\\) might used stand single point domain. Question E Suppose come across \\(v(w) \\equiv w + 3\\) book. \\(v\\) \\(w\\) stand ?\\(v()\\) name function \\(w\\) name input function. Right! Right. Whenever write something like “name(another_name) \\(\\equiv\\),” ’re saying explicitly “name” refers function “another_name” refers input. ’s meaningless. ︎✘ ’ll try write meaningless mathematical expressions. mistake, let us know. ’s thing \\(v = w + 3\\). ︎✘ \\(v = w+3\\) equation. \\(v(w) \\equiv w+3\\) format defining function named \\(v()\\). Question F \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) function?Yes, although function given two different names. Excellent! thing ’s significant name input used consistently function algorithm. course ! ︎✘ Sorry. suppose might ask, “mean function?” Remember function relationship inputs output. \\(g(x) \\equiv x^2\\) \\(h(w) \\equiv w^2\\) describe exactly relationship: output square input. Question G R/mosaic notation \\(\\equiv\\)?    <- makeFun() Good.        makeFun() ︎✘ Almost right. makeFun() creates function doesn’t give name.        <- ︎✘ Sorry. R, symbol means “give name ” whatever right side <-. name given left side <-. ","code":""},{"path":"fun-notation.html","id":"functions-in-r","chapter":"5 Notation for functions","heading":"5.7 Functions in R","text":"name R language can refer sort object. use CalcZ naming conventions use R, ability develop read math notation help reading R vice versa. 630R/mosaic provides additional clues distinguish numbers functions.Almost time create function using makeFun(). see R expression starting name <- makeFun(tilde expression) know sure name refers function.get deeper calculus, meet additional R operators generate functions. ’ll introduce good time, someone reviewing course, include D(), antiD(), compose() iterate().readers may encountered R previously statistics data science course. readers wondering purpose makeFun(). Experienced programmers know way make functions R using function keyword. instance:’s completely correct legitimate way define function R settings universal practice.developed makeFun() handle situation computers, insistence avoiding ambiguity, something person familiar math notation likely suspect. problem comes something simple asIn traditional math notation, \\(g(x) \\equiv m x + b\\), usually silent parameters like \\(m\\) \\(b\\) coming . , honest, don’t worry try evaluate function. 630If evaluate, say, command \\(g(3)\\), R system knows find right values \\(m\\) \\(b\\). objects appropriate places R system, error message generated. rules computer languages follow tracking symbols aren’t argument list called scoping rules. Scoping advanced programming concept different languages use different rules.whose programming background includes understanding scoping ’s explanation. ordinary scoping rules R make undefined parameters like \\(m\\) \\(b\\) function definition bindings environment function defined. typically global environment, unsatisfactory arrangement difficult customize individual function invocation function use specific value parameters. makeFun() arranged add parameters function algorithm argument list. makeFun() command creates function 3 arguments.point ~ x part tilde expression simply name arguments come first. evaluate function, ’ll provide values m b. operations function—differentiation anti-differentiation, particular—can done without specify parameter values. know differentiation anti-differentiation , example:Sometimes particular numerical values mind parameters. instance, modeling trajectory ball, undoubtedly need make use gravitational acceleration Earth’s surface, \\(9.8 \\text{m}/\\text{s}^2\\). might prefer include specific number 9.8 function definitions can use functions model ball’s trajectory Mars. since balls thrown Earth, maybe ’s worthwhile insist value 9.8 specified every time function used. can ways using g parameter name instruct R set g 9.8 unless otherwise specified. function look like : 640","code":"\nf <- function(x) { 3 + 2*x }\ng <- function(x) { m*x + b }\nmakeFun(m*x + b ~ x)## function (x, m, b) \n## m * x + b\nD(m*x + b ~ x)## function (x, m, b) \n## m\nantiD(m*x + b ~ x)## function (x, C = 0, m, b) \n## m * 1/2 * x^2 + b * x + C\nball_velocity <- makeFun(g*t + t0 ~ t, g = 9.8, t0 = 0)\n# For Earth: falling 3 seconds from a standstill\nball_velocity(3)## [1] 29.4\n# For Earth when the ball has an initial upward velocity of 10 m/s\nball_velocity(3, t0 = -10)## [1] 19.4\n# For Mars ...\nball_velocity(3, t0 = -10, g = 3.711)## [1] 1.133"},{"path":"fun-notation.html","id":"foursigns","chapter":"5 Notation for functions","heading":"5.8 \\(=\\), \\(\\equiv\\), \\(\\rightarrow\\), <-","text":"\\(=\\) sign carries lot weight high-school notation. much weight. used several meanings distinguished one another. Combining one symbol leads confusion error.Meaning 1: “defined …”use \\(\\equiv\\) mathematical notation <- R. notation R bit simpler mathematical notation: way giving something name.“something” function, see left side <-, instance use makeFun() operator h <- makeFun(x^2 ~ x). left side simply name.math notation, equivalent written \\(h(x) \\equiv x^2\\). left side isn’t exactly name. ’s name followed parentheses names used algorithm.Keep mind writing functions, generally provide hint name refers function, writing \\(h()\\) h(). parentheses aren’t part name; name \\(h\\). parentheses remind us \\(h\\) function. 650Meaning 2: “Happens …”acceleration due gravity often given name \\(g\\). Earth’s surface, happens \\(9.8 \\text{m}/\\text{s}^2\\). math notation, use equal sign narrow meaning, \\(g=9.8\\text{m}/\\text{s}^2\\). R use =.Meaning 3: “Gets closer closer …”Calculus relationships: connection two () things. hear phrases like, “\\(x\\) increases, \\(f(x)\\) decreases.” , everyday experience, “gets humid, weather becomes uncomfortable.” , “slower safer,” “spicier better” “heavier blanket, warmer ’ll .” (One important uses derivatives calculus represent statements quantitatively. ’s subject next Block.)calculus, sometimes distinguish “\\(x\\) zero” “\\(x\\) gets closer closer zero.” ’ll need want say, “gets smaller smaller, doesn’t disappear entirely.” symbol “gets closer closer ” \\(\\rightarrow\\), \\(x \\rightarrow 0\\)reading math, take care notice \\(=\\), \\(\\rightarrow\\), \\(\\equiv\\) used. sign something important say intended help make sense read.According notation style use CalcZ, things function? number?Question kind thing \\(\\sqrt{z}\\)?    function Good.        number ︎✘ \\(z\\) one standard names use input function. given function name, instance \\(g(z) \\equiv \\sqrt{z}\\), able tell \\((z)\\) \\(g()\\) function. whenever use standard input name, expression function. Question B kind thing \\(\\sqrt{y^\\star}\\)?    function ︎✘ According convention, name \\(y^\\star\\) refers particular value opposed name function input.        number Correct. Question C kind thing \\(e^{k t}\\)?    function Right-oh!        number ︎✘ letter \\(t\\) one standard letters input names. \\(k\\) letter, since end alphabet, hint intended parameter, symbol representing specific numerical quantity. Question D kind thing \\(g(k) \\equiv e^k\\)?following traditional-style notation intended define function 2 times pattern-book sinusoid. something wrong.\\[g(t) \\equiv 2 \\sin(x)\\]Question ’s wrong definition?\\(g()\\) isn’t appropriate name ︎✘ can name functions like. formula written \\(2 \\times \\sin(x)\\) ︎✘ welcome write things way want emphasize multiplication, don’t . hand, R absolutely required write multiplication operator: 2 * sin(x). \\(t\\) good choice input name. ︎✘ ’s fine choice, especially input time. input name formula doesn’t match input name left side \\(\\equiv\\). Right! ’s . choose input name (, \\(t\\)), make sure write formula terms name. \nConsider expression math notation:\\[\\frac{e^{k t}}{k}\\]Question following R expressions implements math-notation expression?k exp(kt) ︎✘ must always express multiplication explicitly, using * quantities multiplied. e^k*t / k ︎✘ Use exp(x) \\(e^x\\). exp(k t) / k ︎✘ k t written k*t exp(k*t) / k Right! 1/k e^kt ︎✘ 1) Use * multiplication. 2) Use exp(x) \\(e^x\\). ","code":"\nname <- something"},{"path":"graphs-and-graphics.html","id":"graphs-and-graphics","chapter":"6 Graphics & function graphs","heading":"6 Graphics & function graphs","text":"[F-20] Understand mathematical graph consists points composite space: input \\(\\times\\) output.Scientific statistical graphics visual depictions information data. displaying function single input, mathematicians favor particular style graphics. favored style called function graph, specific technical meaning mathematics. Notice ’re writing “function graph” rather “function graphic.” function graph particular sort graphic: many types graphics ’ll use display data features functions. 700","code":""},{"path":"graphs-and-graphics.html","id":"the-graphics-frame","chapter":"6 Graphics & function graphs","heading":"6.1 The graphics frame","text":"Technical graphs usually drawn graphics frame\nseveral components:frame region piece paper computer screen marked horizontal vertical axis.horizontal axis stands one quantity.vertical axis stands another quantity.horizontal vertical axes drawn scale enables translate numerical value position.\nFigure 6.1: empty graphics frame scales horizontal vertical axes.\n","code":""},{"path":"graphs-and-graphics.html","id":"data-graphics-the-point-plot","chapter":"6 Graphics & function graphs","heading":"6.2 Data graphics: the point plot","text":"One common uses graphics frame display visually two columns table containing data. Data stored spreadsheet-like format called data frame. many ways access data frames many different ways store . CalcZ supply data frames simplest possible way: giving name can use refer data frame.instance, small part data frame size penguins Palmer Archipelago Antarctica. 710The output shows data frame looks like. Now need look use data frame R command. particular data frame shown just name penguins R. refer data frame, just use name.Open SANDBOX give name command. simple command causes data frame displayed screen.see result table can scrolled interactively 344 rows penguins data frame.Looking data frame, part one, sometimes ’s required. general use name data frame interest argument R function. Typically argument named data = ’ll see .name penguins general wouldn’t surprising penguin fan researcher created different set data name. R, like many modern languages, makes room multiple uses name facility called namespace. R programmers can create namespace. something course. ’s helpful know namespace mechanism work. instance, particular penguins ’ve provided course comes namespace called palmerpenguins. Thus, “full” name data fr palmerpenguins::penguins. may see name constructions occasionally exercises course. don’t understand namespaces work know given full name, use , double colons .can use gf_point() plot pair columns data frame, know names columns. useful function names(). Similarly, look first rows, use head() function. Try commands sandbox:point plot displays two columns data frame. row data frame represented one point graphic. instance:\nFigure 6.2: Data 344 penguins flipper length (mm) body mass (g).\npenguin specific mass flipper length. focus attention penguins mass around 4 kg (, 4000 gm), can see different penguins variety flipper lengths. ’s typical natural variability.","code":"\npenguins\nnames(penguins)\nhead(penguins)\ngf_point(flipper_length_mm ~ body_mass_g, \n         data=penguins) "},{"path":"graphs-and-graphics.html","id":"function-graphs","chapter":"6 Graphics & function graphs","heading":"6.3 Function graphs","text":"Back Section ?? saw use R create graph function single input. (Review section now ’ve forgotten.) slice_plot() function takes two arguments:tilde expression giving function want plot naming horizontal axis.domain use making plot.example:tilde expression can elaborate course, instance sin(z)*z + z^2 ~ z, always name used horizontal axis right-hand side tilde character.domain shown graph specified using special-purpose function, called domain(). argument domain named: Use name right-hand side tilde expression equal sign, collected pair numbers specifying lower upper ends domain. collected pair must always given arguments basic function named c(), simply collects ’s arguments. Later, graph functions two inputs, ’ll see domain() set way.","code":"\nslice_plot(sin(z) ~ z, domain(z=c(-10, 10)))"},{"path":"graphs-and-graphics.html","id":"graphics-layers","chapter":"6 Graphics & function graphs","heading":"6.4 Graphics layers","text":"often want compare functions, compare function data. can using ordinary graphics functions, e.g. slice_plot() gf_point(), arranging things types graphics drawn together graphics frame. create kind compound graphic, arrange individual graphics commands pipeline, list commands connected together %>%. pipeline might include two commands twenty, depending complicated graphic want draw. long use %>% command, next command taken build upon previous command. last command pipeline followed %>%.” 720Here just--demonstration plot composed three graphs, displaying one pattern-book functions. start pipeline, domain() must given explicitly argument slice_plot(). ’re welcome specify domains commands along pipeline, don’t original domain() passed pipeline.\nJust show things done, functions drawn different colors, different widths (e.g., size=2) different levels transparency (e.g. alpha=0.2). can use styling arguments slice-plot.","code":"\nslice_plot(dnorm(x) ~ x, domain(x=c(-4,4))) %>%\n  slice_plot(pnorm(x) ~ x, color=\"red\", size=2) %>%\n  slice_plot(sin(x) ~ x, color=\"green\", size=4, alpha = 0.2)"},{"path":"graphs-and-graphics.html","id":"data-and-functions","chapter":"6 Graphics & function graphs","heading":"6.5 Data and functions","text":"Figure 6.2, data point plot penguin flipper length vs body mass, generally multiple penguins body mass different flipper lengths. overall impression cloud points.construct function model pattern observed cloud, need respect mathematical definition function, part function one output given input.\nFigure 6.3: Connecting penguin data points lines (left) doesn’t directly describe sensible mathematical function. use modeling create smooth function (right) stays close, close, data points.\ncreate model flipper length function body mass, used one set techniques called machine learning. , didn’t specify form exponential gaussian sigmoid particular shape. simply asked computer figure smooth function stays close data. result, happens, sigmoid. 730","code":""},{"path":"graphs-and-graphics.html","id":"inputs-to-output-1","chapter":"6 Graphics & function graphs","heading":"6.6 Inputs to output","text":"can easily evaluate function given input graph. know, just put finger horizontal coordinate input. move finger upward reach point curve directly horizontal coordinate. read value function input reference scale vertical axis. 740It’s possible show graph whole function whose domain \\(-\\infty\\) \\(\\infty\\). Consequently, drawing graph choose show part domain expect relevant needs.Sometimes, graphic’s domain includes parts domain function drawn. cases, function’s graph extend invalid part graphic domain, plot function whose domain positive numbers.function range runs \\(-\\infty\\) \\(\\infty\\), limits paper display mean can show part range. experience, ’ll learn read hints graph underlying function might range larger one shown graphic.","code":""},{"path":"graphs-and-graphics.html","id":"outputs-to-inputs","chapter":"6 Graphics & function graphs","heading":"6.7 Outputs to inputs","text":"Graphs relatively modern, coming mainstream use 1700s. Much mathematics developed graphs invented. One consequence function tasks easy using graph might hard previous ways implementing functions. analogous way arithmetic pretty easy Arabic numerals, really hard Roman numerals. 750A function graph makes easy evaluate function inverse. basic modeling functions way calculate numerically output given input (function’s domain).Often, working function goes another way: know output want find corresponding input. ’s easy graph. Pick position vertical axis represents given input. trace horizontally ink . , trace vertically read value input produce given output.Mathematicians careful distinguish functions one one possible input generates given output, functions can one input generates output. (Mathematicians use word unique mean “one one.”) Functions one--one relationship output input called “invertible.”Invertible , common procedure working functions find input corresponding specific, given output. high-school algebra, called “solving \\(x\\).” special case solving finding roots polynomial. name give procedure zero finding, correctly points trying find input.","code":""},{"path":"graphs-and-graphics.html","id":"graphs-of-functions-with-two-inputs","chapter":"6 Graphics & function graphs","heading":"6.8 Graphs of functions with two inputs","text":"can draw graphs functions two inputs. Now points need marked 3-dimensional space: one axis two inputs another axis output. Like : 760\nFigure 6.4: graph function two inputs surface.\nhard read graph function two inputs. Think graph kind tent suspended domain ground. graph surface. show graph display, tricks trade used: color give additional scale output; computer graphics let us rotate surface look various perspectives, added grid lines marks surface help us read numerical value.","code":""},{"path":"graphs-and-graphics.html","id":"contour-plots","chapter":"6 Graphics & function graphs","heading":"6.9 Contour plots","text":"mathematical graph just one way draw picture function two inputs. ways. One helpful mode picture called contour plot, familiar many non-mathematicians form topgraphical maps showing landscape elevation function latitude longitude. ’s contour plot function shown previous graph: 770\nFigure 6.5: contour plot displays surface manner topographical map shows terrain. contour plot topographical map mathematical graph Figure 6.4.\nmay take practice learn read contour plots fluently skill ’s worthwhile . Note graphics frame Cartesian space two inputs. output presented contour lines. contour line label giving numerical value function output. input value pairs given contour line corresponds output level labeling contour line. find output input pair contour line, interpolate contours either side point.example, input pair (0, 0)—bottom frame, midway left right—falls contours labeled “20” “22.” means output corresponding input (0, 0) somewhere 20 22. point much closer contour labeled “20,” ’s reasonable see output value 20.5. , course, approximation, ’s nature reading numbers graphs.Often, specific numerical value point primary interest. Instead, may interested steep function point, indicated spacing contours. contours closely spaced, hillside steep. contours far apart, hillside steep, perhaps even flat.Another common task interpreting contour plots locate input pair ’s local high point low point: top hill bottom hollow. points called local argmax local argmin respectively. output function local argmax called local maximum; similarly local argmin, output called local minimum. (word “argmax” contraction “argument maximum.” tend use word “input” instead “argument,” means exactly thing say “inputs function” says “arguments function.”)additional tasks learn perform glance reading contour plot:Start given input pair determine two directions:\ndirection move steeply uphill,\ndirection move keep function output .\nStart given input pair determine two directions:direction move steeply uphill,direction move keep function output .Translate small region contour plot word corresponding geographical feature topology: hills, valleys, crests, coves, hollows, .Translate small region contour plot word corresponding geographical feature topology: hills, valleys, crests, coves, hollows, .","code":""},{"path":"graphs-and-graphics.html","id":"slice-plots","chapter":"6 Graphics & function graphs","heading":"6.10 Slice plots","text":"mentioned , mathematical modeling process constructing mathematical representations situations phenomena interest. CalcZ, primarily interested using functions representations. 780Almost always, mathematically modeling real-world situation phenomenon, try capture every nuance every relationship might exist real world. leave things . simplifications make modeling problems tractable encourage us identify important features important relationships.hand, ’s easy go wrong leave something ’s important. mitigate risk, many modeling projects involve modeling cycle propose candidate model, examine consequence model see corresponds well parts reality important us task, modify model needed produce new better candidate. 790In spirit, ’s useful always assume models leaving something complete model involves function inputs present candidate. present candidate model considered slice complete model. slice leaves one variables complete model.illustrate , suppose “complete model” form function two inputs, shown contour plot .become practiced reading contour plots, might prefer read one hilltop (shaded yellow) side--side hollow bowl (shaded purple), green, almost level flanks left right edges frame.common forms slice involve constructing simpler function one input . example, simpler function might ignore input #2. different ways collapsing function two inputs function one input. especially useful way calculus take two-input function set one inputs constant value.instance, suppose set input #2 constant value 1.5. means can consider value input #1, input #2 replaced 1.5. Figure 6.6, ’ve marked red points contour plot give output simplified function. 795\nFigure 6.6: Left: slice domain contour plot. Right: value function along slice, presented mathematical graph, generated slice_plot().\npoint along red line corresponds specific value input #1. contours, can read output corresponding values input #1. relationship, output versus input #1 can drawn mathematical graph (right contour plot). Study graph can see rising falling parts graph correspond contours crossed red line.Slices can taken direction even along curved path! blue line slice constructed letting input #2 vary holding input #1 constant value 0.","code":""},{"path":"params-intro.html","id":"params-intro","chapter":"7 Parameters for functions","heading":"7 Parameters for functions","text":"pattern-book functions provide modeler collection shapes. yet fully suited represent real-world phenomena. illustrate, consider Figure 7.1 shows number officially confirmed cases March 2020. 800The outbreak widely described “exponential,” alongside data Figure 7.1 shows function \\(e^x\\).\nFigure 7.1: Cumulative officially confirmed COVID-19 cases month March, 2020. red curve \\(e^x\\)\n’s obvious mismatch data function \\(e^x\\). mean COVID pattern exponential?hint comes formula \\(e^x\\). \\(x\\)? Plotted graph, \\(x\\) calender day March. shouldn’t \\(x\\) given hours minutes weeks?want input \\(\\exp()\\) hours, can multiply \\(x\\) 24. input weeks, multiplier \\(\\frac{1}{7} = 0.1429\\). cases, function \\(e^{kx}\\), \\(k\\) 24 hours 0.1429 weeks. Exploring bit, found \\(0.3 \\leq k < 0.5\\) produce functions graphs match data much better pattern-book \\(e^x\\). 810\nFigure 7.2: COVID-19 data compared exponential functions \\(e^{kt}\\). variety possible numerical values \\(k\\) shown.\nmultiplier \\(k\\) \\(e^{kx}\\) called parameter function: number can use set scale input. use exponential function model COVID, ’ve stretch red curve Figure 7.2 tailoring pattern-book \\(x\\) \\(k x\\). Perhaps ’s matter personal choice size \\(k\\) best suited model data.personal choice \\(k=0.30\\). reasoning? orange curve parallels COVID data. flaw \\(k=0.30\\) curve lags several data several days. can fix pulling \\(k=0.30\\) curve left. Mathematically can accomplished subtracting days \\(x\\) multiplying \\(k\\), , using function \\[f(x) \\equiv e^{k(x-s)}\\] \\(s\\) stands shift.Figure 7.3 shows orange curve pulling 10 days left. ’s now pretty good match data.\nFigure 7.3: COVID-19 data compared exponential functions \\(e^{k(t-s)}\\).\nNote ’ve aligned orange curve horizontally, seems curve much. green curve much better. much gentler curve, \\(k=0.19\\) pulled little month left. 820By parameterizing exponential function \\(e^{k(x-s)}\\) finding suitable values \\(k\\) \\(s\\), get good match March data. models can sometimes tell us . green curve Figure 7.3 value \\(s\\) -32 days. 32 days March 1 late January. even though didn’t January February data base green curve , late January 2020 regarded beginning outbreak.","code":""},{"path":"params-intro.html","id":"parallel-scales","chapter":"7 Parameters for functions","heading":"7.1 Parallel scales","text":"graphical format using display functions one variable places input horizontal axis output vertical axis. way draw function. Consider everyday objects: thermometer ruler.     object presents read-’s measured—temperature length—two different scales. time, objects provide way convert one scale another.function gives output given input. represent input value position number line—call “axis”—output position another output line, almost always drawn perpendicular one another. two number lines can just well parallel one another. evaluate function, find input value input scale read corresponding output. inverse function can evaluated just easily: switch roles input output scales. 830Taking traditional unit scale input metric scale output, two functions implemented objects :\n\\[\\underbrace{C(F) = \\frac{5}{9}(F-32)}_\\mbox{Fahrenheit Celcius}\\ \\ \\ \\text{}\\ \\ \\ \\ \\underbrace{\\text{cm(inches)} = 2.54 \\times (\\text{inches}-0}_\\mbox{inches cm})\\]\nsimple, straight-line functions, play important role modeling.conversion function can written form \\(\\line(x) \\equiv m (x - x_0)\\). course, multiply \\(m\\) terms parentheses, get \\(\\line(x) = m x - m x_0\\) can written even simply \\(mx + b\\) setting \\(b\\equiv m x_0\\). conversion function simply straight-line function.\\(m\\) \\(x_0\\) parameters straight-line function. terms graph straight-line function, slope x-intercept respectively.Often, functions can parameterized ways. instance, likely learned parameterization \\(m x + b\\), \\(m\\) (still) slope graph \\(b\\) now y-intercept.can call \\(m(x - x_0)\\) “x-intercept parameterization” \\(m x + b\\) \"y-intercept parameterization. equivalent equally good ways parameterizing straight line. still ways parameterizing, style reflecting format specifying two points make line.","code":""},{"path":"params-intro.html","id":"scaling-the-input","chapter":"7 Parameters for functions","heading":"7.2 Scaling the input","text":"turn pattern-book function basic modeling function use \\(\\line()\\) convert input applying pattern-book function. 840To illustrate link basic modeling functions pattern-book progenitors, Figure 7.4 shows model fit COVID-19 data:\nFigure 7.4: graph pattern-book exponential additional scale displayed (red) match COVID-19 data\nfunction drawn simply \\(e^x\\): function pattern book. black horizontal scale shows \\(x\\). match function data, , show basic modeling function, simply add new scale translates \\(x\\) “day March.” ’s red scale. , March 22, 25,000 COVID cases date.pattern-book function give good model COVID case numbers. scale input applying pattern-book function, effectively laying new axis, stretched shifted original, let’s us read number cases.Input scaling empowers pattern-book functions model huge variety phenomena. ’s just one exponential function always looks exactly . huge variety ways scale input. input scaling, pattern-book function tailored become one basic modeling functions.\n\\[\\underbrace{e^x}_\\mbox{pattern-book function}\\  \\text{versus}\\  \\underbrace{e^{k(x-x_0)}}_\\mbox{basic modeling function}\\]\nstraight-line function \\(\\line()\\) written \\(k(x-x_0)\\) rather \\(m(x-x_0)\\). ’s traditional write basic modeling functions\nmay noticed uses \\(k\\) instead \\(m\\) multiplier straight-line function exponent. course, can use whatever name wish parameter. idiom mathematical notation several conventions. Knowing help read mathematics fluently. 850The table shows . Often, multiple parameterizations.","code":""},{"path":"params-intro.html","id":"scale-the-output","chapter":"7 Parameters for functions","heading":"7.3 Scale the output","text":"Just natural input usually needs scaled reaches pattern-book function, output pattern-book function may need scaled presents result suited interpreting real world.\nFigure 7.5: Natural quantities must scaled pure numbers suited pattern-book functions. output pure number scaled natural quantity interest.\noverall result input output scaling tailor pattern-book function ready used real world. 860The parameter \\(C\\) often called baseline offset. Statisticians call “intercept,” plays role \\(b\\) straight-line function.working sinusoids, parameter \\(\\) called amplitude.course, ’re already familiar \\(\\) \\(b\\): slope y-intercept straight line.\nFigure 7.6: Baseline (blue), amplitude (red), period (green) sinusoid.\n\nFigure 7.7: baseline exponential horizontal asymptote. vertical asymptote.\nRecall basic modeling functions constructed corresponding pattern-book functions scaling input.\\[\\text{pattern-book function}\\ \\ \\underset{x\\rightarrow (x-x_0)}{\\overset{\\text{input scaling}}{\\Large\\Longrightarrow}} \\ \\ \\text{basic modeling function}\\]Recognizing axis crossings (y blue, x red) asymptotes (orange) pattern-book functions can help figure parameters \\(\\) \\(x_0\\) input scaling \\((x-x_0)\\) basic modeling functions. ’s reference:following plots shows basic modeling function whose input scaling form \\(x - x_0\\). job figure graph numerical value \\(x_0\\). (Hint: simplicity, \\(x_0\\) questions always integer.)Question plot (), \\(x_0\\)?    -2 ︎✘        -1 ︎✘        0 ︎✘        1 ︎✘        2 Right! Right. Look input generates peak output value. Question B plot (B), \\(x_0\\)?    -2 ︎✘        -1 Right! Good. Look input generates positive going zero crossing.        0 ︎✘        1 ︎✘        2 ︎✘ Question C plot (C), \\(x_0\\)?    -2 ︎✘        -1 Right! Right. location vertical asymptote clue.        0 ︎✘        1 ︎✘        2 ︎✘ Question D plot (D), \\(x_0\\)?    -2 ︎✘        -1 ︎✘        0 ︎✘        1 Right-oh! input output half way two horizontal asymptotes        2 ︎✘ Question E plot (E), \\(x_0\\)?    -2 Right-oh! Right. location vertical asymtote clue.        -1 ︎✘        0 ︎✘        1 ︎✘        2 ︎✘ graphs shows two horizontal scales one basic modeling functions. horizontal scale (black blue) corresponds pattern-book function?Question graph (), scale corresponds pattern-book function?    black Right-oh!        blue ︎✘        neither ︎✘        ︎✘ can’t . ’s one pattern-book function. scale input, becomes “basic modeling function.” Question B graph (B), scale corresponds pattern-book function?    black ︎✘        blue Right! Right. pattern-book function output 1/2 output zero. ’s blue scale shows.        neither ︎✘        ︎✘ can’t . ’s one pattern-book function. scale input, becomes “basic modeling function.” Question C graph (C), scale corresponds pattern-book function?Find straight-line function give value black scale point \\(x\\) blue scale. function take blue-scale reading input produce black-scale reading output, :\n\\[\\text{black}(x) \\equiv (x - x_0)\\]Question Graph , function maps blue \\(x\\) value black scale?\\(black(x) \\equiv x/3\\) Right-oh! \\(black(x) \\equiv 3\\, x\\) ︎✘ ’re going wrong way, black blue. \\(black(x) \\equiv x + 3\\) ︎✘ horiztontal shift? \\(black(x) \\equiv x - 3\\) ︎✘ horizontal shift? Question B Graph B, function maps blue \\(x\\) value black scale?\\(black(x) \\equiv -2\\,x/3\\) Right! \\(black(x) \\equiv 3\\, x/2\\) ︎✘ Look carefully \\(\\pm\\) signs scales. \\(black(x) \\equiv 2\\,x/3\\) ︎✘ Look carefully \\(\\pm\\) signs scales. \\(black(x) \\equiv -3\\,x/2\\) ︎✘ ’re going wrong way, black blue. Question C Graph C, function maps blue \\(x\\) value black scale?\\(black(x) \\equiv (x - 2)/2\\) Correct. Good. interval length 4 blue scale (say, 2 6) becomes interval length 2 black scale. know blue black involves dividing 2. \\(black(x) \\equiv 3\\, x\\) ︎✘ shift \\(black(x) \\equiv 2\\,x\\) ︎✘ shift? \\(black(x) \\equiv 2\\,(x + 2)\\) ︎✘ ’re going wrong way, black blue. Question D Graph D, function maps blue \\(x\\) value black scale?\\(black(x) \\equiv 2 (x + 3)/3\\) Correct. \\(black(x) \\equiv 3 (x - 3)/2x\\) ︎✘ \\(black(x) \\equiv 3 (x+1)/2\\) ︎✘ \\(black(x) \\equiv 3(x - 2)/2\\) ︎✘ ’re going wrong way, black blue. \n","code":""},{"path":"params-intro.html","id":"linear-combinations","chapter":"7 Parameters for functions","heading":"7.4 Linear combinations","text":"’ve discussed shifting baseline exponential sinusoid functions adding constant basic modeling function, like :\\[f(t) \\equiv e^{kt} + C\\\\\n\\ \\\\\ng(t) \\equiv \\sin\\left(\\frac{2\\pi}{P} t\\right) + C\\]’ve called output scaling. ’s example much general powerful way contructing modeling functions called linear combinations.linear combination, start one basic functions. discussion, let’s call \\(f_1(t)\\), \\(f_2(t)\\), \\(f_3(t)\\) . making linear combination, multiply basic functions quantity add results together:\\[\\text{linear combination }\\ f_1(t)\\ \\text{}\\ f_2(t): \\ \\ A_1 f_1(t) + A_2 f_2(t)\\]\nquantities \\(A_1\\) \\(A_2\\) called scalars scale functions. (Chapter ?? see make distinction scalar, single quantity, vector, set scalars.)’s common take linear combinations functions different inputs, example\n\\[h(x, y, t) \\equiv 4 e^{-kt} + 7 y + 2\\,\\pnorm(x-3) - 19\\]fields like statistics economics social sciences, well clinical medical research, great number modeling techniques involve combinations functions various inputs.engineering physics, important class functions involves linear combination many sinusoids different periods, e.g. \\[\\text{signal}(t) \\equiv A_1 \\sin\\left(\\frac{2 \\pi}{P_1}t\\right) + \nA_2 \\sin\\left(\\frac{2 \\pi}{P_2}t\\right) + \nA_3 \\sin\\left(\\frac{2 \\pi}{P_3}t\\right) + \\cdots\\]Linear combination functions provides powerful flexible general-purpose modeling technique part many physical systems seem work way part methods finding scalars—\\(A_1\\), \\(A_2\\), —extremely strong theory fast computer implementations automatically solve problem modeler selected functions wants combine. Block 4, use name target problem refer problem finding scalars match well possible linear combination data.expression like \\(e^{kx} + C\\) combines exponential (obviously!) second function isn’t immediately obvious: constant function \\(\\text{constant}(x) \\equiv 1\\). might overkill re-write expression \\(e^{kx} + C\\, \\text{constant}(x)\\) get habit seeing constant function constant presence linear combinations!Polynomials important example linear combinations. Something like \\(p(x) \\equiv + b t + c t^2\\) linear combination constant function, proportionality function, square function.graph shows linear combination two sinusoids, one period 0.6 period 2. also baseline shift. , graph shows function:\\[a_1 \\sin\\left(\\frac{2\\pi}{2}t\\right) + a_2 \\sin\\left(\\frac{2\\pi}{0.6} (t-.3)\\right) + a_3\\]Question \\(a_3\\)?    -4 Good.        -2 ︎✘        0 ︎✘        2 ︎✘        4 ︎✘ Question B \\(a_1\\)?    0 ︎✘        1 ︎✘        2 Correct.        3.5 ︎✘ Question C \\(a_1\\)?","code":""},{"path":"process-of-modeling.html","id":"process-of-modeling","chapter":"8 Process of modeling","heading":"8 Process of modeling","text":"Seen abstractly, mathematical model set functions represent relationships inputs outputs. 900At simple level, building model can short process:Develop understanding relationship want model. Often, part “understanding” pattern seen data.Choose function type—e.g. exponential, sinusoidal, sigmoid—think good match relationship.Find parameters scales function able accept real-world inputs generate real-world outputs.’s important distinguish two basic types model:Empirical models rooted observation data.Mechanistic models created applying fundamental laws physics, chemistry, .going put mechanistic models , two reasons. First, “fundamental laws physics, chemistry, ” often expressed concepts methods calculus. heading , point don’t yet know core concepts methods calculus. Second, students don’t make careful study “fundamental laws physics, chemistry, ” studied calculus. examples mechanistic models bit hollow point.’ll start empirical modeling: finding functions good summary data. process constructing model good match data called curve fitting, , generally, fitting model.","code":""},{"path":"process-of-modeling.html","id":"variations-from-scaling","chapter":"8 Process of modeling","heading":"8.1 Variations from scaling","text":"good place start building model pick one basic modeling functions. works surprisingly often. remind , nine pattern-book functions: 910The basic modeling functions , replace plain \\(x\\) pattern-book function straight-line function, instance \\(ax + b\\) , equivalently \\((x - x_0)\\). use, parameter \\(\\) often written letter , often, \\(b\\) \\(-x_0\\) part needed.common forms basic modeling functions encounter:helps making selection ready mind basic shape function families. review, revisit Section 2.4.Remember also , general, scale inputs scale output. means choose model family, don’t worry first numbers axes. (course, numbers critically important later process!) scaling , however, allow us consider variations shapes modeling functions. particular, input scaling lets us flip shape right--left. output scaling lets us flip shape top--bottom.\\(f(t)\\), basic shape\\(f(-t)\\), flipped right--left\\(-f(t)\\), flipped top--bottom\\(-f(-t)\\), flipped top--bottom right--leftFor functions sinusoid, flipping much use, since flipped sinusoid curve still sinusoid, although shifted input. Similarly, right--left flipped gaussian function shape original. straight-line function, flipping either sort accomplishes thing: changing sign slope.exponential function, two possible types flipping—right--left top--bottom—produce four different curves, exponential, shown Figure 8.1.\nFigure 8.1: Four variations exponential functions.\nthree expressions\\[e^{kt}\\ \\ \\ \\ \\ 10^{t/d} \\  \\ \\ \\ \\  2^{t/h}\\]produce value \\(k\\), \\(d\\) \\(h\\) corresponding numerical values.scaffolding expression plotting \\(2^{t/h}\\) \\(-4 \\leq t \\leq 12\\) \\(h = 4\\). also plots \\(e^{kt}\\) \\(10^{t/d}\\)task modify values d k three curves lie top one another. (Leave h value 4.) can find appropriate values d k accomplish means like, say, using algebra exponents using trial error. (Trial error perfectly valid strategy regardless high-school math teachers might said “guess check.” trick make new guess systematically based previous ones observation previous ones performed.)found values k d suited task …Question numerical value best estimate k?    0.145 ︎✘        0.175 Right!        0.285 ︎✘        0.320 ︎✘ Question B numerical value best estimate d?","code":"\nfa <- makeFun(2^(t/h) ~ t, h = 4)\nfb <- makeFun(10^(t/d) ~ t, d = 10)\nfc <- makeFun(exp(k*t)  ~ t, k = 0.1)\n\nfb <- makeFun(10^(t/d) ~ t, d = 13.1)\nfc <- makeFun(exp(k*t)  ~ t, k = 0.175)\n\nslice_plot(fa(t) ~ t, domain(t = c(-4, 12))) %>%\n  slice_plot(fb(t) ~ t, color=\"dodgerblue\") %>%\n  slice_plot(fc(t) ~ t, color  = \"orange3\") %>%\n  gf_lims(y = c(0, 8))"},{"path":"process-of-modeling.html","id":"fit-exponential","chapter":"8 Process of modeling","heading":"8.2 Curve fitting an exponential function","text":"exponential function particularly useful quantity want model shows constant proportional increase. Many quantities everyday life way. instance, increase salary typically presented format like “3% increase.” population growth country often presented “percent per year.” Inflation price goods similarly described percent per year. Interest money bank savings account also described percent per year. bad fortune owe money loan shark, proportional increase might described “percent per month” “percent per week.” 920When know “percent increase per time” quantity whose initial value \\(\\), exponential function easy write : \\[f(t) = (1+r)^t\\]\nnumber \\(r\\) often called interest rate discount rate given percent.Regrettably, ’s extremely easy amd common forget rules addition percent. \\(r = 5\\%\\), \\((1+r) = 1.05\\), 6. Always keep mind \\(5\\%\\) means \\(\\frac{5}{100}\\).Another source error stems tradition mathematics using number \\(e=2.718282\\) “natural” base exponential function, whereas \\(f(t) = (1+r)^t\\) base \\(1+r\\).can translate exponential \\(b^t\\) base \\(b\\) “natural” base. just matter calculating appropriate parameter \\(k\\) \\(e^k = b\\). Using logarithms, \\[e^k = b\\ \\ \\implies \\ \\  k=\\ln(b)\\] instance, \n\\(r=5\\%\\) per year, ’ll \\(k = \\ln(1+r) = \\ln(1.05) = 0.488\\) per year.Almost everybody happier arithmetic numbers like 2 10 rather \\(e=2.718282\\). reason, may see formulations exponential function \\(g(t) \\equiv 2^{t}\\) \\(h(t) \\equiv 10^{c t}\\). Remember \\(2^{t}\\) \\(e^{}\\), although exponential functions, quantitatively different. want write \\(2^{}\\) using “natural” base, \\(e^{\\ln(2) \\, t }\\). Similarly, \\(10^{ct} = e^{\\ln(10) c\\, t}\\).Exponential functions also describe decrease decay. Just replace \\(t\\) \\(-t\\). , movie decreasing quantity just movie increasing quantity played backwards time! 930Figure 8.2 shows data collected Prof. Stan Wagon support making detailed mechanistic model everyday phenomenon: cooling mug hot beverage room temperature. mug started room temperature, measured 26 degrees C. time 0 poured boiling water kettle measured temperature water next hours.\nFigure 8.2: Stan’s data\ntask translate data form function takes time input returns temperature output. model useful , say, filling gaps data. instance, might want find temperature water immediately poured kettle mug.Looking data, one sees temperature decreases along curve: cooling fast first slowly. pattern flipped right--left exponential. (Figure 8.1(B)) can imagine exponential, \\(e^{kt} + C\\) suitable model form cooling water.remains find parameters \\(\\), \\(k\\), \\(C\\). general process curve-fitting exponential. Later, ’ll apply process specifically water-cooling situation.General process curve-fitting exponentialThe goal find parameters \\(\\), \\(k\\), \\(C\\) formula \\(e^{kx} + C\\).Step 0: Check data show exponential pattern one varieties, namely smooth increase decrease leveling beyond value \\(x\\). isn’t true, reconsider whether using exponential function first place. Using mind’s eye (paper, like) sketch exponential-shaped curve follows overall trend data. ’ll call imagined curve \\(f(x)\\).Step 1: Find baseline. output level function horizontal asymptote, , function levels . \\(C\\) baseline level.Step 2: Find numerical value imagined function \\(f()\\) input \\(x = 0\\). ’ll call value \\(f(0)\\). \\(\\equiv f(0) - C\\).Step 3 Estimate parameter \\(k\\) using steps:Pick input value, ’ll call \\(x_2\\), \\(f(x_2)\\) far baseline.Find input value, ’ll call \\(x_1\\) \\(f(x_1)\\) halfway baseline \\(C\\) \\(f(x_2)\\), , \\[f(x_1) = \\frac{f(x_2) - C}{2}\\]\\[k = \\frac{\\ln(2)}{x_2 - x_1} \\approx \\frac{0.693}{x_2 - x_1}\\]Using simple test double-check work. horizontal asymptote \\(f()\\) (, approach baseline) \\(x \\rightarrow \\infty\\), \\(k\\) negative. horizontal asymptote \\(x \\rightarrow - \\infty\\), \\(k\\) positive.Notice question “growth decay” depends sign parameter \\(k\\). can exponentially decaying process ’s increasing. Consider, instance, speed car merges onto highway slow speed entrance ramp. car’s velocity increasing, approach highway speed rate increase gets smaller. ’s exponential decay.procedure Step 3 estimating \\(k\\) stems important property exponential functions: Exponential functions always double/half constant pace. design, parameter \\(k\\)\ndirectly determines pace. Picking \\(x_2\\) finding corresponding \\(x_1\\) gives length input interval, \\(x_1 - x_2\\) distance baseline doubles/halves.’s remarkable doubling/halving time , genuinely exponential function, doesn’t matter point choose \\(x_1\\). practice working graphed data, ’s best choose \\(f(x_1)\\) discernibly far baseline. started , property true across entire input domain.\n\\(2\\) \\(\\ln(2)\\) corresponds idea doubling/halving. logarithm converts \\(2\\) scale generate 2 exponentiated.Step 4 can plot data, . Add graphics layer showing function \\(e^{k x} + C\\) using values \\(\\), \\(C\\), \\(k\\) just found. satisfied way plotted function approximates data, tweak parameters bit .Exponential curve fitting applied water-cooling dataLet’s illustrate general process water-cooling data, redrawn Figure 8.3. 950\nFigure 8.3: cooling-water data, repeated convenience.\nStep 0: data indicate smooth curve. \\(t\\) gets large, curve approaches constant. exponential model reasonable.Step 1: curve looks like ’s leveling temperature 25 degrees C large \\(t\\). \\(\\approx 25^{\\circ} \\text{C}\\).Step 2:point far baseline located \\(t_1 = 15 \\text{sec}\\) value \\({\\cal D} \\approx 80^\\circ\\text{C}\\).\\(55^\\circ\\text{C}\\) baseline. want find value \\(t_1\\) temperature half way 80 baseline. ’s temperature \\(80 - 55/2 = 53.5\\). Scanning right, function can imagine going data crossed \\(53^\\circ\\) \\(t_{1/2} = 40\\). Thus, half-life estimated 25s.parameter \\(k\\) therefore \\(k\\approx 0.693 / \\mbox{half-life} = - 0.63 / 25 = -0.0277\\). Since identified Step 1 exponential decay involved, expect \\(k\\) negative. .Step 3.know \\(\\approx 25\\) \\(k \\approx -0.0277\\). also now \\(t=15\\) function output \\({\\cal D} = 80^\\circ\\).means \\(25^\\circ + B e^{- 0.0277 \\times 15} \\approx 80^\\circ = 25 + 0.66\\ B\\). Solving \\(B\\) gives \\(B = (80 - 25)/0.66 = 83.3\\)Step 4. Graph function data.\nFigure 8.4: exponential function roughly aligns data.\nStep 5: flat zone data right. ’ve got exponential decay \\(k < 0\\).Bargain Basement store wants sell goods quickly. Consequently, reduce product’s price \\(P\\) 5% per day.Question jacket costs $80 today, much cost \\(t\\) days?\\(P = 80 - 5t\\) ︎✘ Remember, 5 percent exactly 0.05 \\(P = 80 - 4t\\) ︎✘ Remember, 4 percent exactly 0.04 \\(P = 80 - 0.05t\\) ︎✘ decrease price 5 cents every day. \\(P = 80 (0.05)^t\\) ︎✘ day’s price 5% previous day’s price. \\(P = 80 (0.95)^t\\) Right-oh! ’ll need open sandbox next question.’re ! Remember, raise number power, can use expression like 0.95^7.Question B decided like $80 jacket, budget $60. long wait coming back Bargain Basement store.?    3 days ︎✘ day 3 price \\(0.95\\times 0.95 \\times 0.95 \\times 80\\). ’s budget.        4 days ︎✘ day 4 price \\(80 \\times 0.95^4\\)= $65.16. much!        5 days ︎✘ day 5 price \\(80 \\times 0.95^5\\)= $61.90. Close, still higher budget.        6 days Good. Wikipedia entry “Common Misconceptions” used contain item:cooks believe food items cooked wine liquor non-alcoholic, alcohol’s low boiling point causes evaporate quickly heated. However, study found alcohol remains: 25% 1 hour baking simmering, 10% 2 hours.modeler’s go-function type events like evaporation alcohol exponential: amount alcohol evaporates , constant conditions (e.g. oven’s heat), proportional amount alcohol hasn’t yet evaporated.Question ) Assume 25% alcohol remains 1 hour? process exponential, much remain 2 hours?    10% ︎✘ ’s study reported found, ’s consistent exponential process decays 25% one hour        25% ︎✘ Exponentials decay zero eventually, don’t expect things stay still one hour.        25% 25% Right! know 75% eliminated 1 hour, leaving 25%. continuing exponential process , next hour eliminate 75% amount start hour. hour 2 ’ll 25% amount hour 1, 25% original amount.        75% ︎✘ ’s much eliminated first hour, much remains 2 hours.        75% 75% ︎✘ exponential process, moment rate decay (e.g. 75% per hour) constant proportion amount still . one hour, 25% alcohol remaining. decay rate 75% per hour. next hour, ’ll lose 75% original 25%, giving us 25% original amount. Question B B) half-life exponential process decays 25% one hour?15 minutes ︎✘ provides time four halvings one hour, leave \\(\\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} \\times \\frac{1}{2} = 1/16\\) original 1/4. 30 minutes Correct. gives time two halvings one hour, bringing us 25% observed. 45 minutes ︎✘ Two halvings bring us 25%. rate, take 90 minutes get 25%, 60 minutes observed. none ︎✘ Let’s change pace think “10% 2 hours” observation. First, recall amount left \\(n\\) halvings \n\\(\\mbox{amount_left}(n) \\equiv \\frac{1}{2}^n\\)\nexponential function base 1/2.’re going carry guess--check procedure find zero function \\(\\text{amount_left}(n) - 0.10\\) , ’ll find \\(n\\) generate stated output value (e.g. 10%).\nOpen sandbox copy scaffolding, include definition amount_left() function. “guess” input. Change guess get output 10%.Question C C) Use amount_left() figure many halvings takes bring something 10% original amount.    2.58 ︎✘        3.32 Right!        3.62 ︎✘        3.94 ︎✘        4.12 ︎✘ Another way find input \\(n\\) generates output 10% construct inverse function \\(\\text{amount_left}()\\).computer already provides inverse functions \\(2^n\\) \\(e^n\\) \\(10^n\\). names log2(), log(), log10() repectively. Using log2(), write function named log_half() gives inverse function \\((1/2)^n\\). Remember, input inverse function corresponds 10%; output \\(n\\).Question D D) answer got part C) number halvings needed reach 10%. number occurs 2 hours (, 120 minutes), half life stated minutes.    30 ︎✘        35 ︎✘        36 Right-oh!        38 ︎✘        42 ︎✘        47 ︎✘ Suppose compromise half-life needed reach 25% one hour half-life needed reach 10% two hours. Use, say, 33 minutes compromise half life. Using sandbox , calculate much left 1 hour compromise half life, much left 2 hours.Question E E) much left 1 hour 2 hours half life 33 minutes?28% 8% Excellent! 31% 4% ︎✘ 30% 9% ︎✘ 27% 9% ︎✘ ","code":"\namount_left <- makeFun((1/2)^n ~ n)\namount_left(0)## [1] 1log_half <- makeFun( log2(...your stuff here ...) ~ x)"},{"path":"process-of-modeling.html","id":"fit-periodic","chapter":"8 Process of modeling","heading":"8.3 Curve fitting a periodic function","text":"Figure 8.5 shows tide level Providence, Rhode Island, starting midnight April 1, 2020 recorded every minute four half days. (data collected US National Oceanic Atmospheric Administration. Link) 960\nFigure 8.5: four days tide-level data Providence, Rhode Island\n’s hard see ’s going . tide rises falls every 12 hours. difference high tide low tide little one meter. tide gauge calibrated typical reading 1 meter, although don’t know respect . (Certainly sea level, since typical reading around zero.)simple description tells almost everything needed construct /B model tide level using sinusoid, , function form \\[\\sin(2\\pi t/P) + B\\] procedure straightforward:Step 0: Determine whether sinusoid model appropriate. know, sinusoids oscillate repeatedly steady period. certainly seems case . sinusoids also steady peak trough values cycle. ’s approximately true Providence data. Models inevitably involve approximation. ’ll keep eye whether modeling sinusoids fixed amplitude still lets us extract useful information.Step 1: Choose sensible value represent low point repeatedly reached. 0.5 m seems appropriate , obviously exact position trough cycle varies 4.5 day duration data. Similarly, peak near 1.6 m. Parameter \\(B\\) mean peak trough values: \\(\\frac{1.6 + 0.5}{2} = 1.05\\) m . Parameter \\(\\) half difference peak trough values: \\(\\frac{1.6 - 0.5}{2} = 0.55\\). Parameter \\(B\\) called baseline sinusoid. Parameter \\(\\) amplitude. (Note convention, amplitude always half high--low range sinusoid.)Step 2: Estimate period \\(P\\) sinusoid. can done ruler: horizontal duration complete cycle. like use time peaks, time troughs work just well. Another good choice time positive sloping crossings baseline. (careful. time successive baseline crossings, one positive sloping negative, give just half period.)scale plot, ’s hard read time first peak. , zoom becomes obvious.\nFigure 8.6: Zooming start data (left) last part data (right).\nleft panel Figure 8.6 shows 24 hours start record. first peak 7 hours, second 18 hours. indicates period 18 - 7 = 11 hours.Step 3 Plot model data. Replacing symbols \\(\\), \\(B\\), \\(P\\) estimates, model \\[\\require{color}\n{\\color{green}\\mbox{tide}(t) \\equiv 1.05 + 0.55 \\sin(2\\pi t/11)}\\]Figure 8.7 shows model \\(\\color{green}\\mbox{green}\\).\nFigure 8.7: sinusoid fails align timing peaks troughs.\nperson breathes roughly every three seconds. volume \\(V\\) air person’s lungs varies minimum \\(2\\) liters maximum \\(4\\) liters. Assume time \\(t\\) measured seconds.Remember full cycle sine wave \\(\\sin(x)\\) involves \\(x\\) going starting value value plus \\(2 \\pi\\).Question following appropriate models \\(V(t)\\)?\\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ︎✘ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) Right-oh! Good. class, generally write sine function like \\(\\sin(2 \\pi t/P)\\) means overall argument sine function go 0 \\(2 \\pi\\) \\(t\\) goes 0 \\(P\\). \\(V(t) \\equiv 2 + 2 \\sin \\left( \\frac{2\\pi}{3} t \\right)\\) ︎✘ varies minimum 0 maximum 2. \\(V(t) \\equiv 3 + \\sin \\left( \\frac{\\pi}{3} t \\right)\\) ︎✘ Right amplitude baseline: minimum 2 liters maximum 4 liters. period wrong. Going \\(t=0\\) \\(t=3\\) produce full cycle sine function. argument go 0 $ 3 = \\(\\pi\\). 3 seconds, half cycle completed. Question B Given respiratory period 3 seconds/breath, respiratory frequency units breaths/minute?20 breaths/minute Excellent! Right. breath takes 1/20th minute, 3 seconds, period specified question. 3 breaths/minute ︎✘ true, breath take 20 seconds complete. 1/3 breath per minute ︎✘ breaths completed every three seconds, 1/3 breath completed second. problem asked breaths per minute. 20 seconds per breath ︎✘ period units seconds per breath, frequency units breaths per second. Frequency reciprocal period (vice versa). respiratory cycle can divided two parts: inspiration expiration. Please experiment. Using clock watch, breath total period 3 seconds/breath, , complete one breath every three seconds. practiced can without forcing either phase breathing, make rough estimate fraction cycle inspiration fraction expiration. (“correct/incorrect” answers right people. natural respiration might different.)Question C true?Inspiration lasts longer expiration Excellent! Expiration lasts longer inspiration ︎✘ Maybe , people. Try breathing counting 1-2-3 exhaling counting 1-2-3-4-5-6. Likely, ’s natural pattern . Inspiration expiration consume fraction complete cycle. ︎✘ People can consciously counting 1-2-3 inspiration another 1-2-3 expiration. usually feels forced unnatural. graph shows recording “spirometer,” instrument recording respiration. Like many old instruments, trace spirometer made pen end swinging arm paper moving steadily beneath . arm exactly aligned horizontal axis. Nonetheless, able estimate appropriate amplitude period trace. (dm\\(^3\\) cubic-decimeters: tenth meter cubed. liter.)Question appropriate estimates period amplitude respiration trace?\\(\\pm 1\\) liter 3 seconds. ︎✘ true, 120 seconds recording expect see 40 cycles respiration. \\(\\pm 1\\) liter 5 seconds. Good. \\(\\pm 1\\) liter 7.5 seconds. ︎✘ true, expect see 16 cycles respiration 120 seconds recording. ","code":""},{"path":"process-of-modeling.html","id":"curve-fitting-a-power-law-function","chapter":"8 Process of modeling","heading":"8.4 Curve fitting a power-law function","text":"using power-law functions early math science education. examples: 970The reason power-law functions important role science logic physical quantities length, mass, time, area, volume, force, power, . ’ll discuss length later course principles appear throughout calculus.finding power law \\(f(x) \\equiv x^p\\) provides good match data, ’ll need additional tools introduced Chapter 15.","code":""},{"path":"process-of-modeling.html","id":"gaussian-and-sigmoid-functions","chapter":"8 Process of modeling","heading":"8.5 Gaussian and sigmoid functions","text":"last two basic modeling functions express important idea modeling: localness. put concrete terms, imagine creating function depict elevation sea level long road function distance miles, \\(x\\), start road. road level 1200 feet elevation, sensible model \\(\\mbox{elevation}(x) = 1200 \\text{ft}\\). road gently sloping, better model \\(\\mbox{elevation}(x) = 1200 + 3 x\\). 980Now let’s add bump road. bump local feature, often feet wide. , perhaps road crossing mountain range. ’s also local feature, unlike bump road mountain range extends many miles.basic modeling function suited represent bumps road, potholes, mountain ranges generically called “hump function.” book, use specific hump function called gaussian function (dnorm()).gaussian function two parameters: location11 peak, ’ll call center parameter, sideways extent gaussian, called standard deviation. Figure 8.8 shows gaussian functions different parameters.\nFigure 8.8: Gaussians various centers standard deviations (sd).\n’s easy read center parameter graph gaussian. ’s location top function graph. (mentioned mathematical word “location top” argmax; value input function produces maximum output.)spread parameter also pretty straightforward, first become familiar unusual feature gaussian function. output gaussian far center practically zero. exactly zero. can see graphs gaussian function long flanks approach zero output less manner exponential function. means can’t measure spread gaussian function distance zeros either side peak. Instead, need convention allow us precise quantifying admittedly vague concept width.simple convention spread “half-width half-height.” Come half-way peak value output. Panel (c) Figure 8.8 marks elevation thin, red, horizontal line. Along line, measure width gaussian, marked thick red line Panel (c). spread parameter half width gaussian measured way. 990If keen eye, ’ll notice red line exactly half-way peak. ’s 39.35% peak. official definition width gaussian actually half-width half-height. Instead, length interval argmax inflection point.Another seeming oddity gaussian function value maximum. seemed natural define 1, -called “unit height.” way actually works different: maximum height set area gaussian function 1.business area make sense ’ve learned calculus tools, specifically “differentation” “integration.” now though …Consider another road feature, local change one elevation another might accomplish ramp. basic modeling function corresponding local change one level another sigmoid function. Figure 8.9 shows three sigmoid functions.\nFigure 8.9: Sigmoids various centers standard deviations\nname “sigmoid” comes vague resemblance graph letter S (“sigma” Greek: ς).parameters sigmoid function gaussian function: center width. center easy estimate graph. ’s value input produces output 0.5, half-way max min sigmoid. gaussian function, width measured according convention. width change input needed go output 0.5 output 0.8413. use 0.8413 must seem loony first exposure, reason. ’ll need calculus tools can make sense.Gaussian functions sigmoid functions center width parameters close relationship. instantaneous rate change sigmoid function corresponding gaussian function. Figures 8.8 8.9 show corresponding gaussian sigmoid functions. far left, sigmoid function effectively flat: slope near zero. Moving toward center sigmoid gentle slope: low number. center, sigmoid steepest: higher number. slope sigmoid becomes gentle gradually falling zero. Near zero, low, higher, low , falling zero: ’s also description gaussian function!R, name sigmoid function pnorm(). gaussian dnorm(). parameters specify center spread named mean sd. word “mean” accurately conveys idea “center.” nice able say sd comes spread, fact sd short standard deviation, old-fashioned term familiar students statistics. 1000“Standard deviation” -putting many people really replaced something less weird, perhaps typical spread. “standard” can interpreted “widely used convention.” “deviation?” gaussian function first appeared two-hundred years ago part theory measurement error. context “error,” “deviation” might made sense. theory measurement error long ago became general theory variation. Errors just one source variation.gaussian function implemented R dnorm(x, mean, sd). input called mean corresponds center hump. input called sd gives width hump.sandbox, make slice plot dnorm(x, mean=0, sd=1). varying value width, figure read value directly graph.plot , one double-headed arrows represents width parameter. others misleading.Question arrow shows correctly width parameter gaussian function graph arrows?    top Right-oh!        middle ︎✘        bottom ︎✘        none ︎✘ Question B value center graph arrows?Gaussian functions sigmoidal functions come pairs. every possible sigmoid, corresponding gaussian gives, value input, slope sigmoid.following graphs shows sigmoid gaussian function. two might might correspond one another. , output gaussian might slope sigmoid, gaussian might correspond sigmoid. Remember, ’re comparing output gaussian slope sigmoid.graph, say whether gaussian sigmoid correspond one another. , choose one reasons .Question Graph ()gaussian sigmoid correspond. Right-oh! peak gaussian occur value \\(x\\) sigmoid steepest. ︎✘ \\(x\\) sigmoid steepest? \\(x\\) gaussian highest? numerical value output gaussian function , \\(x\\), much larger numerical value slope sigmoid. ︎✘ calculate numerical value slope sigmoid? Question B Graph (B)gaussian sigmoid correspond. ︎✘ peak gaussian occur value \\(x\\) sigmoid steepest. Excellent! gaussian peaks \\(x=2\\) steepest part sigmoid \\(x=4\\) numerical value output gaussian function much larger numerical value slope sigmoid. ︎✘ calculate numerical value slope sigmoid? Question C Graph (C)gaussian sigmoid correspond. Right-oh! peak gaussian occur value \\(x\\) sigmoid steepest. ︎✘ \\(x\\) sigmoid steepest? \\(x\\) gaussian highest? numerical value output gaussian function , \\(x\\), much larger numerical value slope sigmoid. ︎✘ calculate numerical value slope sigmoid? graph D, several gaussian functions shown, one corresponds sigmoid.Question D gaussian corresponds sigmoid?mind gaussian function sigmoid function form corresponding pair.Question stories consistent relationship gaussian corresponding sigmoid?gaussian amount water bathtub sigmoid time spend bath. ︎✘ gaussian amount water bathtub sigmoid rate water flows tap. ︎✘ turn tap . ’s sigmoid looks like. gaussian rate water flows tap sigmoid amount water bathtub. Correct. gaussian indicates amount drain open sigmoid amount water bathtub. ︎✘ Shouldn’t amount water go drain open? data frame named EbolaSierraLeone12 records cumulative number Ebola cases Sierra Leone May 1, 2014 December 16, 2015. Figure 8.10 plots data.\nFigure 8.10: Cumulative Ebola cases Sierra Leone\nAlthough cumulative case data roughly sigmoidal shape, systematic differences shape true sigmoid. comparison, Figure @ref{fig:true-sigmoid} graph genuinely sigmoidal data.\nFigure 8.11: simulated sigmoidal growth process.\nLet’s develop methodology estimating parameters sigmoid graphically.Sketch S-shaped curve smoothly follows data. Figure 8.11 already done . Ebola data, use judgment.Sketch S-shaped curve smoothly follows data. Figure 8.11 already done . Ebola data, use judgment.Find top plateau S-curve. indicated red line Figure 8.11. parameter simply height plateau, case \\(y \\approx 15\\).Find top plateau S-curve. indicated red line Figure 8.11. parameter simply height plateau, case \\(y \\approx 15\\).Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.Come half way plateau. , ’s 15/2 7.5, indicated horizontal blue line segment. Find inverse S-curve half-way point onto horizontal-axis. , gives \\(t \\approx 5\\). parameter center value.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.center S-shaped curve, follow curve upward 2/3 way plateau. diagram, point marked green line \\(t \\approx 7\\). width distance along horizontal axis blue centerline green line. , ’s \\(7 - 5\\) giving 2 width.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.might also want trace S-curve downward centerline 2/3 way zero. ’s indicated left green line. standard sigmoid, two green lines equally spaced around centerline. course data may shape standard sigmoid, might find two green lines equally spaced center.Put aside moment Ebola data doesn’t look exactly like standard sigmoid function. Follow procedure, nevertheless.Question top plateau?Day 600. ︎✘ Measure height plateau, starts horizontally. 14,000 cases Correct. 20,000 cases ︎✘ Read vertical axis markings carefully. None ︎✘ One answers pretty good. Question B centerline?Near Day 200 Correct. Near Day 300 ︎✘ ’s center vertical scale, day curve reaches half-way eventual plateau. 7000 cases ︎✘ ’s half-way plateau, answer want day curve reaches point. Question C Now find width parameter. curve looks classically sigmoidal left centerline right, follow curve downward Step 4 algorithm find parameters. ’s good estimate width?50 days Good. 100 days ︎✘ wide! 10 days ︎✘ small 2500 cases ︎✘ width measured along horizontal axis, vertical Open sandbox use following commands plot Ebola data along sigmoid matched data eye. commands also generate plot “refined” estimate found fitModel() starting -eye parameters. (Note: ’ll need fill blanks start scaffolding -eye parameters running code.)can’t predict see graph, since depends starting estimates used , center width.task: Write estimates made eye , center width. explain words major systematic deviations ‘refined’ model data.\"idea fitting sigmoidal curve globally data roughly sigmoidal might forgiven since ’s just textbook exercise. real-world problem, three rookie mistakes approach, despite technical sophistication.model built purpose. ’s statement exercise purpose .data good enough representation historical pattern. ’s need adorn fitted curve.mathematical processes justify expectation sigmoid curve useful based idea underlying mechanism phenomenon unchanging. epidemic, mechanism contagion. saying “mechanism unchanging,” mean person--person transmission Ebola virus happens way beginning epidemic middle end. strong public health interventions introduced control epidemic. ’s change mechanism.Question One curves plot () pattern-book function. one?    black Correct.        blue ︎✘        green ︎✘        tan ︎✘        none ︎✘ Question B Taking \\(f()\\) pattern-book function plot (), one curves \\(f(-x)\\)?    black ︎✘        blue ︎✘        green ︎✘        tan Correct.        none ︎✘ Question C One curves plot (B) pattern-book function. one?    black ︎✘        blue ︎✘        green ︎✘        tan Right-oh!        none ︎✘ Question D Taking \\(f()\\) pattern-book function plot (B), one curves \\(-f(x)\\)?    black ︎✘        blue Good.        green ︎✘        tan ︎✘        none ︎✘ blue curve plot (C), know, sinusoid pattern-book function.Question E functions green curve?\\(\\sin(-x)\\) ︎✘ \\(-\\sin(x)\\) ︎✘ \\(-\\sin(-x)\\) ︎✘ \\(\\sin(-x)\\) \\(-\\sin(-x)\\) ︎✘ \\(\\sin(-x)\\) \\(-\\sin(x)\\) Excellent! sine function -called “odd” symmetry around \\(x=0\\). Question F One curves plot (D) pattern-book function. one?    black ︎✘        dodgerblue ︎✘        green Correct.        tan ︎✘        none ︎✘ Question G Taking \\(f()\\) pattern-book function plot (D), one curves \\(-f(-x)\\)?curves graph exponential function \\(e^{kt}\\), various values \\(k\\).Question order \\(k\\) smallest (negative) k largest?orange, black, red, green, blue Good. Exponential functions grow slowly \\(k\\) small absolute value black, orange, blue, green, red ︎✘ Sorry. Notice red curve grows slowly. means smallest \\(|k|\\). red, green, blue, orange, black ︎✘ orange black curves negative \\(k\\), smaller curves positive sign. \n","code":"\nslice_plot(dnorm(x, mean=0, sd=1) ~ x,\n           domain(x = c(-4, 4)))\ngf_point(Cases ~ Day, data = MMAC::EbolaSierraLeone)A_estimate <-  _____ \ncenter_estimate <- _____\nwidth_estimate <- ______\n\nguessed_fun <- makeFun(A* pnorm(Day, center, width) ~ Day,\n                       A = A_estimate,\n                       center = center_estimate,\n                       width = width_estimate)\n\n\nrefined_fun <- fitModel(Cases ~ A * pnorm(Day, center, width),\n                 data = EbolaSierraLeone,\n                 start = list(A=A_estimate, \n                              center=center_estimate,\n                              width=width_estimate))\n\ngf_point(Cases  ~ Day, data = MMAC::EbolaSierraLeone)  %>%\n  slice_plot(guessed_fun(Day) ~ Day, color=\"red\") %>%\n  slice_plot(refined_fun(Day) ~ Day, color=\"blue\")"},{"path":"fun-slopes.html","id":"fun-slopes","chapter":"9 Slope function","heading":"9 Slope function","text":"purposes, definition calculus 1100The use functions model explore continuous changeThe agenda chapter give specific mathematical meaning word “change.”","code":""},{"path":"fun-slopes.html","id":"change-and-slope","chapter":"9 Slope function","heading":"9.1 Change and slope","text":"solid, intuitive sense “change” means. mathematics, especially mathematics functions, change simple meaning already touched previous math education.word encapsulates “change” high-school math slope. instance, ’ve undoubtedly calculate slope straight line graph. learned “rise” “run” read graph formula. slope ratio: rise run.Slope lovely metaphor change, since everyone intuitive sense slope road hillside. learned apply intuition reading graphs slope line. ’ll exploit intuitive ability read landscape order introduce abstract mathematical ideas --earth setting. ’s effective pedagogical strategy.everything changes “slope.” instance, population country can change, can number new cases epidemic disease, temperature cup coffee, distance Earth spacecraft. major part learning calculus generalizing abstracting mathematical concept “slope” example becoming proficient mathematical procedures working change.","code":""},{"path":"fun-slopes.html","id":"continuous-change","chapter":"9 Slope function","heading":"9.2 Continuous change","text":"people comfortable ideas daily changes temperature monthly changes credit-card debt quarterly changes unemployment rate annual changes height child. things easy record , say, spreadsheet. example, write, weather forecast next several days (southeastern Colorado mid-May) 1110Such data said discrete. day listed, time day. high temperature forecast, time high. “description” also discrete, one several words used summarize quality weather, opposed quantity rain.Calculus continuous change. instance, weather bureau provide web interface let enter date time nearest fraction second, giving way track change continuously. Many physical processes intrinsically continuous, instance motion (change position) spacecraft height tide stress tree function wind velocity.Finding language describe continuous change—famously, position moon planets orbit, speed ball rolling ramp—central emergence historians call “Age Enlightenment” “modern scientific method.” first complete presentation language published Isaac Newton based work 1660s. might guess, name language “calculus.”","code":""},{"path":"fun-slopes.html","id":"slope","chapter":"9 Slope function","heading":"9.3 Slope","text":"already know pretty much everything know straight-line function,Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Formula: \\(f(x) \\equiv x + b\\). parameters \\(\\) \\(b\\) “slope” “intercept” respectively. (precisely, \\(b\\) “y-intercept.” statistics modeling, ’s just “intercept.”)Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]\ny-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.\ny-intercept method exactly two-point method \\(x_0 = 0\\).Reading parameters graph: learned several ways equivalent. Maybe easiest read y-intercept graph. ’s \\(b\\). choose non-zero \\(x_1\\) read graph value \\(f(x_1)\\). slope simply \\[\\frac{f(x_1) - b}{x_0}\\]y-intercept method special case general method, two-point method, can use even y-intercept isn’t shown graph. Pick two specific values \\(x\\), ’ll call \\(x_0\\) \\(x_1\\). Evalate function input values compute rise run: \\[\\mbox{rise run} \\equiv \\frac{f(x_1) - f(x_0)}{x_1 - x_0}\\]\nrise run slope straight line.y-intercept method exactly two-point method \\(x_0 = 0\\).Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression. 1120Matching straight-line function data: might taught formally, basic process easy imitate. process called line fitting , statistics fields, linear regression. 1120","code":""},{"path":"fun-slopes.html","id":"the-fitted-line","chapter":"9 Slope function","heading":"9.4 The fitted line","text":"illustrate line fitting, let’s return cooling mug water. Figure 9.1 shows data along dozen candidate straight line functions, one drawn color.\nFigure 9.1: candidate straight-line function models plotted top cooling water data. one(s) pick good matches data?\nstraight-line models much better match data others. blue-shaded functions pretty good fits, least consider limitations matching data curved pattern straight line. green-colored functions maybe OK good blue, purple-shaded functions just horrible.Now know reasonable straight-line model looks like, find pretty easy draw one data graphics even remotely show straight-line pattern.Step 1: Draw reasonable straight-line data points.Step 2: Find parameters correspond line drew.","code":""},{"path":"fun-slopes.html","id":"average-rate-of-change","chapter":"9 Slope function","heading":"9.5 Average rate of change","text":"Since slope standard way representing relationship change, often use way summarizing function. illustrate, consider exponential model constructed match cooling-water data: 1130\nFigure 9.2: exponential function previously matched cooling-water data. slope straight line connecting two points function graph average rate change interval.\ninterval \\([t_0, t_1]\\) rate water cools higher first lower end. average rate change single number summarizes whole interval.except straight-line models, average rate change depends interval chosen.working extensively change output value function input value changes.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.change output value function \\(f()\\) input changes \\(x = \\) \\(x = b\\) \\[f(x=b) - f(x=)\\] Notice talk change \\(x=\\) \\(x=b\\) subtract \\(f(x=)\\) \\(f(x=b)\\). change sometimes called rise value function. Rise always compares (subtraction) two output values corresponding two specific input values. Remember \\(\\) \\(b\\) stand specific numbers.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.Corresponding idea change output \\(f(x=b) - f(x=)\\) change input value function \\(b - \\). often called run value input.point graph function Cartesian coordinates \\((, f(x=))\\). example, graph function \\(f()\\) shown Graph includes points \\((1.0, 4.0)\\), \\((3.5, 3.0)\\). second coordinate output value provide first coordinate input value. nature \\(f()\\) function (defined graph) \\(f(x=1) \\equiv 4\\) \\(f(x=3.5) \\equiv 3\\).Question True false: Graph , rise b positive.    TRUE ︎✘ \\(f(x=) > f(x=b)\\), rise \\(f(x=b) - f(x=)\\) negative.        FALSE Right-oh! Question B True false: Graph , run \\(x=\\) \\(x=b\\) positive.    TRUE Right!        FALSE ︎✘ run relative positions \\(x=\\) \\(x=b\\) x-axis. Since \\(< b\\), run \\(x=\\) \\(x=b\\) positive. Question C True false: Graph II, run b positive.    TRUE Right-oh!        FALSE ︎✘ run relative positions b x-axis. Since left b, run b positive. Question D True false: Graph II, rise b positive.    TRUE ︎✘ Remember, rise \\(x=\\) \\(x=b\\) \\(f(x=b) - f(x=)\\)        FALSE Good. Question E True false: Graph II, run b c positive.    TRUE ︎✘ run \\(x=b\\) \\(x=c\\) \\(c - b\\). Since \\(b>c\\) b c negative.        FALSE Good. Question F True false: Graph II, rise b c positive.    TRUE Right-oh!        FALSE ︎✘ rise \\(x=b\\) \\(x=c\\) \\(f(x = c) - f(x = b)\\). Since \\(f(x=c) > f(x=b)\\), rise positive. Question G interval [2, 6] value run? (answer independent particular graph/function.)    4 Correct. run always second number interval minus first number. ’s \\(6 - 2\\) .        -4 ︎✘ got backwards! second number interval, 6, numerically right 2, run positive. Question H run interval [6, 2]? (, answer independent particular graph/function.)    4 ︎✘ Sorry. run \\(x=6\\) \\(x=2\\) \\(2 - 6\\) \\(-4\\).        -4 Correct. run \\(2 - 6\\), second number interval minus first number. graph Figure 9.2, compute average rate change interval \\(10 \\leq t \\leq 200\\). compare average rate change interval \\(10 \\leq t \\leq 125\\)?Open R sandbox. can use function definitions help calculations.Using R, compute average rate change function given interval. Choose closest answer problem.Question \\(f(x) \\equiv 2 e^{x+1}\\) [-2, 2]    -2.99 ︎✘        1.54 ︎✘        2.72 ︎✘        4.68 ︎✘        9.85 Good.        11.32 ︎✘ Question B \\(g(x) \\equiv 3 e^{-x}\\) [-1, 1.5]    -2.99 Correct.        1.54 ︎✘        2.72 ︎✘        4.68 ︎✘        9.85 ︎✘        11.32 ︎✘ Question C \\(h(x) \\equiv x e^x\\) [0, 1]    -3 ︎✘        1.54 ︎✘        2.72 Right!        4.68 ︎✘        9.85 ︎✘        11.32 ︎✘ ’s much less work use R function c() define interval, R function diff() calculate differences. next sandbox contains example asking compute average rate change \\(f(x) \\equiv e^x\\) interval [0, 4]. need lines 1, 3, 5. lines show intermediate results help understand diff() .Question D True false: average rate change \\(f(x) \\equiv e^{x^2}\\) [0.0, 0.1] 0.1005017    TRUE Right!        FALSE ︎✘ Question E True false: average rate change \\(f(x) \\equiv \\log(x)\\) [2, 3] 0.5062353.\n(Hint: Change code interval variable goes 2 3 f becomes function \\(f(x) \\equiv \\log(x)\\))    TRUE ︎✘        FALSE Right-oh! Question F True false: average rate change \\(f(x) \\equiv \\sin(x)\\) [0.0, 0.5] 0.9588511    TRUE Right!        FALSE ︎✘ Consider sinusoid function, graphed .Question average rate change interval \\(0 < x < \\frac{1}{2}\\)? (Choose closest value.)    0 ︎✘ true, function output need two endpoints interval.        0.5 ︎✘ forget divide rise run?        1 Right-oh! Right. interval run 1/2. rise interval 0 1/2, rise 1/2. Question B average rate change interval \\(0 < x < 6.25\\)? (Choose closest value.)    -0.5 ︎✘        0 Good. Right. function output zero endpoints interval, rise zero. Hence, run zero.        0.5 ︎✘ Question C average rate change interval \\(0 < x < 10\\)? (Choose closest value.)    -0.05 Right-oh! Right. rise -0.5 run 10.        -0.5 ︎✘ “rise” interval, ’s average rate change. ’ll need divide rise another quantity get average rate change.        0 ︎✘        0.5 ︎✘ rise \\(f(10) - f(0) pprox -0.5 - 0 = -0.5\\). ’ve got sign wrong. following, compute average rate change function given interval.Question average rate change \\(f(x) \\equiv x + 5\\) [3, 5]     -2 ︎✘ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. average rate change difference divided length interval.        -1 ︎✘ Remember, difference \\(x=3\\) 5 \\(f(5) - f(3)\\), way around. Similarly, length interval \\(x=3\\) 5 \\(5-3\\), \\(3-5\\).        1 Right! \\(f(x=5) = 10\\) \\(f(x=3) = 8\\), difference values 2. Since difference occurs interval length 2 (, #x=3$ 5), average rate change 2/2.        2 ︎✘ sure took rate change rather simply change? Question B average rate change \\(f(x) \\equiv 3 - 2 x\\) [-4, -2]     -4 ︎✘ total difference interval, rate change.        -2 Good. difference \\(x=-4\\) \\(-2\\) \\(f(-2) - f(-4) = (7) - (11) = -4\\). length interval \\((-2) - (-4) = 2\\). rate -4/2, just got.        0 ︎✘        1 ︎✘ \\(x\\) changes two units, \\(f(x)\\) changes 4. rate change 4/2 = -2.        2 ︎✘ Check +/- signs.        4 ︎✘ negative total difference interval, rate change. Also check +/- signs. Question C average rate change \\(f(x) \\equiv -3 x^2\\) [0, 4]     -24 ︎✘ Perhaps looking derivative \\(x=4\\) average rate change \\(x=0\\) 4.        -12 Right! difference \\(f()\\) interval \\(f(4) - f(2) = (-48) - 0 = -48\\). length interval \\(4-0\\), average rate change interval \\((-48)/4 = -12\\).        0 ︎✘ Perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 4.        1 ︎✘        2 ︎✘        12 ︎✘ Check signs arithmetic.        24 ︎✘ Question D average rate change \\(f(x) \\equiv x^3 - 2 x + 1\\) [0, 2]     -2 ︎✘ Either check +/- signs perhaps looking derivative \\(x=0\\) average rate change \\(x=0\\) 2.        1.5 ︎✘        2 Excellent! difference \\(f()\\) interval \\(f(2) - f(0) = 5 - 1 = 4\\). length interval \\(2 - 0\\) average rate change \\(4/2 = 2\\).        7 ︎✘        10 ︎✘ think looking derivative \\(x=2\\) rather average rate change 0 2. years ago, learned calculate slope straight-line function. graph, mark run corresponding rise, compute rise/run. formula definition, e.g. \\(f(x) \\equiv 3 - 4 x\\), simply read slope coefficient function input. , input named \\(x\\) coefficient formula \\(-4\\).question, ask estimate slope graph function. function exponential, straight line.fundamental idea calculus even function curved graph, zoom closely around given point, look like straight line. know calculate slope straight line.graph curved, slope different different points along graph. ’s single slope function. Still, can talk “slope point.”One way specify point function’s graph give horizontal coordinate: input function. ’re going give output function.Estimate slope exponential function \\(g(x) \\equiv e^x\\) several inputs, ’ll call \\(x_1\\), \\(x_2\\), \\(x_3\\) \\(x_4\\). won’t give numerical values \\(x_i\\) points, tell output function inputs. values \\(x\\) :\\(g(x_1) = 1\\)\\(g(x_2) = 5\\)\\(g(x_3) = 10\\)\\(g(x_4) = 0.1\\)code sandbox already contains R command plot mathematical exponential function domain \\(-3 \\leq x \\leq 3\\). ()-(d), modify command zoom domain around around appropriate value \\(x_i\\). calculate slope curve \\(x_i\\).Question Using answers slope points given ()-(d), choose best answer question: pattern slope \\(x\\) varies?slope value \\(x_i\\) \\(e^{x_i}\\). Excellent! property exponential function becomes important describing wide range phenomena, nuclear isotope decay population growth. slope value \\(x_i\\) \\(x_i\\). ︎✘ saying slope \\(x_3\\) \\(\\approx 2.30\\). got? slope value \\(x_i\\) \\(x_i^2\\). ︎✘ saying slope \\(x_3\\) \\(\\approx 5.30\\). got? slope value \\(x\\) \\(\\sqrt{x}.\\) ︎✘ saying slope \\(x_i\\) \\(\\approx 1.52\\). got? Now ’ve found answer seen specify domain slice plot, ’s technique can make work bit easier. Add command plots \\(e^x\\) domain \\(-3 \\leq x \\leq 3\\)“Slope” natural metaphor thinking function graph. general way describe concept rate change output respect input. change output one end interval \\(f(x_1) - f(x_0)\\), change input \\(x_1 - x_0\\). input time (hours), output position car (miles), rate change miles-per-hour: car’s velocity.straight-line function—think car driving constant speed highway—doesn’t matter choose \\(x_1\\) \\(x_0\\) (long identical). functions, choice matter.Imagine graph position car along road Figure @ref{fig:stop--go}. course hour, car travelled 25 miles. words, average speed 25 miles/hour: slope red line segment. Given traffic, sometimes car stopped (time C), sometimes crawling (time D) sometimes much faster average (time B).\nFigure 9.3: position imaginary car time (black curve). average rate change various intervals slope straight-line segment connecting start end black curve interval.\ninterval B C, car travelling relatively fast. slope brown segment connecting position times B C average rate change times B C. ’s easy see average rate change B C larger overall average \\(t=0\\) \\(t=1\\). Calculating slope matter evaluating position endpoints dividing length interval. 1140What average rate change car’s position interval \\(t_B = 0.40\\) \\(t_C=0.54\\)?length interval \\(t_C - t_B = 0.54-0.40=0.14\\).Evaluating function gives \\(x(t_C) = 18\\) \\(x(t_B) = 12.6\\).Rise \\(x(t_C) - x(t_B) = 18 - 12.6 = 5.4\\).Run \\(t_C - t_B = 0.54-0.40=0.14\\).average rate change interval $5.4/0.14 = 38.6 $ miles/hour.Figure 9.4 shows simplified model amount usable wood can harvested typical tree managed forest Ponderosa Pine. (can see actual forestry research models .) 1145\nFigure 9.4: model, somewhat realistic, amount wood can harvested Ponderosa Pine function years since planting harvest.\nwriting business plan proposed pine forest. Among things, forecast revenue generated salable product.say “time money.” Every year wait harvest another year don’t money. hand, every year wait means wood end. decide harvest?tree continues grow year 50, seems reached equilibrium: perhaps growth goes zero, rot balances growth . ’s point waiting year 50.year 25, tree growing fast ever . ’ll get 600 board-feet lumber. harvest year 25? ! tree growing fast means lot wood year 26, 27, . time harvest growth getting smaller, ’s worth waiting extra year.quantity interest average rate growth seedling harvest. Harvesting year 25 give total change 600 board feet 25 years, giving average rate change \\(600 \\div 25 = 24 \\mbox{board-feet-per-year}\\). wait year 35, ’ll 900 board feet, giving average rate change \\(900 \\div 35 = 25.7 \\mbox{board-feet-per-year}\\).’s easy construct diagram shows whether year 35 best harvest. Recall fundamental model change straight-line function. ’re going model model tree growth straight line function. Like realistic model, straight-line model start zero wood time planting. faithful realistic model, ’ll insist straight-line intersect touch realistic model point future.Figure 9.5 reiterates realistic model tree adds several straight-line models give zero harvestable wood planting time. green lines captures scenario tree harvested indicated time: \\(t_1\\), \\(t_2\\), . perspective representing rate growth per year planting harvest, straight-line green models need replicate actual growth curve. complexities curve relevant growth rate, can simplified straight-line model connecting output planting time output harvest time. contrast, red curves suitable models don’t match situation harvest time; don’t touch curve anywhere planting!\nFigure 9.5: Modeling tree-growth model straight lines connecting planting time various harvest times. slope line average rate growth planting time.\nmaximize average lumber volume per year, choose harvest time produces steepest possible green segment. Figure 9.5 can see ’s possible little better harvesting year 35 (shown \\(t_3\\) diagram).’s often best create function shows explicitly one trying optimize. ’s ave_growth(year) \\(\\equiv\\) volume(year)/year plotted Figure 9.6.\nFigure 9.6: Graph average-growth function ave_growth(year), constructed dividing volume(year) year.\ngraph ave_growth(year) makes clear maximum average growth planting harvest occur year 32.exercise, given series intervals get smaller smaller. job calculate average rate change function \\(f(x) \\equiv x^2\\) intervals. width intervals approach zero, average rates change become better approximations instantaneous rates change. use results calculate make informed estimate instantaneous rate change.. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=3)\\)\n- [3, 3.1]\n- [3, 3.01]\n- [3, 3.001]B. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=5)\\)\n- [4.9, 5]\n- [4.99, 5]\n- [4.999, 5]C. Use three intervals estimate instantaneous rate change \\(\\partial_x f(x=-2)\\)\n- [-2, -1.9]\n- [-2, -1.99]\n- [-2, -1.999]","code":"\nwater <- makeFun(60.7*exp(-0.019*t) + 25.93 ~ t)\nf <- makeFun(2*exp(x+1) ~ x)\ng <- makeFun(3*exp(-x) ~ x)\nh <- makeFun(x*exp(x) ~ x)\ninterval <- c(0, 4)  # creates the interval\ndiff(interval)       # calculate the run\nf <- makeFun(exp(x) ~ x)   #  create the function\nf(interval)     # evaluate  function at the endpoints of  the interval\ndiff(f(interval)) / diff(interval)  # complete answer\nslice_plot(exp(x) ~ x, domain(x = c(-3, 3)))%>% plotly::ggplotly()## Warning: geom_abline(): Ignoring `mapping` because `slope` and/or `intercept`\n## were provided.interval <- c(__start__ , __end__ )\nf <- makeFun(x^2 ~ x)\ndiff(f(interval)) / diff(interval)"},{"path":"fun-slopes.html","id":"instantaneous-rate-of-change","chapter":"9 Slope function","heading":"9.6 Instantaneous rate of change","text":"average rate change slope line segment connecting two points graph function, points \\(\\left(\\strut t_0, f(t_0)\\right)\\) \\(\\left(\\strut t_1, f(t_1)\\right)\\). reflects point--point changes value function interval \\(t_0\\) \\(t_1\\) function’s domain.turns helpful consider rate change function individual point \\(t_0\\) domain, rather interval two points. rate change point called instantaneous rate change.\nBlock 2, ’ll see good way define instantaneous rate change \\(t_0\\) average rate change interval \\(t_0 \\leq t \\leq t_0 + h\\) proviso interval length \\(h\\) goes closely can zero. Visually, line ’s tangent function’s graph input value \\(t_0\\) Figure 9.7. 1150\nFigure 9.7: line tangent curve single point. slope line instantaneous rate change.\n’s convenient able find slope tangent line using just definition \\(f(t)\\), rather draw graph eyeball tangent. now, let’s approximate slope tangent line average rate change small run \\(t_0\\) \\(t_0 + 0.1\\):\n\\[\\text{slope }\\ f(t) \\ \\text{}\\ t_0 \\approx\\frac{f(t_0 + 0.1) - f(t_0)}{0.1} = \\frac{\\text{amount rise}}{\\text{length run}}\\]\n\\(\\approx\\) symbol means “approximately.” now, want put question “approximately” means. modeling, whether 0.1 gives good enough approximation depend function \\(f()\\) context slope needed. instance, drawing Figure 9.7 needed find tangent line. Using 0.1 entirely satisfactory setting might settings.notation “slope \\(f(t)\\) \\(t=t_0\\)” long-winded awkward. looking “value \\(f(t)\\) \\(t_0\\) hand much concise notation: \\(f(t_0)\\). doesn’t work write”slope \\(f(t_0)\\)\" \\(f(t_0)\\) quantity function. Instead, let’s make concise notation “slope \\(f(t)\\).” Following tradition, ’ll write \\({\\cal D}f(t)\\). name “slope \\(f(t)\\)” function \\({\\cal D}f()\\): two-letter name. want say, “(approximate) slope tangent line \\(f(t)\\) \\(t_0\\), can write simply: \\[{\\cal D}f(t_0)\\]\nmeaning, evaluate ”slope function f()\" \\(t_0\\).formalize , ’ll define slope function f() \n\\[{\\cal D}f(t) \\equiv \\frac{f(t + 0.1) - f(t)}{0.1}\\]\nLet’s look slope functions correspond pattern-book functions: \\(e^x\\), \\(\\sin(x)\\), \\(x^{-1}\\) \\(\\ln(x)\\). can define easily enough R:\nFigure 9.8: Comparing pattern-book function (blue) ’s slope function (red)\nweb connections pattern-book functions slopes.Question 1. pattern-book function slope function simply input-shifted version ? (small enough \\(h\\).)exponential ︎✘ sinusoid Right-oh! logarithm ︎✘ power-law \\(x^{-1}\\) ︎✘ Question B 2. pattern-book function slope function identical ? (small enough \\(h\\).)exponential Right! sinusoid ︎✘ logarithm ︎✘ power-law \\(x^{-1}\\) ︎✘ Question C 3. pattern-book function slope function another pattern-book function? (Hint: function also listed among choices.)exponential ︎✘ sinusoid ︎✘ logarithm Correct. power-law \\(x^{-1}\\) ︎✘ Sometimes bit algebra can help us see ’s going instantaneous rate change. Consider exponential function \\(e^x\\).Rather writing slope function definition 0.1, let’s substitute symbol \\(h\\). gives \\[{\\cal D}\\exp(x) = \\frac{e^{x+h} - e^x}{h}\\]\nExtracting common term \\(e^x\\) numerator, arrive \\[{\\cal D}\\exp(x) = e^x \\left[\\frac{e^h - 1}{h}\\right]\\]\nSince \\(h\\) number, \\([e^h - 1]/h\\) number, function \\(x\\). , given value \\(h\\), slope function exponential proportional exponential .Question Using sandbox, find value \\([e^h - 1]/h\\) \\(h=0.1\\). ?    1.271828 ︎✘        1.694343 ︎✘        1.718282 Good.        e = 2.718282 ︎✘ instantaneous rate change involves making \\(h\\) small, quite zero. make \\(h\\) exactly zero, result ambiguous.Question B Using sandbox, compute \\([e^0 - 1]/0\\). ’s result?Inf ︎✘ result numerator positive, however small. numerator denominator zero. NaN Right-oh! Meaning, ‘number.’ Bogus ︎✘ value can’t used arithmetic. Inf NaN can legitimately used arithmetic. error message result. ︎✘ point Inf NaN avoid creating error conditions still signalling result ambiguous. Question C Using sandbox, compute \\([e^h - 1]/h\\). Make \\(h\\) small can, instance \\(0.00001\\) \\(0.00000001\\). ’s result?1 Right! Amazingly, instantaneous rate change \\(e^x\\) exactly \\(e^x\\). varies \\(h\\), always around 1.5 \\(h\\) small enough ︎✘ ’s particular result. ︎✘ plot function slope function graphics frame? 1160Excellent question! general, illegitimate plot function ’s slope function vertical axis. reason units two functions different. instance, output function position(t) might units “miles,” output slope function position (, \\({\\cal D}\\)position(t) units miles-per-hour.) , general rule, never plot function corresponding slope function scale.exception pattern-book functions. always take number input produce number output. slope function pattern-book function also produces number output.exception good excuse indulging bad practice. Perhaps ’ll forgive point wanted emphasize point demonstrating ., ’m writing slope function \\(f(t)\\) \\({\\cal D}f(t)\\). works chapter, deals functions one variable. general modeling functions one variable, instance \\(g(x, t)\\). work slope functions one variable, need extend notation little. place small subscript \\({\\cal D}\\) indicate variable changing. Thus, two slope functions \\(g(x,t)\\):\n\\[\\require{color}{\\cal D}_{\\color{blue}x} g(x, t) \\equiv \\frac{g({\\color{blue}x + 0.1}, t) - g(x, t)}{0.1}\\\\\n\\text{}\\\\\n{\\cal D}_{\\color{red}t} g(x, t) \\equiv \\frac{g(x, {\\color{red}t + 0.1}) - g(x, t)}{0.1}\\]\ninput referred subscript following \\({\\cal D}\\) called -respect-input.previous section looked optimal time harvest tree average rate growth usable lumber tree’s life maximized. Using model tree growth ponderosa pine found best harvest time 32 years.Let’s return modeling phase wood-harvest problem new perspective. real objective tree farming maximize economic value wood. depends market price wood may changing time. market-savvy modeler want exploit information possibility rising falling prices selecting best harvest time. Companies often hire economists forecast market trends, requires deep knowledge trends supply demand scope can cover book.However, one economic principle can incorporate model without detailed, industry specific expertise. economic principle opportunity cost.Opportunity cost takes account valuing asset possible uses asset. example, lumber companies constantly invest planting new trees future harvest. order , borrow money pay interest borrowed money. need borrow existing assets tied form wood. opportunity cost harvesting tree interest loan company needs take order invest future.year 30 32, hardly change value average-rate--change function. ’s increasing little, really worthwhile wait? One argument year 30 already valuable resource: wood money bank. money bank, invest earn money time get new seedling ground start growth. ’re two things . Efficient!know best year harvest point view, want calculate effective “interest rate” present amount wood earn form new wood. interest rate ratio instantaneous rate growth new wood divided amount existing wood. Figure 9.9 shows function.\nFigure 9.9: instantaneous investment return tree instantaneous rate change wood volume divided wood volume . falls age tree harvestable wood volume increases.\nEarly tree’s life, growth high compared volume tree. ’s tree small. years pass, tree gets bigger. Even though rate growth increases year 23, accumulated volume increases even faster, fall rate return.best time harvest annual “interest rate” paid growing tree falls level next best available investment. Suppose investment pay 10% per year. harvest tree function values falls 10%. happens year 24. next best investment paid 5% (blue horizontal line), harvest made year 29. money borrowed 2%, worthwhile harvest tree still later.","code":"\nDexp <- makeFun((exp(t+0.1) - exp(t))/0.1 ~ t)\nDsin <- makeFun((sin(t+0.1) - sin(t))/0.1 ~ t)\nDxm1 <- makeFun(((1/(t+0.1)) - (1/t))/0.1 ~ t)\nDlog <- makeFun((log(t+0.1) - log(t))/0.1 ~ t)"},{"path":"function-inverses-and-solving.html","id":"function-inverses-and-solving","chapter":"10 Function inverses and “solving”","heading":"10 Function inverses and “solving”","text":"[Fun-inverse] Understand operation “solving” function able translate “zero-finding.”much spirit naming common tasks, process turning output function corresponding input using computer program called zero finding. often case, computer programming often involves reformatting things fit standard format. , standard format find input corresponds output zero. reality, snowplow problem, might care output zero. (facilities manager charge zero miles road likely job pretty soon!) 1200But output zero just format. can easily re-write function create new one output want turns zero. instance, snowplow problem, instead applying zero-finding function \\(g(x) = 168 x\\), construct another, related function \\(h(x) \\equiv g(x) - 400\\). Finding zero \\(h()\\) gives us directly input \\(g()\\) corresponding output 400.","code":""},{"path":"function-inverses-and-solving.html","id":"function-inverses","chapter":"10 Function inverses and “solving”","heading":"10.1 Function inverses","text":"[Fun-3a2] Determine whether function inverse. Know exponential logarithmic functions inverses inverse power-law function another power-law function.may sound like familiar word problem high-school algebra course:facilities manager small town. town contains\napproximately 400 miles road must plowed following significant snowfall. many plows must used order complete job one day plows can travel approximately 7 miles per hour engaged? — SourceThe task answering question often called solving word problem.don’t need calculus solve problem, insofar format familiar , might help depict addressed modeling task use model created guide mathematical work getting numerical answer problem.Modeling Phase: objective create function represents snow plowing let us answer question much plowing activity needed. ’s function takes input \\(x\\) number plows provides output number miles can serviced day.\n\\[\\mbox{miles_plowed}(x) \\equiv 7 \\times 24 \\times x\\]\nreality, “miles plowed” depends amount snow, safe speed limit plows, number rest breaks needed drivers, far snowplow terminus road system, many cars parked road available number tow trucks, day week time day. (Remember, might traffic road. Plowing rush hour bound small! slow night!) seems textbook “word problems” never mention issues, written world plowing snow exactly simple arithmetic.Likely, ’re going use modeling cycle end genuinely useful model. Still, start somewhere, let’s start \\(7 \\times 24 \\times x\\).can use function solve problem: many plows needed get 400-miles road serviced 1 day? ’s matter choosing suitable method applying function guide us answer. 1210One simple method, sometimes called guess check propose answers see happens. experts snow plowing, know can’t negative fractional plows, guesses \\(x\\) integers. Let’s systematically:really don’t need scratch work crowding table, let’s streamline , keeping essentials:domain miles_plowed() function \\(x = 0, 1, 2, 3, \\ldots\\), table covers bit domain.Miles_plowed() might genius function, using keep mind don’t actually know input. know something form output: 400 miles. mathematical operation solving consists looking know output column table, reading corresponding input answer. Since 400 doesn’t appear output column, ’ll look interval includes 400. course, ’s interval 336 504. answer something bigger \\(x=2\\) doesn’t need larger \\(x=3\\). ’ve facilities management business many years, know choose answer \\(x=3\\).graph function, can easy calculate input given output. Just reverse finger action, looking output vertical axis, tracing horizontally function graph, reading result input axis.Now let’s write problem using math notation rather table. ’re looking value \\(x\\) \\[\\mbox{miles_plowed}(x) = 400\\] equation opposed function definition write \\(\\equiv\\) rather \\(=\\). point writing equations often signal us task “solve \\(x\\).”algebraic solution relies replacing miles_plowed(\\(x\\)) function’s formula re-arranging numbers possibly symbols equation form \\(x = \\ldots\\). , ’s easy:\\[7 \\times 24 \\times x = 400\\ \\ \\implies\\ \\ x = 400/(7\\times 24)\\]arithmetic find \\(x = 2.381\\). Apply common sense translate “three plows.”industrious facilities manager might go . “Today 400 miles road. next year , although don’t yet know exact number. ’m math work, ’ll write memo next year, know much road , can just arithmetic.” good idea, although mathematician might prefer word “function” “memo [guide] arithmetic.” 1220You likely learned set solve memo-writing function. key replace 400 symbol standing number miles road. ’ll use \\(M\\). re-arrangement \\(M\\) place 400.\\[168 x = M\\ \\ \\implies\\ \\ x = M/168\\]remains give informative name place \\(x\\) write proper function: \\(n_{plows}(M) \\equiv M/168\\).process starting function like \\(\\mbox{miles_plowed(x)}\\) transforming function convenient format task hand \\(n_{plows}(M)\\) called inverting function.High-school algebra emphasizes techniques inverting functions moving symbols around. great can done, ’s often impossible real science engineering problems. cases use powerful, general-purpose method, , guess check.Another common strategy inverting functions beyond reach algebraically rely specialist develop inverse function, give name, write formula mathematical notation , sometimes usefully, write computer program implements inverse function’s algorithm. strategy, ’s needed invert function know name formula function’s inverse. ’s table names formulas, likely familiar .can course read table either left right right left. instance, inverse \\(\\ln(x)\\) \\(e^x\\).know, function \\(g(x)\\), set valid values \\(x\\) called domain function. set possible outputs function called range function. inverse function \\(g()\\) domain range \\(g()\\) range domain \\(g()\\).Sometimes notation \\(g^{-1}(x)\\) used \"inverse function \\(g()\\). potentially confusing, since \\(g^{-1}(x)\\) might reasonable interpretted \\(1/g(x)\\) , general, two things equal.Straight-line (non-zero slope), exponential (\\(e^{kt}\\) \\(k\\neq 0\\)), logarithm functions aways inverse functions. power-law sinusoid functions, can several (many) different inverse functions. ’ll get need . 1230There’s easy graphical test whether unique inverse function . Draw graph, see horizontal line touches graph function one place. , unique inverse function.graphs functions inverses related flip around line identity, shown green following graph.black curve graph \\(e^x\\).Question red curve graph function? (Hint: pass vertical line test?)    Yes Correct.        ︎✘ red curve vertical asymptote \\(x=0\\), since never reaches asymptote, passes vertical line test. Question B functions graphed red?\\(1/x\\) ︎✘ \\(\\log(x)\\) Excellent! \\(\\sqrt{x}\\) ︎✘ \\(e^{-x}\\) ︎✘ Sorry, reflection black curve around vertical line \\(x=0\\) \\(-e^{x}\\) ︎✘ . reflection black curve around horizontal line output \\(f(x)=0\\) \n","code":""},{"path":"fun-assembling.html","id":"fun-assembling","chapter":"11 Assembling functions","heading":"11 Assembling functions","text":"need new function purpose, practically always build existing functions. instance, parameterized function like \\[\\sin\\left(\\frac{2 \\pi}{P}x\\right) + C\\] built assempling together straight-line input scaling, pattern-book \\(\\sin()\\) function, another straight-line function scaling output \\(\\sin()\\). 1300In chapter, ’ll introduce three general frameworks combining functions: linear combination, composition, multiplication.","code":""},{"path":"fun-assembling.html","id":"linear-combination","chapter":"11 Assembling functions","heading":"11.1 Linear combination","text":"One widely used sorts combination called linear combination. mathematics linear combination , happens, core use math applications, whether constructing Google-like search engine analyzing medical data see treatment positive effect.’ve worked many years one kind linear combination: polynomials. doubt ’ve seen functions13 like \\[f(x) \\equiv 3 x^2 + 5 x - 2\\]three modeling functions polynomial. case, polynomials generally, power-law functions: \\(g_0(x) \\equiv 1\\), \\(g_1(x) \\equiv x\\), \\(g_2(x) \\equiv x^2\\). functions defined, can write polynomial \\(f(x)\\) \\[f(x) \\equiv 3 g_2(x) + 5 g_1(x) - 2 g_0(x)\\]\nfunctions scaled quantity—3, 5, -2 example—scaled functions added . ’s linear combination; scale add. (Later, ’ll see scalars generally come units. might well metric polynomial equivalent traditional-unit polynomial. Just wait.)Notice said \\(g_0(x) \\equiv 1\\) power-law function. ? Since \\(x^0=1\\) \\(x\\), might equally well written \\(g_0(x) \\equiv x^0\\) visibly power-law function.’re just trying emphasize polynomial linear combination power-law functions, particular power-law functions whole-number, positive exponents. individual functions, say, \\(x^2\\) \\(x^5\\) called monomials. polynomial combination monomials, just like chemical polymer combination monomers.places seen linear combinations:parameterized sinusoid \\[\\sin\\left(\\frac{2 \\pi}{P}t\\right) + C\\] linear combination functions \\(h_1(t) \\equiv \\sin\\left(\\frac{2 \\pi}{P} t\\right)\\) \\(g_0(t) \\equiv 1\\). scalars \\(\\) \\(C\\).parameterized exponential \\[e^{kt} + C\\] functions combined \\(e^{kt}\\) \\(g_0(t) \\equiv 1\\). scalars , , \\(\\) \\(C\\).straight line function \\(x + b\\). functions combined \\(x\\) \\(1\\), scalars \\(\\) \\(b\\). 1310Note neither parameterized exponential parameterized sinusoid polynomial.reasons us introducing linear combinations .see linear combinations everywhere know look .highly refined mathematical theory linear combinations gives us powerful ways think well computer software can quickly find best scalars use match input-output data.concept linear combination generalizes simple idea calling “scaling output.” now , ’ll use linear-combination terminology avoid narrower idea “scaling output.”Many physical systems described linear combinations. instance, motion vibrating molecule helicopter flight building shaken earthquake described terms simple “modes” linearly combined make entire motion. Earth, timbre musical instrument set scalars linear combination pure tones.Many modeling tasks can put framework choosing appropriate set simple functions combine (letting computer) figure best scalars use combination.Even better, automatic, reliable, fast algorithm finding scalars set functions combined match data closely possible. modeler just select functions used, computer can find coefficients. (’ll explore mathematics methods linear combinations, usually called linear algebra, Block 5.)graph shows two gaussian functions, \\(g_1(t)\\) \\(g_2(t)\\)linear combination gaussian functions shown Graph ().Question linear combination \\(g_1(t)\\) \\(g_2(t)\\) shown Graph ()?0.5*g_1(t) + g_2(t) Correct. g_1(t) + 0.25*g_2(t) ︎✘ case, right bump one-quarter big left bump. g_1(t) + 2g_2(t) ︎✘ Since g_2(t) maximum value 20, 2g_2(t) reach value 40. isn’t ’s shown graph. Another linear combination gaussian functions shown Graph (B).Question B linear combination \\(g_1(t)\\) \\(g_2(t)\\) shown Graph (B)?\\(g_1(t) - 2\\, g_2(t)\\) Correct. \\(g_1(t) - g_2(t)\\) ︎✘ second (downward) gaussian hump bigger first (upward) gaussian hump. \\(0.5\\,g_1(t) - 0.5\\, g_2(t)\\) ︎✘ , first gaussian hump reach value 10 rather 20 seen Graph (B). \\(-g_1(t) - g_2(t)\\) ︎✘ first gaussian hump positive. graph shows function linear combination three x-shifted gaussian functions\n\\[a_1 \\dnorm(x-3.5) + a_2 \\dnorm(x-0.5) + a_3 \\dnorm(x-(-4))\\]Question Estimate scalars \\(a_1, a_2\\), \\(a_3\\) function drawn Plot (). (sure get order right!)\\(a_1 = 0.3, a_2 = 0.15, a_3=0.2\\) Good. \\(a_1 = 0.15, a_2 = 0.2, a_3=0.3\\) ︎✘ \\(a_1 = 0.2, a_2 = 0.3, a_3=0.15\\) ︎✘ \\(a_1 = 0.15, a_2 = 0.3, a_3=0.2\\) ︎✘ Plot (B) shows function linear combination four x-shifted sigmoid functions. multiplicative scalars either 1 \\(-1\\). Recall handy fiducial point sigmoid function input output 1/2.Question B fiducial points four sigmoids?\\(-8, -2, 3, 7\\) Excellent! \\(-6, -4, 0, 6\\) ︎✘ \\(-9, -8, 1, 5\\) ︎✘ \\(-2, 2, 4, 6\\) ︎✘ Question C scalar multipliers sigmoid, order leftmost rightmost?\\(1, -1, 1, -1\\) Right-oh! \\(1, -1, -1, 1\\) ︎✘ \\(-1, 1, 1, -1\\) ︎✘ \\(-1, 1, -1, 1\\) ︎✘ According data US National Health Nutrition Evaluation Survey, average height adult females 157 cm vs 167 adult males. standard deviations 17 cm 22 cm respectively. good model person--person variation females dnorm(height, mean = 157, sd = 17) similarly males.see overall distribution adult height, regardless sex, make linear combination distribution females males, giving scalar one-half (since population roughly 50-50 female/male).Open SANDBOX construct linear combination function overall distribution. Use scaffolding plot distributions individual sexes overall distribution.people erroneously think since mean height men larger women 10cm, can readily distinguish sexes based height. However, notice overall distribution (plotted black) show dip sexes: clear separation based height.thought experiment, let’s increase separation mean height actual value \\(167-157=10\\) cm something larger. can increase separation 5 cm, example, making men’s mean height 167+5.Question ’s smallest increase separation (cm) produces barely visible dip sexes overall height distribution?    5 ︎✘        10 ︎✘        15 ︎✘        20 ︎✘        25 ︎✘        30 Good. ","code":"female <- makeFun(dnorm(height, mean = 157, sd=17) ~ height)\nmale   <- makeFun(dnorm(height, mean = 167, sd=22) ~ height)\n\noverall <- makeFun( __your_linear_combination_here__)\n\nslice_plot(female(height) ~ height, domain(height=c(100,220)), color=\"orange3\",\n           label_x=.5, label_text=\"F\") %>%\n  slice_plot(male(height) ~ height, color=\"dodgerblue\", label_text=\"M\", label_x=.8) %>%\n  slice_plot(overall(height) ~ height, color=\"black\", size=2)"},{"path":"fun-assembling.html","id":"function-composition","chapter":"11 Assembling functions","heading":"11.2 Function composition","text":"compose two functions, \\(f(x)\\) \\(g(x)\\), means apply one functions output . “\\(f()\\) composed \\(g()\\)” means \\(f(g(x))\\). generally different “\\(g()\\) composed \\(f()\\)” means \\(g(f(x))\\).instance, suppose recorded outdoor temperature course day packaged function \\(\\mbox{AirTemp}(t)\\): temperature function time \\(t\\). digital thermometer uses degrees Celsius, want output units degrees Kelvin. conversion function \\[\\mbox{CtoK}(C) \\equiv C + 273.15\\]\nNotice CtoK() takes temperature input. , can write “Kelvin function time” \\[\\mbox{CtoK}\\left(\\mbox{AirTemp}(t)\\right)\\]\n’s important distinguish time \\(\\rightarrow\\) Kelvin function something looks much utterly different: \\(\\mbox{AirTemp}\\left(\\mbox{CtoK}(t)\\right)\\). matter arithmetic, can put time input CtoK(). completely different meaning terms real world. time measured hours, CtoK\\((t)\\) looking temperature eleven half days ago, instead temperature time \\(t\\).used \\(C\\) name input CtoK(). Shouldn’t something like \\(x\\) \\(y\\)?Keep mind names inputs function can anything whatsoever, long used consistently function algorithm. wanted, call first input function \\(x\\), matter \\(y\\) giraffe.point notation \\(\\mbox{CtoK}(C) \\equiv C + 273.15\\) make utterly clear \\(C\\) name ’re using input listing parentheses follow function name CtoK(). , unlike high-school notation, allows us great freedom choice names. 1320We can use freedom make easier communicate people. (remember, one people “future .”) used name \\(C\\) reinforce message CtoK() converts celsius kelvin, vice versa.simple, approximate formula length day (hours) function latitude \\(L\\) declination angle \\(\\delta\\) sun.\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\ndeclination angle latitude point earth’s surface pierced imagined line connecting centers earth sun. summer solstice, \\(23.44^\\circ\\), longest day year.computer implement must look different, since \\(L\\) \\(\\delta\\) typically provided degrees tan() trigonometric functions computer languages expect units radians. conversion easy: \\(\\text{deg2rad}(d) \\equiv \\frac{\\pi}{180} d\\). conversion way \\(\\text{rad2deg}(r) \\equiv \\frac{180}{\\pi} r\\).order get day-length formula work computer, compose \\(\\tan()\\) function deg2rad(). output acos() radians, convert back degrees. Like :Question Using R sandbox, calculate length day latitude \\(39^\\circ\\) longest day year, declination sun \\(23.44^\\circ\\). long ?13.9 hours ︎✘ 14.7 hours Right! 14.9 hours ︎✘ 15.1 hours ︎✘ \nNow make plot day length function day year. course, day_length(L, d) take day year account. ’s missing know declination sun function calendar day.’ll represent calendar day number \\(n\\) runs 0 start January 1st 365 end December 31. Given convention, declination sun isComposing day_length() delta_sun() (d argument ) get function day year n:Question tmp-4: long day April Fools (\\(n=90\\)) Latitude 39N? (Use sandbox calculation.)12.38 hours (+) []12.38 hours (+) []12.59 hours []12.59 hours []12.64 hours []12.64 hours []12.74 hours []\n12.74 hours []Income inequality matter perennial political debate. US, people support Social Security, income re-distribution programming dating back almost century. re-distribution policies controversial. believe essential healthy society, others “cure” worse “disease.” 1330Whatever one’s views, ’s helpful way quantify inequality. many ways might done. mathematically sophisticated one called Gini coefficient.Imagine society divided statistically income groups, poorest richest. income groups consists fraction population , aggregate, fraction national income. Poor people tend many number small fraction income. Wealthy people number, large fraction income. table shows data US households 2009:14The cumulative income shows fraction income people group poorer. Similarly cumulative population.function relates cumulative population cumulative income called “Lorenz” function. data graphed Figure 11.1 function fitted data.\nFigure 11.1: Data household incomes US 2009.\nLorenz curves necessarily concave , amounts saying curve gets steeper steeper population percentile increases. (? point, poorer people left richer right.) must connect (0,0) (1, 1).Calling income percentile \\(L\\) function population percentile \\(p\\), Lorenz function \\(L(p)\\) satisfies requirements previous paragraph.\nfunctions meet requirements:\\(L_b(p) \\equiv p^b\\) \\(1 \\leq b\\).\\(L_q(p) \\equiv 1 - (1-p)^q\\) \\(0 < q \\leq 1\\)Notice functions just one parameter. seems implausible workings complex society can summarized just one number. can use curve-polishing techniques introduced Section 14 find “best” parameter value match data. can see “best” good enough. 1340\nFigure 11.2: Lorenz curves \\(L_b(p)\\) (blue) \\(L_q(p)\\) (red) fitted household income data.\nNeither form \\(L_b(p)\\) \\(L_q(p)\\) gives compelling description data. .can provide parameters constructing complicated Lorenz functions. two ways build new Lorenz function existing one:product two Lorenz functions, \\(L_1(p) L_2(p)\\) Lorenz function.linear combination two Lorenz functions, \\(L_1(p) + (1-) L_2(p)\\), long scalars add 1, Lorenz function. instance, white curve Figure 11.2 linear combination 0.45 times red curve plus 0.55 times blue curve.Question: composition two Lorenz functions Lorenz function?get started, figure whether \\(L_1(L_2(0)) = 0\\) \\(L_1(L_2(1)) = 1\\). answer yes, need find way compute concavity Lorenz function determine composition always concave . ’ll need additional tools .","code":"\nday_length <- makeFun(\n  (2/15)*rad2deg(\n    acos(\n      -tan(deg2rad(L))*tan(deg2rad(d))\n    )\n  ) ~ L+d)\ndelta_sun <- makeFun(-23.44*cos((2*pi/365)*(n+10) ) ~ n)\nslice_plot(\n  day_length(39, delta_sun(n)) ~ n, \n  domain(n=c(0,365))\n  )\nLb <- fitModel(income ~ pop^b, data = Income, start=list(b=1.5))\nLq <- fitModel(income ~ 1 - (1-pop)^q, data = Income, start=list(q=0.5))"},{"path":"fun-assembling.html","id":"modeling-polynomial-1","chapter":"11 Assembling functions","heading":"11.3 The modeling polynomial","text":"Sometimes, order model simple relationship need build function whose graph simple, curving shape. 1350A simple surprisingly powerful approach use low-order polynomial. order polynomial highest exponent input. example, straight-line function, \\(g_1(x) \\equiv a_0 + a_1 x\\), first-order polynomial. quadratic, \\(g_2(x) \\equiv b_0 + b_1 x + b_2 x^2\\) second-order polynomial.Many modelers tempted extend technique third-, fourth-, fifth-order even higher. rarely worthwhile since second-, fourth-, sixth- higher-even-order monomials basically U-shape, like referee signalling touch-. Similarly, first-, third-, fifth- higher odd-order monomial similar  shapes.ofttimes better approach compose polynomial curved monotonic function, logarithm.Notice writing low-order polynomials like \\[g_1(x) \\equiv a_0 + a_1 x\\] \\[g_2(x) \\equiv b_0 + b_1 x + b_2 x^2\\] using specific naming convention scalars linear combinations. different function, use different start---alphabet name, like \\(\\) \\(b\\). name used scalars function, subscript used make distinction different functions combined. Thus, \\(a_1\\) \\(x\\) function \\(g_1()\\) \\(b_2\\) \\(x^2\\) function \\(g_2()\\).high-school mathematics, polynomials often written without subscript, instance \\(x^2 + b x + c\\). can fine working one polynomial time, modeling often need compare multiple, related polynomials.","code":""},{"path":"fun-assembling.html","id":"function-multiplication","chapter":"11 Assembling functions","heading":"11.4 Function multiplication","text":"third repertoire methods making new function old plain old multiplication. two functions \\(f(x)\\) \\(g(x)\\), product simply \\(f(x)g(x)\\).’s essential distinguish function multiplication function composition:\\[\\underbrace{f(x) g(x)}_\\mbox{multiplication}\\ \\ \\ \\ \\underbrace{f(g(x)) \\ \\ \\mbox{}\\ \\ \\ g(f(x))}_\\mbox{composition}\\]function composition, one functions—interior function applied overall input, \\(x\\) example. function gets input output partner.multiplication, functions applied input individually. outputs multiplied produce overall output.function composition, order functions matters: \\(f(g(x))\\) \\(g(f(x))\\) general completely different functions.function multiplication, order doesn’t matter multiplication commutative, , \\(\\) \\(b\\) quantities, \\(\\times b = b \\times \\). 1360Transient vibrationA guitar string plucked produce note. note , course, vibrations air created vibrations string.plucking, note fades away. important model sinusoid (correct period correspond frequency note) times exponential.Function multiplication used often modeling ’ll see many modeling situations. ’s one example important physics communication: wave packet. Overall, wave packet localized oscillation Figure 11.3.\nFigure 11.3: wave packet constructed multiplying sinusoid gaussian function.\nproduct two simple functions: gaussian times sinusoid.\nFigure 11.4: two components wave packet Figure 11.3\nsimple function gaussian, sigmoid, straight-line function, sinusoid can likened character story. instance, sinusoid period 10 seconds amplitude 5 feet might need say shaking encountered earthquake. sigmoid might good description uptake successful social media platform Facebook.every social media firm succeeds may need two characters express drama: rising young firm rapid fall popularity competition provides better alternative.instance, initial rise popularity social media platform Yik Yak exponential. popularity leveled , promising steady, static, business future. , internet , popularity collapsed near zero company closed.way model pattern multiplying sigmoid exponential.(See Figure 11.5.)\nFigure 11.5: Subscriptions web messaging service Yik Yak grew exponentially 2013 2014, collapsed. company closed 2017.\ngraph shows (black) function constructed product two basic modeling functions. graph also shows pair blue curves encompass black function. called envelope black function.Question two basic modeling functions multiplied?sinusoid another sinusoid faster period. Excellent! gaussian sinusoid. ︎✘ sigmoidal function sinusoid. ︎✘ Question B period envelope?","code":"\nyikyak <- makeFun(pnorm(year, mean=2014.5, sd=0.7) * exp(- (year-2014)) ~ year)\nslice_plot(yikyak(year) ~ year, domain(year=c(2010,2018)))"},{"path":"fun-assembling.html","id":"all-together-now","chapter":"11 Assembling functions","heading":"11.5 All together now!","text":"Two three techniques combining functions—linear combinations, function composition, function multiplication—can used function. 1370Consider function length day\n\\[\\text{day_length}(L, \\delta) \\equiv \\frac{2}{15} \\arccos\\left(-\\tan(L)*\\tan(δ)\\right)\\]\n2/15 scaling output \\(\\arccos()\\). \\(\\arccos()\\) composed interior function scaled product two functions.able add multiply functions can enable us tell somewhat complicated story. example, graph shows simple model hourly temperature June SeptemberYou can see graph slow seasonal change temperature represented sine function period 365 days, well relatively rapid hour--hour variation course 24 hours. two different mechanisms work, 1) annual orbit Earth around Sun creates seasons, 2) daily rotation Earth around axis. mechanism approximated simple function. overall pattern can represented sum functions.going use strategy modeling complex phenomena sum two simple functions.Problem 1 Epidemics often modeled series “waves.” wave involves different people. Let’s imagine two epidemic waves, one passing “dodgerblue” population smaller one “orange3” population, like :Question Assuming way distinguish red blue cases, epidemic look like just one curve. following curves overall epidemic look like? (colors just help distinguish different functions)    ︎✘ cumulative number cases can’t possibly go !        B ︎✘ cumulative number cases can’t possibly go !        C ︎✘ can’t see separate waves (C) even though rise blue wave clearly distinct time rise red wave.        D Right-oh! Yes. wave adds another layer cumulative number cases functions shown graph “linear combination” red function blue function. real total cumulative cases “wave1(t)” plus “wave2(t).” functions made irrelevant real epidemic. Still, can ask arithmetic combination “wave1(t)” “wave2(t)” used create made-function.Question B made-function () graph, linear combination?1000 - wave1(t) + wave2(t) Correct. 2wave1(t) - 3wave2(t) ︎✘ t=0, wave1(t) wave2(t) zero, sum also zero. ’s true function () 1000 + wave1(t) - wave2(t) ︎✘ linear combination rise 1000 2000 (time t=100) fall 1500 negative wave2(t) comes play. \n’s common communications systems signal sine-wave carrier modulated another function. , carrier multiplied function: waveform(t) = modulator(t) \\(\\times\\) carrier(t).four examples sine period 2 units modulated another function. case, function one modeling functions studied.Question () sort function modulating carrier?    exponential Good.        gaussian ︎✘        sigmoid ︎✘        sine ︎✘ Question B (B) sort function modulating carrier?    exponential ︎✘        gaussian Right!        sigmoid ︎✘        sine ︎✘ Question C (C) sort function modulating carrier?    exponential ︎✘        gaussian ︎✘        sigmoid Right-oh!        sine ︎✘ Question D (D) sort function modulating carrier?Use SANDBOX answer following questions:Question shape graph composition \\(\\pnorm(\\pnorm(x))\\)?    sigmoid Correct.        gaussian ︎✘        exponential ︎✘ Question B shape graph composition \\(\\pnorm(\\dnorm(x))\\)?    sigmoid ︎✘        gaussian Excellent!        exponential ︎✘ Question C shape graph composition \\(\\dnorm(\\pnorm(x))\\)?    sigmoid Right-oh!        gaussian ︎✘        exponential ︎✘ Question D shape graph composition \\(\\ln(\\dnorm(x))\\)?sharp rise (0,0) followed asymptotic approach 0 \\(x\\rightarrow \\infty\\) Excellent! fishhook ︎✘ creative imagination! parabola ︎✘ Question E shape graph composition \\(\\ln(x^2)\\)?similar log function Right! gaussian function ︎✘ sigmoid ︎✘ Question F shape \\(\\exp(x^2)\\)?U-shaped Good. V-shaped ︎✘ W-shaped ︎✘ gaussian function ︎✘ Question G shape \\(\\exp(abs(x))\\)?U-shaped Right-oh! V-shaped ︎✘ W-shaped ︎✘ sigmoid function ︎✘ Question H shape \\(\\exp(-x^2))\\)?U-shaped ︎✘ V-shaped ︎✘ W-shaped ︎✘ gaussian function Right-oh! Question range \\(\\sin(1/x)\\)?\\(-1 \\leq \\sin(1/x) \\leq 1\\) Right! \\(\\infty < \\sin(1/x) < \\infty\\) ︎✘ \\(0 \\leq \\sin(1/x) < \\infty\\) ︎✘ \\(-\\infty < \\sin(1/x) \\leq 1\\) ︎✘ Question J range \\(1/\\sin(x)\\)?\\(-1 \\leq \\sin(1/x) \\leq 1\\) Good. \\(\\infty < \\sin(1/x) < \\infty\\) ︎✘ \\(0 \\leq \\sin(1/x) < \\infty\\) ︎✘ \\(-\\infty < \\sin(1/x) \\leq 1\\) ︎✘ ","code":"\ntemp <- makeFun(20*cos(2*pi*(t-120)/365) + \n                  10*sin(2*pi*t/1) + 50 ~ t)\nslice_plot(temp(day) ~ day, domain(day=c(90, 180)),  npt=1000) %>%\n  gf_labs(y = \"Temperature  (F)\", x = \"Day of year\")"},{"path":"fun-multiple-inputs.html","id":"fun-multiple-inputs","chapter":"12 Functions with multiple inputs","heading":"12 Functions with multiple inputs","text":"can use linear combination function multiplication build custom functions basic modeling functions. Similarly, linear combination function multiplication provide ways construct functions multiple inputs. 1400","code":""},{"path":"fun-multiple-inputs.html","id":"fx-times-gt","chapter":"12 Functions with multiple inputs","heading":"12.1 f(x) times g(t)","text":"example, guitar string rest forms straight line connecting two fixed ends: one set finger pressure along neck guitar bridge near center guitar body. guitar string plucked, oscillations follow sinusoid pattern displacement. right camera lighting setup, can see oscillations action:string length \\(L\\), string displacement function position \\(x\\) along string linear combination functions form \\[g_k(x) \\equiv \\sin(k \\pi x /L)\\] \\(k\\) integer. functions graphed Figure 12.1 \\(k=1\\), \\(k=2\\), \\(k=3\\).\nFigure 12.1: Vibrational modes guitar string.\nShapes sort Figure 12.1 stop-motion flash snapshot string. string’s shape also changes time, string’s displacement function \\(x\\) \\(t\\). displacement sinusoid whose time period depends length tension string well number cycles spatial sine:\n\\[g_k(x, t) \\equiv \\sin(\\frac{k \\pi}{L} x) \\ \\sin(\\frac{k \\pi}{P}t)\\] Figure 12.2 shows snapshots 1.5 cycle string different moments time, motion linear combination.1410\nFigure 12.2: String position changes time.\n","code":""},{"path":"fun-multiple-inputs.html","id":"two-variable-modeling-polynomial","chapter":"12 Functions with multiple inputs","heading":"12.2 Two-variable modeling polynomial","text":"Section 11.3 introduced low-order polynomial, either \\(g_1(x) \\equiv a_0 + a_1 x\\) \\(g_1(x) \\equiv b_0 + b_1 x + b_2 x^2\\) general-purpose way generating function smoothly curved shape. applies constructing simple functions two variables.Almost always, use least first-order polynomial, :\n\\[h_1(x, y) \\equiv a_0 + a_x x + a_y y\\]\nimportant extension , using ’s called bilinear term , evocatively statistics, interaction term. \n\\[h_2(x, y) \\equiv \\underbrace{b_0}_\\mbox{intercept} + \\underbrace{b_x\\, x + b_y\\, y}_\\mbox{linear terms} + \\underbrace{b_{xy}\\,x\\, y}_\\mbox{bilinear term}\\]bilinear term arises models phenemona spread epidemics, population dynamics predator prey animals, rates chemical reactions. situations one thing interacting another: predator killing prey animal, infective individual meeting person susceptible disease, one chemical compound reacting another. 1420Under certain circumstances, modelers include one quadratic terms, \n\\[h_3(x, y) \\equiv c_0 + c_x\\, x + c_y\\, y + c_{xy}\\,x\\, y + \\underbrace{c_{yy}\\, y^2}_\\mbox{quadratic y}\\]\nskilled modeler can often deduce terms include basic facts system modeled. ’ll need additional calculus concepts can explain straightforward way.writing polynomials like \\[h_1(x, y) \\equiv a_0 + a_x x + a_y y\\] \\[h_3(x, y) \\equiv c_0 + c_x x + c_y\\ y + c_{xy} x\\ y\\]\nusing letters subscripts coefficients. Think \\(c_x\\) saying, “coefficient \\(x\\) term polynomial.” Using style lets us use different letters start alphabet names coefficients different polynomials still making clear term coefficient scaling.","code":""},{"path":"fun-multiple-inputs.html","id":"function-composition-not","chapter":"12 Functions with multiple inputs","heading":"12.3 Function composition (NOT!)","text":"left function composition list ways build multivariable functions simpler functions single input.instance, consider two functions \\(f(x)\\) \\(g(t)\\). composition \\(f(g(t))\\) one input: \\(t\\). Similarly, \\(g(f(x))\\) one input: \\(x\\).Many printed tables meant used functions; plug input values read output. ’s table published National Oceanic Atmospheric Administration heat index, way summarizing perceived comfort (discomfort) summer-like weather conditions.Question ) inputs heat-index functiontemperature relative humidity Right! temperature wind speed ︎✘ inputs wind-chill function, heat index. temperature, latitude, longitude ︎✘ heat index doesn’t depend location. table actually shows three different functions:heat index \\(^\\circ\\) F.heat index \\(^\\circ\\) C.caution warning level.Question B B) inputs 70% relative humidity \\(88^{\\circ}\\) F, outputs three functions?\\(100^{\\circ}\\) F, \\(38^\\circ\\) C, “extreme caution.” Right! \\(100^\\circ\\) F, \\(38^\\circ\\) C, “danger.” ︎✘ Check ! \\(100^\\circ\\) F, \\(33^\\circ\\) C, “extreme caution.” ︎✘ 33C temperature 100F. Question C C) Holding relative humidity 70%, much ambient temperature increase (\\(88^\\circ\\) F) change caution-level output “dangerous?”Increase \\(2^\\circ\\) F Good. Increase \\(6^\\circ\\) F ︎✘ looks like ’re increasing humidity point heat index \\(106^circ\\) F. asked much temperature input change, heat-index output. Increase relative humidity 80%. ︎✘ ’s true \\(100^\\circ\\) F 80% humidity, caution-index “dangerous.” problem specified holding humidity constant. Question D D) starting point \\(88^\\circ\\) F 70% humidity, slope increase heat index moving 80% humidity.\\(6^\\circ\\) F per 10 percentage points humidity Right! \\(6^\\circ\\) F ︎✘ slope always “rise run.” ’ve got rise right, run? \\(6^\\circ\\) F per 80% humidity. ︎✘ slope change output divided change input, .e. “rise run.” 80% humidity endpoint, run change humidity starting point endpoint. Question E E) heat-index output inputs 52% relative humidity \\(91^\\circ\\) F? Choose best answer.\\(98.4^\\circ\\) F Right-oh! course, 4 last digit sketchy, ’s reasonable calculate interpolated output averaging neighboring outputs. \\(101^\\circ\\) F ︎✘ ’s output 55% humidity \\(92^\\circ\\) F. table doesn’t say. ︎✘ ’s true table entry specifically 52% \\(91^\\circ\\) F, can make reasonable guess interpolation, , reading rows columns. Question F True false: caution-level output presented function just one variable, rather needing temperature humidity .    TRUE Right-oh! caution-level output function ambient temperature alone humidity alone. know heat-index, know caution level exactly.        FALSE ︎✘ Notice caution-level output given level heat index, regardless ambient temperature humidity separately. US National Weather Service also publishes heat index graphic, one .Recall Pythagorean theorem: \\(C^2 = ^2 + B^2\\). Let’s write function takes inputs lengths two legs produces output length hypotenuse.\\[\\mbox{hypotenuse}(, b) \\equiv \\sqrt{\\strut ^2 + b^2}\\]can seen composition function \\(f()\\) onto linear combination power-law functions \\(g()\\) different inputs.Question function \\(f()\\)?\\(f(x) \\equiv ^2\\) ︎✘ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(f(x) \\equiv \\sqrt{x}\\) Right! \\(f(x) \\equiv x^2\\) ︎✘ part interior function, outer function. \\(f(x) \\equiv +\\) ︎✘ Sorry, output hypothenuse() function needs quantity, \\(+\\) quantity. Question B function \\(g()\\)?\\(g(x) \\equiv ^2\\) ︎✘ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g() \\equiv x^2\\) ︎✘ wouldn’t make sense. output \\(f()\\) doesn’t depend input. \\(g(x) \\equiv x^2\\) Excellent! Right, power-law function. doesn’t matter call input, long ’s used consistently definition. \\(g(x) \\equiv ^2 + b^2\\) ︎✘ Sorry, input name \\(x\\) formula right side tilde expression \\(\\) \\(b\\) . Question C two functions linear combination. ?\\(g()\\) \\(g(b)\\) Excellent! \\(f(x)\\) \\(g(x)\\) ︎✘ \\(f(b)\\) \\(g(b)\\) ︎✘ Question D scalars linear combination?\\(1\\) \\(1\\) Right! \\(1\\) \\(-1\\) ︎✘ scalars. ︎✘ think know ’re getting . tradition mathematics scalar \\(1\\), don’t write . still, scalar \\(1\\). used \\(\\) \\(b\\) names inputs hypotenuse(). Aren’t \\(\\) \\(b\\) meant parameters, input names?can use whatever want input names, long used consistently left right sides \\(\\\\equiv\\). Names like \\(x\\), \\(t\\), \\(y\\) scream recognized input names, use time. Pythagorean theorem usually written using , B, C. ’m honoring convention human reader gets cultural hint inputs stand . ’m unapologetic , since got fair warning left side \\(\\\\equiv\\) argument names .function bigger() defined piecewise terms two extremely simple functions. two simple functions contour plot contours parallel. piecewise combination simple functions complicated contour plot, simple function’s parallel contours showing half domain. ’ll call “pieces” domain.Question following best describes two pieces domain?One left line identity (, \\(y=x\\)) right line. Right-oh! One \\(x > 0\\) \\(x \\leq 0\\) ︎✘ One \\(x > 0\\) \\(y \\leq 0\\) ︎✘ \nAuckland, New Zealand field dormant volcanos. highest, 193 meters sea level, Maungawhau. Formerly, tourists drive peak look crater, seen picture.\nFigure 12.3: crater Maungawhau, near Auckland, New Zealand. Source\ninitial creator R, Ross Ihaka, teaches University Auckland. digitization topographic map easily plotted, :\nFigure 12.4: combination surface contour plot topography Maungawhau.\nz-axis height meters. x- y-axes latitude longitude, measured 10-meter units reference point. (, \\(x=10\\) 100 meters \\(x=20\\).)Get used presentation surface plot rotate zoom . see crater clearly, can rotate surface plot look straight downwards, effectively presenting color-coded contour plot. Moving cursor surface display \\(x\\) \\(y\\) coordinates, well \\(z\\)-value coordinate point.Question \\((x, y)\\) location low-point crater? (Choose closest answer.)\\((x=34, y=29)\\) Correct. \\((x=31, y=25)\\) ︎✘ \\((x=25, y=34)\\) ︎✘ \\((x=29, y=34)\\) ︎✘ Question B color used designate lowest elevations?    dark blue Correct.        green ︎✘        yellow ︎✘ climb Maungawhau, point elevation low-point crater, even though outside crater. Think contour corresponds elevation. Let’s call “half-way” contour since ’s roughly half-way volcano.Question C shape “half-way” contour?line segment ︎✘ crescent ︎✘ closed curve Good. cross ︎✘ Imagine filling crater water. point, water rises level spill lip crater.Question D elevation water start spill crater lip? (Pick closest answer.)169 meters Right! 172 meters ︎✘ 175 meters ︎✘ 178 meters ︎✘ ’ve created function named \\(\\mbox{twins}(x,y)\\) help practice making contour plots. ’ll need open sandbox draw plot.scaffolding command:Question domain plot large enough show mountain next deep hole. domains job?domain(x=c(-5, 5), y=c(-5, 5) Right! domain(x=c(1, 5), y=c(1, 5) ︎✘ shows mountain, hole. domain(x=c(1,1), y=c(-1,1))) ︎✘ hole shown, none mountain. domain(x=c(5,10), y=c(0,10))) ︎✘ ’s hardly anything going domain. function pretty flat except dip lower left. different sandbox (can still see contour plot first sandbox), draw slice function along line \\(y=0\\). Use \\(x\\)-domain correct answer previous question.slice_plot() command , need replace __tilde-expression___ __domain__ correct syntax.Question B expressions accomplish task?slice_plot(twins(x, y=0) ~ x, domain(x=c(-5,5))) Excellent! slice_plot(twins(x) ~ x, domain(y=c(-5, 5))) ︎✘ domain \\(x\\), \\(y\\). twins() takes two inputs, even one fixed zero. slice_plot(twins(x, y=0) ~ x, domain(x=c(-5, 5), y=c(-5, 5))) ︎✘ slice plot domain includes one input. slice_plot(twins(x, y=0) ~ x + y, domain(x=c(-5, 5), y=c(-5, 5))) ︎✘ slice plot one input right side tilde expression. \nConsider graph length day different levels latitude different days year. Source.First, orient graph contours mean. Note vertical lines indicating days equinoxes solstices.Question True False: place equator day length exactly 12 hours time year.    TRUE ︎✘ , horizontal (dashed) line denoting equator cross 12-hour contour. doesn’t.        FALSE Right-oh! Since dashed equator line overlaps 12-hour contour line, time year length day equator exactly 12 hours. Presumably daylight starts somewhat sun rises horizon ends somewhat sun goes horizon. word “equinox” comes Latin “equal night.”Question B True False: judge contour plot, equinox every latitude length day somewhat longer length night.    TRUE Right-oh!        FALSE ︎✘ Note neither lines March September equinoxes cross 12-hour length--day contour. Question C USAFA latitude 38.9983° N. Reading contour plot, roughly length (hours) longest day year?","code":"\nbigger <- makeFun(ifelse(y > x, y, x) ~ x + y)\ncontour_plot(bigger(x,y) ~ x+y, domain(x=c(-2,2), y=c(-2,2)))\ntwins <- mosaic::rfun(~ x + y, seed = 302, n=5)\ncontour_plot(twins(x, y) ~ x + y, domain(x=c(0,1), y=c(-1,1)))twins <- mosaic::rfun(~ x + y, seed = 302, n=5)\nslice_plot(__tilde-expression__, __domain__)"},{"path":"fun-piecewise.html","id":"fun-piecewise","chapter":"13 Piecewise functions","heading":"13 Piecewise functions","text":"basic modeling functions, two exceptions, domain entire number line \\(-\\infty < x < \\infty\\). matter big small value input, function output. functions particularly nice work , since never worry input going bounds. 1500The two exceptions :logarithm function, defined \\(0 < x\\).power-law functions: \\(x^p\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\n\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).\n\\(p\\) negative, output function undefined \\(x=0\\). can see simple example: \\(g(x) \\equiv x^{-2}\\). students drilled “division zero illegal,” \\(g(0) = \\frac{1}{0} \\frac{1}{0}\\), double law breaker.\\(p\\) integer, \\(p \\neq 1, 2, 3, \\cdots\\) domain power-law function include negative inputs. see , consider function \\(h(x) \\equiv x^{1/3}\\).can tedious make sure right side law dealing functions whose domain whole number line. designers hardware computer arithmetic, several decades work, found clever system make easier. ’s standard part hardware whenever function handed input part function’s domain, one two special “numbers” returned. illustrate:NaN stands “number.” Just calculation involving NaN generate NaN result, even involving multiplication zero cancellation subtraction division.15 instance:Division zero produces Inf, whose name reminiscent “infinity.” Inf infiltrates calculation takes part: 1510To see benefits NaN / Inf system let’s plot logarithm function graphics domain \\(-5 \\leq x \\leq 5\\). course, part graphics domain, \\(-5 \\leq x \\leq 0\\) domain logarithm function computer entitled give us slap wrists. NaN provides room politeness.Open sandbox see happens make plot.purely mathematical sense, problem functions undefined extended part domain handled cunning imagination. solution—invention complex numbers—concern . Instead, ’re going embrace functions domain smaller whole number line see can .illustrate, let’s use computer notation create function whose domain \\(x < 1\\). , need way write “,” , “\\(x\\) 1 greater, return NaN.” ’ll use function R let’s us ask TRUE/FALSE question , depending answer, one another calculation. question-answering R function ifelse() whose name remarkably descriptive. ifelse() function takes three arguments. first question asked, second value return answer “yes,” third value return “” answer.\ntakes getting used expression x < 1 question statement fact. ’s standard traditional mathematical notation questions, although people use question mark \\(x \\stackrel{?}{<} 1\\).table shows computer notation common sorts questions. 1520","code":"\nsqrt(-3)## [1] NaN\n(-2)^0.9999## [1] NaN\n1/0## [1] Inf\n0 * NaN## [1] NaN\nNaN - NaN## [1] NaN\nNaN / NaN## [1] NaN\n3 * Inf## [1] Inf\nsqrt(Inf)## [1] Inf\n0 * Inf## [1] NaN\nInf + Inf## [1] Inf\nInf - Inf## [1] NaN\n1/Inf## [1] 0\nslice_plot(log(x) ~ x, domain(x=c(-5,5)))\ng <- makeFun( ifelse(x < 1, x, NaN) ~ x)\nslice_plot(g(x) ~ x, domain(x = c(-2, 2)))"},{"path":"fun-piecewise.html","id":"piecewise-functions","chapter":"13 Piecewise functions","heading":"13.1 Piecewise functions","text":"ability split domain function provide different formula pieces allows us \nconstruct piecewise functions. illustrate, function \\(h(x) \\equiv |x|\\). ’ll recognize “absolute value” function. intuitive algorithm “strip negative sign, ” input. ability divide domain pieces, gain access less mysterious sort arithmetic operation can re-write \\[h(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\ -x & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notationNote absolute value function built-R form abs() function.Less familiar Heaviside function important uses physics engineering:\\[\\mbox{Heaviside}(x) \\equiv \\left\\{ \n\\begin{array}{cl} 0 & \\text{}\\ x < 0\\\\1 & \\mbox{otherwise}\\end{array}\n\\right.\\]\ncomputer notation, \nvertical gap two pieces called discontinuity. Intuitively, draw discontinuous function without lifting pencil paper. Heaviside function discontinuity \\(x=0\\).Similarly, ramp function (aka “ReLU”) kind one-sided absolute value:\n\\[\\mbox{ramp}(x) \\equiv \\left\\{ \n\\begin{array}{cl} x & \\text{}\\ 0 \\leq x\\\\0 & \\mbox{otherwise}\\end{array}\n\\right.\\]\n, computer notation:linear combination two input-shifted ramp functions gives piecewise version sigmoid.Figure 13.1 graph monthly natural gas use author’s household versus average temperature month. (Natural gas measured cubic feet, appreviated ccf.) 1530\nFigure 13.1: amount natural gas used heating author’s home varies outside temperature.\ngraph looks somewhat like hockey stick. sloping straight-line dependence ccf temperature temperatures \\(60^\\circ\\)F constant higher temperatures. shape originates dual uses natural gas. Gas used cooking domestic hot water, demand less independent outdoor temperature 15 ccf per month. Gas also used heating house, ’s needed temperature less \\(60^\\circ\\)F.can accomplish hockey-stick shape linear combination ramp() function constant. ramp function represents gas used heating, constant uses gas (modeled depending temperature. Overall, model \\[\\text{gas_ccf}(x) \\equiv 4.3\\,  \\mbox{ramp}(62-x)  + 15\\]\nEven simpler model uses natural gas:\n\\[\\text{other_ccf}(x) \\equiv 15\\].last example concerns bit familiar technology: music synthesis. Generating pure tone electronically easy done using sinusoid. Generating note rich instrumental timbre can accomplished linear combination sinusoids. course, note localized time. accomplished multiplying sinusoids gaussian function envelope. 1540It turns gaussian function, dnorm(), generate realistic sound. Instead, complicated envelope used, ADSR function shown Figure 13.2. function six (!) parameters: time key pressed, duration “attack” phase sound amplitude increasing response impulse imposed key, decay duration D output level S lasts key released, decay zero duration R. ’s reasonable think D S phases piecewise linear approximation exponential decay.\nFigure 13.2: ADSR envelope function used music synthesis consists 6 pieces including zero output key pressed pulse ends. Source\n","code":"\nh <- makeFun(ifelse(x >= 0, x, -x) ~ x)\nHeaviside <- makeFun(ifelse(x < 0, 0, 1) ~ x)\nramp <- makeFun(ifelse(0 < x, x, 0) ~ x)\nslice_plot(ramp(x) ~ x, domain(x=c(-3, 3)))\nsig <- makeFun(ramp(x+0.5) - ramp(x-0.5) ~ x)\nslice_plot(sig(x) ~ x, domain(x=c(-3, 3)))"},{"path":"modeling-cycle.html","id":"modeling-cycle","chapter":"14 Modeling cycle","heading":"14 Modeling cycle","text":"Effective modelers treat models skepticism. look ways models failure capture salient features real world. eye deviations models show believe know system modeled. consider ways models might serve purpose developed. 1560When modelers spot failure deviation lack proper utility, might discard model often make series small adjustments, tuning model successfully serves purposes intended.Thus, modeling cyclic process creating model, assessing model, revising model. process comes sort preliminary end model serves purposes. even , models often revised check whether results sensitive factor included check whether component deemed essential really .","code":""},{"path":"modeling-cycle.html","id":"example-cooling-water","chapter":"14 Modeling cycle","heading":"14.1 Example: Cooling water","text":"Looking back exponential fitted cooling water data Section 8.2, looks like original estimate half-life bit small; data doesn’t seem decay rate implied \\(k = -0.0277\\). Perhaps try somewhat slower decay, say \\(k = -0.2\\) see improves things.cooling water example, ’re using subset data collected Prof. Wagon. next commands re-create subset can work . also plot data exponential model. 1565See \\(k=-0.02\\) provides better fit model. (can add another slice_plot() able compare original \\(k=-0.02\\) models.)Later CalcZ, ’ll study optimization. optimization techniques directing computer refine parameters best match data. Just illustrate, ’s get:\nFigure 14.1: Polishing fit using rough model starting point.\nrefined parameters give much better fit data original rough estimates eye.two rounds modeling cycle. First, choice /B expontential model rough estimate parameters , B, \\(k\\). Second, refinement parameters using computer.Looking results second round, experienced modeler can see disturbing discrepancies. First, estimated baseline appears high. Related, initial decay model function doesn’t seem fast enough decay model function large \\(t\\) appears slow. Prof. Stan Wagon noticed . used additional data fill gaps small \\(t\\) refined model changing basis functions linear combination. hypothesized least two different cooling processes. First, newly poured water raises temperature mug . Since water mug direct contact, fast process. , complete water/mug unit comes slowly equilibrium room temperature. 1567The newly refined model even better match data. nothing’s perfect Prof. Wagon saw opportunity additional refinement based idea third physical mechanism cooling: evaporation surface hot water. Prof. Wagon’s additional circuits modeling cycle appropriate purpose, develop detailed understanding process cooling. purposes, demonstrating appropriateness exponential process interpolating data points, earlier cycles might sufficed.’s graph model Prof. Wagon constructed match data.\nFigure 14.2: model combines three exponentials provides excellent fit.\nexcellent match data. … matching data isn’t always goal modeling. Prof. Wagon wanted make sure model physically plausible. looking refined parameters, include two exponential processes parameters \\(k_1\\) \\(k_2\\), saw something wrong:can make \\(k_1\\), whose [positive value] violates laws thermodynamics suggesting water gets hotter virtue presence cool air? likely problem simple model (proportionality assumption) adequate near boiling point. many complicated factors affect heat transportation, air movement, boundary layer dissipation, diffusion, use single linear relationship appears inadequate. next section [paper] suggest experiments, also hope experiments might inspire readers come better mathematical model.modeling cycle can go round round!","code":"\n# reconstruct the sample\nset.seed(101)\nStans_data <- CoolingWater %>% sample_n(20)\n# Plot the sample and overlay a model\ngf_point(temp ~ time, data=Stans_data) %>%\n  gf_lims(y = c(20, NA)) %>%\n  slice_plot(25 + 83.3*exp(-.0277*time) ~ time, color=\"dodgerblue\")\nrefined_params <-\n  fitModel(temp ~ A + B*exp(k*time), data = Stans_data,\n           start = list(A = 25, B = 83.3, k = -0.0277))\ncoef(refined_params)##           A           B           k \n## 25.92628463 60.69255269 -0.01892572\nnew_f <- makeFun(refined_params)\ngf_point(temp ~ time, data = Stans_data) %>%\n  slice_plot(new_f(time) ~ time, color=\"dodgerblue\")"},{"path":"modeling-cycle.html","id":"example-the-tides","chapter":"14 Modeling cycle","heading":"14.2 Example: The tides","text":"Step 4: Evaluate refine. green model make poor predictions. model says “high tide” data say otherwise. ’s missing phase sinusoid. model incorporates phase 1040\\[{\\color{blue}{\\mbox{tide}(t)} \\equiv 1.05 + 0.55 \\sin(2\\pi (t - t_0)/11)}\\]new parameter, \\(t_0\\), set time positive-going crossing baseline. ’s crossing time = 17. Happily, changing phase necessitate re-estimating parameters: baseline, amplitude, period. model, incorporating phase, graphed \\(\\color{blue}{\\mbox{blue}}\\).\nFigure 14.3: Shifting phase sinusoid gives flexibility needed align peaks troughs model data. Performing alignment one peak makes clear period wrong.\nmodeling purposes, prediction future tides, phase information impossible. others, say, description amplitude tides, . getting phase roughly right can help point problems. instance, blue sinusoid comparison makes clear estimated period 11 hours short. Maybe 13 hours better. Better still, since \\(t=t_0 = 17\\) model close match data, let’s use estimate start cycle. , let’s move much along data find another baseline crossing. judge right panel, baseline crossing \\(t=103\\). difference two times \\(103 - 17 = 86\\) hours. course, period 86 hours. Looking back whole set data can see 7 complete cycles \\(t=17\\) \\(t=103\\). new estimate period \\(86/7 = 12.3\\) hours.refinement model \n\\[{\\color{green}{\\mbox{tide}(t)} \\equiv 1.05 + 0.55 \\sin(2\\pi (t - 17)/12.3)}\\]\nFigure 14.4: phase right, better estimate can made period: 12.3 hours.\n’s pretty good match data! might call quits . First, let’s polish parameter estimates, letting computer tedious work trying little tweaks see can improve fit.\nFigure 14.5: Polishing parameters sinusoid\nlast model seems capable making reasonable predictions, collected --date data might able fit new model predict tide level pretty accurately days ahead time. Also, excellent alignment model peaks data tell us cyclic tide period constant, least far well can tell. 1576With period estimate \\(P=12.56\\) hours, can go looking phenomena might account tides. period day-night cycle , course 24 hours. tides Providence come twice day. exactly. Something else must going .Isaac Newton first propose tides caused gravitational attraction Moon. complete cycle Moon—moon rise moon rise—takes 50 minutes longer full day: Earth revolves every 24 hours, time Moon moved bit orbit Earth. Moon’s period, seen fixed place Earth 24.8 hours. Half , 12.4 hours, awfully close estimate tidal period: 12.56 hours. difference periods, 8 minutes day, might hard observe 4 days. Maybe data ’d get better match tides moon.modeling cycle work: Propose model form (/B model sinusoid), adjust parameters match know (Providence tide record), compare model data, observe discrepancies, propose refined model. can stop model giving need. period 12.56 hour model seems good enough make prediction tide level days ahead, certainly better “two tides day” model. model yet able implicate precisely Moon’s orbit tidal oscillations.Discrepancies model data play two roles: help us decide model fit purpose mind can point way improved models. tidal data deviates steady amplitude model can clue look next. ’s always obvious lead.Historically, careful analysis tides led highly detailed, highly accurate model: linear combination sinusoids diurnal periods 12.42, 12.00, 12.66, 11.97 hours well components period 23.93, 25.82, 24.07, 26.87, 24.00 hours. tide-prediction model constructed finding coefficients linear combination; differ locale locale. 1577The data frame SunsetLA records number minutes 4 pm sun sets Los Angeles, CA 4-year interval January 2010 (month 1) December 2013 (month 48).Open sandbox make plot sunset time versus month.’re using gf_point() gf_line(). data oscillates , connecting data points lines makes easier see pattern.Question range number minutes sunset whole 4-year period?40 190 minutes Right-oh! 120 minutes ︎✘ range interval spanned two numbers. 40 180 minutes ︎✘ largest values half tick mark 180. Tick marks spaced 20 minutes. 0 48 months ︎✘ ’s domain. range along vertical axis. Question B data fall nicely sine-shaped curve. period sine?    6 months ︎✘ Look number months one peak another.        11 months ︎✘ Look carefully. remember change length day annual phenomenon.        12 months Good.        12 minutes ︎✘ Period refers interval domain function, range. function \\[\\mbox{sunset}(\\mbox{Month}) \\equiv  \\sin(2 \\pi\\, \\mbox{Month} / 12) + C\\] linear combination two functions:constant function one(Month)sine function sin(2*pi*Month/12)two functions scaled \\(C\\) \\(\\), respectively.can estimate \\(C\\) mid-point range (minutes) data. can estimate \\(\\) half length range (, half max minus min.)Make rough reasonable numeric estimates \\(C\\) \\(\\) data. , sandbox, define sunset() function using numerical estimates linear combination. Plot function layer top data. (Pipe gf_point() layer slice_plot().)domain slice_plot() inherited implied SunsetLA data. Notice input name slice_plot() corresponds established gf_point().Question C sunset() function pretty good match data except one thing. thing?sunset() function completely different range data. ︎✘ won’t case estimated \\(C\\) \\(\\) correctly. period sunset() function doesn’t match data. ︎✘ use sin(2*pi*Month/12)? , period right. horizontal time shift sunset() data. Right! ’re going fix problem sunset() defining time offset use reference. sine function, suitable time offset value along horizontal axis phenomenon modeled crosses \\(C\\) positive slope. 4 points along horizontal axis readily identifiable data. (may integer value Month.)Question D suitable value time offset?    0 months ︎✘ ’s time data suggest \\(C\\) crossed.        19 months ︎✘ ’s maximum, crossing \\(C\\).        21.5 months ︎✘ ’s crossing \\(C\\), one positive slope.        15.5 months Correct. good rough value. Since period 12 months, equally well said offset 3.5 months. original scaffolding, value offset zero. Change match answer previous question.Plot modified sunset() function confirm much better match data original (, one without time offset). can “tune” function tweaking numerical values \\(\\), \\(C\\), \\(offset\\) parameters get solid match.Alternatively, can use fitModel() tuning . Plug estimates (.k.. “guesses”) parameters place ___ following. run code. ’ll see estimate function compared result computer refine estimate. Chances , computer better job stringing function data.Perhaps expecting tuned sine function match data exactly. . One reason Earth’s orbit around Sun exactly circular. sine function model phenomenon, good purposes others. complete explanation, see article Wikipedia.","code":"\ntide_mod <-\n  fitModel(level ~ A + B*sin(2*pi*(hour-hzero)/P),\n  data = RI_tide,\n  start=list(A=1.05, B=0.55, hzero=17, P=12.3))\ncoef(tide_mod)##          A          B      hzero          P \n##  1.0220540  0.4998367 15.3899905 12.5593556\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line()sunset <- makeFun(A + C*sin(2*pi*(Month - offset)/12), \n                  A = __your estimate__, \n                  C = __your estimate__,\n                  offset=0)\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line() %>%\n  slice_plot(sunset(Month) ~ Month)## rough estimates from graph\nrough_A <- __estimated_A__\nrough_C <- __estimated_C__\nrough_offset <- __estimated_offset___\nguessed_fun <-\n  makeFun(A*sin(2*pi*(Month - offset)/12) + C ~ Month,\n          A  = rough_A, C = rough_D,\n          offset = rough_offset)\n\ntuned_fun <-\n  fitModel(Minutes ~ A*sin(2*pi*(Month - offset)/12) + C,\n         data  = SunsetLA,\n         start = list(A = rough_A,\n                      C = rough_C,\n                      offset = rough_offset) )\n\ngf_point(Minutes ~ Month, data = SunsetLA) %>%\n  gf_line(color  = \"dodgerblue\") %>%\n  slice_plot(tuned_fun(Month) ~ Month) %>%\n  slice_plot(guessed_fun(Month) ~ Month,  color = \"orange3\")"},{"path":"magnitudes.html","id":"magnitudes","chapter":"15 Magnitudes","heading":"15 Magnitudes","text":"Undoubtedly comfortable standard way writing numbers, instance 33 512 1051. Elementary school students master comparison numbers. greater: 512 33? less, 1051 512? can answer questions glance; comparison can accomplished simply counting number digits. 1051 four digits, larger three-digit number 512. two digits 33, smaller 512. two numerals number digits—say, 337 512—can’t answer “greater ” question simple counting. Instead, proceed left right compare number place. , 512 337, compare 5 3 … since 5 greater 3, 512 greater 337. two leading digits , go next digit digits turn. 1600Things always simple. number system uses place Arabic numerals human invention. example earlier number system Roman numerals. , comparison hard. instance, three numbers bigger?\\[\\mbox{MLI CXII XXXIII}\\]\ntypographically shorter number largest, vice versa. Even two Roman numerals length, ’s trivial compare place--place basis. instance, IC fifteen times bigger VI, even though much smaller V.","code":""},{"path":"magnitudes.html","id":"counting-digits","chapter":"15 Magnitudes","heading":"15.1 Counting digits","text":"Digit counting provides easy, fast way perform many calculations, least approximately. \\(\\sqrt{10000}\\)? five digits, square root number “half number digits.” , \\(\\sqrt{10000} = 100\\). \\(10 \\times 34\\)? Easy: 340. Just append one zero 10 end 34. \\(1000 \\times 13\\)? Just easy: 13,000. even punctuate written numbers commas period order facilitate counting digits.Imagine digit counting function called digit(). takes number input produces number output. don’t formula digit(), inputs output can calculated just counting. example:digit(10) \\(\\equiv\\) 1digit(100) \\(\\equiv\\) 2digit(1000) \\(\\equiv\\) 3… …digit(1,000,000) \\(\\equiv\\) 6… .digit() function easily can applied product two numbers. instance:digit(1000 \\(\\times\\) 100) = digit(1000) + digit(100) = 3 + 2 = 5.Similarly, applying digit() ratio gives difference digits numerator denominator, like :digit(1,000,000 \\(\\div\\) 100) = digit(1,000,000) - digit(100) = 6 - 2 = 4","code":""},{"path":"magnitudes.html","id":"using-digit-to-understand-magnitude","chapter":"15 Magnitudes","heading":"15.2 Using digit() to understand magnitude","text":"haven’t shown digit() function anything handful discrete inputs listed . heroic task produce continuous version digit(). method sketched 15.7.practice, digit() useful well one basic modeling functions:\n\\[\\text{digit(x)} = 2.302585 \\ln(x)\\] , R, log10(). elected \\(\\ln()\\) rather digit() reasons seen study differentiation.EXERCISE: Compute \\(10^y\\) convert “number digits” number whose digits counted. instance, \\(10^2.5\\) 316.228.EXERCISE: many binary digits 64? 127?","code":""},{"path":"magnitudes.html","id":"quantity-and-magnitude","chapter":"15 Magnitudes","heading":"15.3 Quantity and magnitude","text":"familiar quantity 60 miles-per-hour written number (60 ) followed units. quantity neither number units: combination two. instance, 100 obviously 60. miles-per-hour kilometers-per-hour. Yet, 60 miles-per-hour almost exactly quantity 100 kilometers-per hour.17 16106, 60, 600, 6000 miles-per-hour quantities differ size orders magnitude. differences often point substantial change context. jog 6 mph, car highway goes 60 mpg, cruising commercial jet goes 600 mph, rocket passes 6000 mph way orbital velocity.everyday speech, difference 60 6 54; just subtract. Modelers scientists routinely mean something else: difference 60 6 “one order magnitude.” Similarly, 60 6000 different “two orders magnitude,” 6 6000 three orders magnitude.everyday English, phrases like “completely different situation” “different kind” “qualitatively different” (note l) indicate substantial differences. “Different orders magnitude” expresses kind idea specific reference quantity.use factors 10 counting orders magnitude arbitrary. person walking person jogging edge qualitatively different, although speeds differ factor 2. Aircraft cruise 600 mph 1200 mph qualitatively different design, although speeds factor 2 apart. professional basketball player (height 2 meters ) qualitatively different third grader (height 1 meter).Modelers develop intuitive sense think difference terms subtractive difference (e.g. 60 - 6 = 54) look orders magnitude (e.g. 60--6 one order magnitude). seems skill based experience judgment, opposed mechanical process.One clue thinking terms orders magnitude appropriate working set objects whose range sizes spans one many factors 2. Comparing baseball basketball players? Probably need orders magnitudes. Comparing infants, children, adults terms height weight? Orders magnitude may useful. Comparing bicycles? Mostly fit within range 2 terms size, weight, speed (expense!). Comparing cars, SUVs, trucks? Differences factor 2 routine, thinking terms order magnitude likely appropriate.Another clue whether “zero” means “nothing.” Daily temperatures winter often near “zero” Fahrenheit Celcius scales, way means complete absence heat. scales arbitrary. Another way think clue whether negative values meaningful. , thinking terms orders magnitude likely useful.may guessed digits() handy computing differences terms orders magnitude. ’s : 1620Make sure quantities expressed units.Calculate difference digits() numerical part quantity.order--magnitude difference velocity snail walking human. snail slides 1 mm/sec, human walks 5 km per hour. Putting human speed units snail speed:\n\\[5 \\frac{km}{hr} = \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = \\left[10^6 \\frac{mm}{km}\\right] \\left[\\frac{1}{3600} \\frac{hr}{sec}\\right] 5 \\frac{km}{hr} = 1390 \\frac{mm}{sec} \\]\nCalculating difference digits() 1 1390:, 3 orders magnitude difference speed. snail, walking humans must seem like rockets way orbit!Animals, including humans, go world varying states illumination, bright sunlight high noon dim shadows half moon. able see diverse conditions, eye needs respond light intensity across many orders magnitude.lux unit illuminance Système international. table18 shows illumination range familiar outdoor settings:creature active night day, eye needs sensitive 7 orders magnitude illumination. accomplish , eyes use several mechanisms: contraction dilation pupil accounts 1 order magnitude, photopic (color, cones) versus scotopic (black--white, rods, nighttime) covers 3 orders magnitude, adaptation minutes (1 order), squinting (1 order).likely heard phrase “exponential growth” used describe COVID-19 pandemic. Let’s explore idea using actual data.COVID-19 Data Hub collaborative effort universities, government agencies, NGOs provide --date information pandemic. ’re going use data US whole-country level. (’s also data state county levels.)Perhaps simplest display show number cumulative cases (confirmed variable) deaths function time. can see documentation dataset COVID-19 Data HubOpen sandbox make plot.’re going plot confirmed cases blue deaths red.Question mid July, many confirmed cases ? (Note labeled tick marks refer beginning month, point labeled Feb February 1.)300,000 ︎✘ number 1e6 means 1,000,000, , six zeros following 1. 350,000 ︎✘ number 1e6 means 1,000,000, , six zeros following 1. 400,000 ︎✘ number 1e6 means 1,000,000, , six zeros following 1. 3,000,000 ︎✘ Mid July tick mark mark labelled Jul. 3,500,000 Right! 4,000,000 ︎✘ Mid July tick mark mark labelled Jul. ’re going something make graph informative. (least, informative understand logarithms exponentials!)’s graphic , taking logarithm number cases (, confirmed) number deaths. Since ’re taking logarithm y-variable, called “semi-log” plot.beginning March US, thought US cases people travelling US hot spots China Italy US, opposed contagion people within US. (contagion called “community spread.”) let’s focus data start March onward.Exponential growth appears straight-line pattern semi-log plot. Obviously, overall pattern curves straight line. explanation exponential growth rate changes time, perhaps due public health measures (like business closing, masks, etc.)first (official) US death Covid-19 recorded recorded Feb. 29, 2020. Five deaths occurred two days later, bringing cumulative number 6.Question B red data points Feb 29/March 1 show zero vertical scale. red data point March 2 around 2 vertical scale. consistent facts stated ?. data contradict facts. ︎✘ Think means 0 vertical scale. Yes. vertical scale log units, 0 corresponds 1 death, since \\(\\ln 1 = 0\\). Right-oh! . vertical scale doesn’t mean anything. ︎✘ can see plotting command quantity vertical axis : log(confirmed) blue dots log(deaths) red. One purposes making semi-log plot enable compare large numbers small numbers graph. instance, semi-log plot, can easily see first death occurred, fact invisible plot raw counts (first plot exercise).Another feature semi-log plots preserve proportionality. Look plot raw counts note curve number deaths much shallower curve number (confirmed) cases. Yet semi-log plot, two curves practically parallel.semi-log plot, arithmetic difference two curves tells proportion curves. parallel curves mean proportion practically constant.\nCalculate proportion deaths cases month May. ’s mathematical hint: \\(\\ln \\frac{}{b} == \\ln - \\ln b\\). interested \\(\\frac{}{b}\\).Question C proportion deaths cases month May?0.2% ︎✘ Remember, ’s natural logarithm ’s plotted, inverse function exp(). 1% ︎✘ correspond (vertical) difference curves 4.6 log units. really big? 2% ︎✘ correspond (vertical) difference curves 4 log units. really big? 6% Right! Good. calculated exp(log(deaths) - log(cases)) gives answer around 0.06, 6%. 25% ︎✘ ’m really sure lead answer. ’re making mistake didn’t anticipate. 50% ︎✘ ’s true May log(deaths) 12, log(cases) 14, 12/14 indeed greater 50%. , log scale, proportion relates difference logs, ratio. many applications, people use semi-log plots see whether pattern exponential compare small large numbers. Often, people find easier vertical scale written original units rather log units. accomplish , vertical scale can ruled raw units spaced logarithmically, like :labels vertical axis show raw numbers, position shows logarithm numbers.next question meaning interval grid lines vertical axis. Note horizontal axis, spacing adjacent grid lines half month.Question D numerical spacing (terms raw counts) adjacent grid lines vertical axis? (Note: Two numbers different “factor 10” one number 10 times .\" Similarly, “factor 100” means one number 100 times .\\(10^1\\) ︎✘ true, moving lowest label (1e+01, , 10) next grid line 20, 30, 40. \\(10^2\\) ︎✘ true, moving lowest label (1e+01) next grid line 110, 210, 310. factor 10. Correct. Right. Every time move one grid line, raw number increases ten-fold, 10, 100, 1000, 10,000, . phrase factor 10 means multiply 10, add 10. factor 100. ︎✘ ’re thinking along right lines, difference every second grid line, adjacent grid lines. ","code":"\nlog10(1390) - log10(1)## [1] 3.143015\ngf_point(confirmed ~ date, data = Covid_US, color = \"blue\") %>%\n  gf_point(deaths ~ date, color = \"red\")\ngf_point(log(confirmed) ~ date, data = Covid_US, color = \"dodgerblue\") %>%\n  gf_point(log(deaths) ~ date, color = \"orange3\") \ngf_point(confirmed ~ date, data = Covid_US, color = \"dodgerblue\") %>%\n  gf_point(deaths ~ date, color = \"orange3\") %>%\n  gf_refine(scale_y_log10())## Warning: Transformation introduced infinite values in continuous y-axis\n\n## Warning: Transformation introduced infinite values in continuous y-axis"},{"path":"magnitudes.html","id":"composing-ln","chapter":"15 Magnitudes","heading":"15.4 Composing \\(\\ln()\\)","text":"logarithm inverse exponential function. words, \\[\\ln(e^x) = x\\ \\ \\text{}\\ \\ e^{\\ln(x)} = x\\]Think terms kinds quantities input output function. 1630Logarithm: input quantity, output magnitude quantity.Exponential: input magnitude, output quantity magnitude.Question True false: \\(2^x\\) power-law function.    TRUE ︎✘ power-law function, input base. \\(2^x\\), input exponent. ’s exponential function.        FALSE Good. Question B True false: \\(3/x^2\\) power-law function.    TRUE Excellent!        FALSE ︎✘ \\(3 x^{-2}\\). can see \\(x\\) base, power-law function. Question C True false: \\(5\\sqrt{x}\\) power-law function.    TRUE Right!        FALSE ︎✘ \\(5 x^{1/2}\\). input \\(x\\) base, power-law function. Question D gravitational force, F, two bodies inversely proportional square distance \\(d\\) . …Inversely proportional square \\(d^{-2}\\) ︎✘ \\(F = kd^{-2}\\) Right-oh! square-root relationship. ︎✘ inversely proportional square root. ︎✘ ","code":""},{"path":"magnitudes.html","id":"magnitude-graphics","chapter":"15 Magnitudes","heading":"15.5 Magnitude graphics","text":"order display variable data varies multiple orders magnitude, helps plot logarithm rather variable . Let’s illustrate using Engine data frame, contains measurements many different internal combustion engines widely varying size. instance, can graph engine RPM (revolutions per second) versus enging mass, Figure 15.1.\nFigure 15.1: Engine RPM versus mass 39 different enginges plotted standard linear axis.\ngraph, engines mass … zero. least ’s appears . horizontal scale dominated two huge 100,000 pound monster engines plotted right end graph.Plotting logarithm engine mass spreads things , Figure @ref(fig:rpm-mass-log}.\nFigure 15.2: Engine RPM versus mass semi-log axes.\nNote horizontal axis labelled actual mass (pounds), labels evenly spaced terms logarithm. presentation, horizontal axis constructed way, called semi-log plot.axes labeled way, log-log plot, shown Figure @ref(fig:rpm-mass-log-log}\nFigure 15.3: Engine RPM versus mass log-log axes.\nSemi-log log-log axes widely used science economics, whenever data spanning several orders magnitude need displayed. case engine RPM mass, log-log axis shows graphically simple relationship variables. axes useful displaying data, can hard newcomer read quantitatively. example, calculating slope evident straight-line relationship Figure 15.3 extremely difficult human reader requires translating labels logarithms.Robert Boyle (1627-1691) founder modern chemistry scientific method general. chemistry student already knows, Boyle sought understand properties gasses. results summarized Boyle’s Law.data frame Boyle contains two variables one Boyle’s experiments reported lab notebook: pressure bag air volume bag. units pressure mmHg units volume cubic inches.19Famously, Boyle’s Law states , constant temperature, pressure constant mass gas inversely proportional volume occupied gas. Figure 15.4 shows cartoon relationship.\nFigure 15.4: cartoon illustrating Boyle’s Law. Source: NASA Glenn Research Center\nFigure 15.5 plots Boyle’s actual experimental data. \nFigure 15.5: plot Boyle’s pressure vs volume data linear axes. straight line model poor representation pattern seen data.\ncan see clear relationship pressure volume, ’s hardly linear relationship.Plotting Boyle’s data log-log axes reveals , terms logarithm pressure logarithm volume, relationship linear.\nFigure 15.6: Plotting logarithm pressure logarithm volume reveals straight-line relationship.\nFigure 15.6 shows Boyle’s log-pressure log-volume data straight-line function. words:\\[\\ln(\\text{Pressure}) = + b \\ln(\\text{Volume})\\]can find slope \\(b\\) intercept \\(\\) graph. now, want point consequences straight-line relationship logarithms.Exponentiating sides gives\n\\[e^{\\ln(\\text{Pressure})} = \\text{Pressure} = e^{+ b \\ln(\\text{Volume})} = e^\\  \\left[e^{ \\ln(\\text{Volume})}\\right]^b = e^\\, \\text{Volume}^b\\] , simply (writing number \\(e^\\) \\(\\))\\[\\text{Pressure} = \\,  \\text{Volume}^b\\]\npower-law relationship!Open SANDBOX make following log-log plot horsepower (BHP) versus displacement internal combustion engines listed Engines data frame.plot, ’ll see vertical axis labels 1, 10, 100, 1000, 10000. numbers hardly spaced evenly plotted linear scale, log scale evenly spaced. Since factor ten consecutive labels, interval labels called decade. horizontal axis, labels 10, 1000, 100,000, 10,000,000. intervals spans factor one hundred. instance, 1000 one-hundred times 10, 100,000 one-hundred times 1000, . interval size 100 said span two decades, 20 years factor 100.Based log-log plot, answer questions.Question many engines displacement 1 liter less?    none ︎✘ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ︎✘ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 Good. Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ︎✘ true cut-10 liters. ’s .        randomAnswerOrder ︎✘ FALSE Question B Using log-log plot, many decades BHP spanned data?Open sandbox carry calculations Boyle’s data. see data frame organized, use head(Boyle) names(Boyle) commands.scaffolding contains command plotting Boyle’s data. also includes command, gf_lm() add graph best straight-line model plotted points. Recall # symbol turns follows line comment, ignored R. removing # selectively can turn display log axes.Question sandbox, plot pressure versus volume using linear, semi-log, log-log axes. Based plot, straight-line function drawn, good model relationship pressure volume?Recall Robert Boyle’s data pressure volume fixed mass gas held constant pressure. Section 15.5 text saw graphical analysis enabled identify Boyle’s Law power-law relationship pressure volume: \\[P(V) = V^n\\] log-log axes, power-law relationship shows straight-line graphically.Taking logarithms translates relationship straight-line function:\\[\\text{lnP(lnV)} = \\ln() + n\\,  \\ln(V)\\]\nfind parameter \\(n\\), can fit model data. R command job:Open SANDBOX run model-fitting command. , interpret parameters.Question slope produced fitModel() fitting power law model?Roughly -1 ︎✘ must precise person! Almost exactly -1 Excellent! -1.5 ︎✘ ’m sure arrived answer. Slope \\(> 0\\) ︎✘ able see graph made part (1) slope negative. According appropriate model found () (B), interpret function found relating pressure volume.Question B volume becomes large, happens pressure?Pressure becomes small. Right! Pressure stays constant ︎✘ can see graph part () pressure change volume. Pressure also becomes large. ︎✘ can see graph part () pressure goes volume goes . None ︎✘ Return use fitModel() find slope straight-line fit appropriately log-transformed model. carried log transformation, used -called “natural logarithm” expressions like log(pressure). Alternatively, used log base-10 log base-2, expressions like log(pressure, base = 10) log(volume, base = 2). Whichever use, use base logarithmic transformations finding straight-line parameters.Question C (D) slope straight line found fitModel() depend base used?    Right-oh!        Yes ︎✘ use base logarithms fitModel() expression?        ’s way tell. ︎✘ Yes, . Try using fitModel() different bases log. Question D (E) intercept straight line found fitModel() depend base used?plot power output (BHP) versus displacement (cc) 39 internal combustion engines.Question study partner claims smallest engine data displacement 2000 cc (, 2.0 liters) 100 horsepower. Based graph, claim plausible?Yes, 2000 cc 100 hp look like (0, 0) scale graph. Right-oh! Yes, size engine typical small car. ︎✘ may , certainly ’ve encountered lawn mower engines much smaller. , smallest engine close 0 cc. ︎✘ able distinguish visually engine 1 cc engine 1000cc graph? values lie horizontal pixel graph. , study partner always wrong. ︎✘ may, ’re looking principled answer, ad hominem one. Semi-log scalesThe next command make graph engine data , log scale horizontal axis. vertical axis still linear.Question B Using just graph, answer question: engines range many decades displacement? (Remember, decade factor 10.)7 decades Correct. Can’t tell ︎✘ Yes, can. Figure one decade corresponds terms distance log axes. \\(10^7\\) decades ︎✘ estimated volume entire universe \\(4 \\times 10^{86}\\) cc. volume neutron \\(6 \\times 10^{-81}\\) cc. range neutron universe therefore \\(86 - -81 = 167\\) decades. think likely internal combustion engine smaller neutron larger universe? 3.5 decades ︎✘ Perhaps ’re treating distance axis labels one decade. Look carefully see ’s actually factor 100, , two decades. Log-log scalesIn order make graph log-log scales, refine graph scale_y_log10() scale_x_log10(), following …Based log-log plot, answer questions.Question C many engines displacement 1 liter less?    none ︎✘ Perhaps recognized left-tick mark corresponds value 1, data points 1 smaller. one liter corresponds 1000 cc.        7 ︎✘ number engines displacement 10 cc smaller. one liter corresponds 1000 cc.        14 Right! Right. ’s \\(10^3\\) tick marks 1 liter, since 1 liter 1000 cc.        25 ︎✘ true cut-10 liters. ’s .        randomAnswerOrder ︎✘ FALSE Question D Using log-log plot, many decades BHP spanned data?    4 ︎✘ bad answer, best one either. Notice smallest engine half decade 1 BPM, largest half decade 10,000 BPH        5 Correct.        100 ︎✘ number \\(10^{100}\\) called googol roughly many particles (including photons, neutrinos, etc.) universe. Imagine, quite contrary fact, 1 BHP generated burning one molecule fuel per second. many fuel molecules particles universe burned second power engine high end span 100 decades. ","code":"\ngf_point(RPM ~ mass, data = Engines)\ngf_point(RPM ~ mass, data = Engines) %>%\n  gf_refine(scale_x_log10())\ngf_point(RPM ~ mass, data = Engines) %>%\n  gf_refine(\n    scale_x_log10(),\n    scale_y_log10()\n    )\ngf_point(pressure ~ volume, data = Boyle) %>%\n  gf_lm()\ngf_point(log(pressure) ~ log(volume), data = Boyle) %>%\n  gf_lm()\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())\ngf_point(pressure ~ volume, data = Boyle) %>%\n  gf_refine(\n     # scale_x_log10(),\n     # scale_y_log10()\n  ) %>%\n  gf_lm()\nfitModel(log(pressure) ~ a + n*log(volume), data = Boyle) %>%\n  coefficients()\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_lims(y  = c(0, 30000))\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10())\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_x_log10(), scale_y_log10())"},{"path":"magnitudes.html","id":"reading-log-axes","chapter":"15 Magnitudes","heading":"15.6 Reading logarithmic scales","text":"Plotting logarithm quantity gives visual display magnitude quantity labels axis magnitude. useful graphical technique label axis original quantity, letting position axis show magnitude. 1640To illustrate, Figure 15.7(left) log-log graph horsepower versus displacement internal combustion engines reported Engines data frame. points admirably evenly spaced, hard translate scales physical quantity. right panel Figure 15.7 shows exactly data points, now scales labeled using original quantity.\nFigure 15.7: Horsepower versus displacement Engines data.frame plotted log-log scales.\ntick marks vertical axis left pane labeled 0, 2.5, 5.0, 7.5, 10. doesn’t refer horsepower , logarithm horsepower. right pane tick labels horsepower positions marked 1, 10, 100, 1000, 10000.even splits 0-100 scale appropriate logarithmic scales. One reason 0 logarithmic scale first place since \\(\\log(0) = -\\infty\\).Another reason 1, 3, 10 pretty close even split logarithmic scale running 1 10. ’s something like :’s nice labels show round numbers. ’s also nice evenly spaced along axis. 1-2-3-5-10 convention good compromise; almost evenly separated space yet showing simple round numbers.Question Consider axis scales shown . kind scale horizontal axis?linear Right-oh! can see given length along axis corresponds arithmetic difference regardless axis. distance 0 50 exactly difference 50 100, distance 150 200. logarithmic ︎✘ clue axis logarithmic zero marked. log zero \\(-\\infty\\), can’t appear actual graph. Another key whether scale shows doubling behavior. distance 50 100 represents one doubling: 100 twice 50. scale logarithmic, moving forward distance 100 bring 200. ’s happens . semi-logarithmic ︎✘ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ︎✘ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question B kind scale vertical axis?linear ︎✘ Measure distance 30 50. scale linear, moving distance 50 bring 70, moving distance bring 90. can see instead reaching 90, ’d reach something greater 100 scale. scale linear. logarithmic Correct. semi-logarithmic ︎✘ “Semi-logarithmic” single axis two axes: horizontal vertical. means one axis linear logarithmic. log-log ︎✘ “Log-log” single axis two axes. means horizontal vertical axes logarithmic. Question C Given answers previous two questions, kind plot made frame displayed top question?data frame SSA_2007 comes [US Social Security Administration(https://www.ssa.gov/oact/STATS/table4c6.html) contains mortality US function age sex. (“Mortality” refers probability dying next year.)Open sandbox copy following scaffolding see organization data.understand data organization, delete old scaffolding insert :\n::: {.scaffolding}slight mistake way command written,\nerror message generated. figure ’s wrong, read error message, check variable names, successfully make plot.\n:::Question ) mistake plotting command code box?Variable names didn’t match ones data. Excellent! tilde argument color = ~ sex ︎✘ color = argument right. value used, ~ sex, one-sided formula used things like color, shape, transparency, …. data frame name spelled wrong. ︎✘ . function gf_point(). ︎✘ . gf_point() one commonly used plotting functions Essay question tmp-5: B) ’s obvious (simple) message plot?Now going use semi-log log-log scales look mortality data . , use gf_refine() function.Fill __and_so_on__ details correctly run command sandbox.written, vertical horizontal axes log scales. may want end.Arrange plotting command make semi-log plot mortality versus age. Interpret plot answer following questions. Note labels along vertical axis often called “decade labels.”Question B level mortality year 0 life much greater year 1 ?twice large. ︎✘ C) Hint: much change successive labels y axis? five times large ︎✘ C) Hint: much change successive labels y axis? 10 times large Right! 100 times large ︎✘ C) Hint: much change successive labels y axis? Question C D) Near age 20, mortality males much compared females?Less twice large. ︎✘ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). bit three times large Correct. 8 times large ︎✘ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). 12 times large ︎✘ Hint: Due nature logs, difference half decade corresponds change \\(\\sqrt{10}\\). Question D E) ages 40 80, mortality change age?stays . ︎✘ curve sloping , isn’t ? increases straight line. ︎✘ fair say logarithm mortality. straight line log mortality means mortality increasing exponentially. increases exponentially. Excellent! increases, decreases, increases . ︎✘ Interesting say function clearly monotonically increasing age 30. Remake plot mortality vs age , time put log-log axes. sign power-law relationship shows straight line log-log axes.Question E F) ages 40 80 increase mortality better modeled exponential power-law process?Power-law ︎✘ ’s hard find straight line log-log plot. Exponential Right! Right. graph much closer straight line semi-log scales log-log scales. reason prefer one . ︎✘ One much closer straight line . \n","code":"\ngf_point(log(BHP) ~ log(displacement), data = Engines)\ngf_point(BHP ~ displacement, data = Engines) %>%\n  gf_refine(scale_y_log10(), scale_x_log10()) 1              2            3          5            10     x\n|----------------------------------------------------|\n0               1/3         1/2        7/10          1     log(x)\ndata(SSA_2007)\nSSA_2007\ndata(SSA_2007)\ngf_point(mortality ~ age, color = ~ sex, data = SSA_2007)gf_point( __and_so_on__) %>%\n  gf_refine(\n    scale_y_log10(),\n    scale_x_log10()\n  )"},{"path":"magnitudes.html","id":"fractional-digits","chapter":"15 Magnitudes","heading":"15.7 Fractional digits (optional)","text":"far, digit() function tabular form: 1650Here’s point-plot presentation table:\nFigure 15.8: Connecting data points digit function make continuous function.\n’ve imagined digits() continuous function ’ve connected gaps straight line. Now function output input 0.01 1,000,000, instance, 500,000.angles consecutive line segments give function plotted Figure 15.8 unnatural look. Still, continuous function output input even input listed table.Starting around 1600, two (now famous) mathematicians, John Napier (1550-1617) Henry Briggs (1561-1630) idea filling gaps table. saw pattern numbers \\(\\) \\(b\\) input column table\n\\[ \\text{digit}(\\times b) = \\text{digit}() + \\text{digit}(b)\\]\ntrue even \\(=b\\). instance, digit(10)=1 digit(10\\(\\times\\) 10) = 2.Consider question digit(316.2278)? seems odd question unless realize \\(316.2278 \\times 316.2278 = 100,000\\). Since digit(100000) = 5, must digit(316.2278) = 5/2.Another question: digit(17.7828)? seems crazy, notice \\(17.7828^2 = 316.2278\\). digit(17.78279) = 5/4.happens couple thousand years mathematicians known compute square root number high precision. taking square roots dividing two, ’s easy fill rows digit()-function table. get even rows noticing simple patterns like \\[\\text{digit}(/10) = \\text{digit}() -1  \\ \\ \\\\ \\ \\ \\text{digit}(10 ) = \\text{digit}() + 1\\]additional rows tableYou can play game weeks. asked computer play game half second expanded original digit() table 7975 rows.Figure ?? plots expanded digits() function table.Henry Briggs assistants similar calculation hand. work published 1617 table.\nFigure 15.9: Part first page Henry Briggs table logarithms\ntable called Chilias prima, Latin “First group one thousand.” True name, table gives output digits() inputs 1, 2, 3, …, 998, 999, 1000. instance, can see top row right-column, digits(67) = 1.82607480270082.everyday speech, 67 two digits. authors Chilias prima sensibly didn’t use name “digit()” function. chose something abstract: “logarithm().” Nowadays, function named \\(\\log_{10}()\\). R, function called log10(). 1660Our main use \\(\\log_{10}()\\)/log10() count digits order quickly compare magnitude numbers. difference digits(\\(x\\)) - digits(\\(y\\)) tells many factors 10 separate magnitude \\(x\\) \\(y\\).Another important logarithmic/digit-counting function \\(\\log_2()\\), written log2() R. counts many *binary digits number. us, \\(\\log_2(x)\\) tells many times need double, starting 1, order reach \\(x\\). instance, \\(\\log_2(67) = 6.06609\\), indicates \\(67 = 2\\times 2 \\times 2 \\times 2 \\times 2 \\times 2 \\times 2^{0.06609}\\)\\(\\log_2(x)\\) \\(\\log_{10}(x)\\) proportional one another. One way think count “digits” report results different units, much might report temperature either Celsius Fahrenheit. \\(\\log_2(x)\\) units output bits. \\(\\log_{10}(x)\\) output decades.third version logarithm function called natural logarithm denoted \\(\\ln()\\) math notation simply log() R. ’ll need additional calculus concepts can understand justifies calling \\(\\ln()\\) “natural.”","code":"\nlog10(67)## [1] 1.826075"},{"path":"dimensions.html","id":"dimensions","chapter":"16 Dimensions","heading":"16 Dimensions","text":"Next time ’re family gathering 10-year old cousin, give following math quiz. 1700What’s 3 + 2?’s 7 - 3?’s 3 miles + 2 miles?’s 3 miles + 2 kilometers?’s 3 miles + 2 kilograms?don’t know cousin, suspect easy time answering (1) (2) correctly. (3), might give correct answer, “5 miles,” just say “5.” , ’ll follow “5 ?” point ’ll definitely say “miles.”bit harder. might need prompt information 1 kilometer 0.6 miles. , ’s pretty smart, ’ll answer “4.2 miles.”10-year olds pretty creative, ’m sure ’ll answer (5). ask Ph.D. aunt, ’ll answer along lines “silly question,” “’s thing.” ’s true.Consider everyday quantities:60 miles per hour: typical speed driving highway2106 square feet: -bounds area court used singles tennis.375 cubic centimeters: volume canned beverage (US).2.5 gallons per minute: US mandated maximum flow rate water shower head.35 miles per gallon: typical fuel economy small car US.body mass index: measure mass divide square height.Consider measure things:ordinarily use speedometer measure instantaneous car speed police use radar gun. fundamentally, measure distance traveled time used divide distance time.people rely internet information, check local court measuring width (27 feet standard) length course (78). Multiply two.Pour beverage measuring cup read volume. fundamentally, measure circumference can (\\(2 \\pi r\\)), square (\\(4 \\pi^2 r^2\\)) divide \\(4 \\pi\\) get cross section area can. multiply height can.don’t usually monitor water use shower. need , get 5-gallon pail (standard volume plastic pails used many purposes construction), put shower head, measure time takes fill pail. Divide volume time.Record mileage car’s odometer fill car gas. Drive. next get gas, measure new odometer reading volume gas purchased. Divide change odometer reading gas volume. (Europe, divide gas volume change odometer reading.)Weigh . scale usually graduated pounds kilograms: take choice. Measure height; ruler---doorway method works well. divide weight square height.Evidently, makes sense multiply divide different types quantities: feet, gallons, kilometers, kilograms, pounds, hours, …. won’t ever see quantity constructed adding subtracting miles hours gallons square feet. can square feet cube centimeters, can take square root gallon? make sense raise 2 power 3 yards? 1710This section mathematical structure combining quantities; kinds mathematical operations legitimate .","code":""},{"path":"dimensions.html","id":"mathematics-of-quantity","chapter":"16 Dimensions","heading":"16.1 Mathematics of quantity","text":"[Fun-10a] Know definition fundamental dimension notation common ones (definition page 241-242)[Fun-10b] Understand derived dimensions formed fundamental dimensions (definition page 241-242)[Fun-10c] Know units ways measuring dimensions derived dimensions.first step understanding mathematics quantity make absolute distinction two concepts , everyday life, used interchangeably: dimension unit.Length dimension. Meters unit length. also measure length microns, mm, cm, inches, feet, yards, kilometers, miles, say nothing furlongs, fathoms, astronomical units (AU), parsecs.Time dimension. Seconds unit time. also measure time micro-seconds, milli-seconds, minutes, hours, days, weeks, months, years, decades, centuries, millenia.Mass dimension. Kilograms unit mass.Length, time, mass called fundamental dimensions. length important area volume. ’s can construct area volume multiplying lengths together. evident consider units area like square-inches cubic centimeters, obscured names units like acre, liter, gallon.’ll use notation L, T, M refer fundamental dimensions. (Electrical charge Q also fundamental dimension, won’t much use examples.)","code":""},{"path":"dimensions.html","id":"compound-dimensions","chapter":"16 Dimensions","heading":"16.2 Compound dimensions","text":"dimensions: volume, force, pressure, energy, torque, velocity, acceleration, . called compound dimensions represent combinations fundamental dimensions, L, T, M. notation combinations involves multiplication division. instance:Volume L \\(\\times\\) L \\(\\times\\) L \\(=\\) L\\(^3\\), “cubic centimeters”Velocity L/T, “miles per hour”Force M L/T\\(^2\\), obscure unless remember Newton’s Second Law \\(\\text{F} = \\text{m}\\,\\text{}\\): “force equals mass times acceleration.” terms dimension, mass M, acceleration L/T\\(^2\\). Multiply two together get dimension “force.”Multiplication division used construct compound dimension fundamental dimensions L, T, M.Addition subtraction never used form compound dimension.Much work understanding dimensions involves overcoming looseness everyday speech. Remember weight scale graduated pounds kilograms. unit kilograms way measuring M, unit pounds way measuring force: M L/T\\(^2\\).Weight mass. makes sense people doesn’t really matter everyday life. ’s venture surface Earth difference shows . person orbit “weightless” person continues mass. weight woman Mars different weight Earth martian mass exactly earthly mass. 1720Another source confusion carried everyday life sometimes measure quantity using different dimensions. can measure volume weighing water; gallon water weighs 8 pounds, liter water mass 1 kg. Serious bakers measure flour weight; casual baker uses measuring cup. can measure water volume length water (--less) constant mass density. 8 pounds gasoline considerably gallon. turns density flour varies substantially depending ’s packed, humidity, etc. matters whether weigh flour baking measure volume. can measure time swing pendulum. measure time successfully different pendula need length, mass.unit conventional amount quantity given dimension. lengths dimensionally, can measured different conventions: inches, hards, meters, … Units dimension can converted unambiguously one . meter exactly quantity length 39.3701 inches, mile length 1609.34 meters. Liters gallons units volume (L\\(^3\\)): gallon 3.78541 liters.hear said kilogram 2.2 pounds. ’s strictly true. kilogram dimension M pound dimension ML/T\\(^2\\). Quantities different dimensions “equal” even legitimately compared one another. Unless bring something else game physically changes situation, instance gravity (dimension acceleration due gravity (dimension \\(\\text{L}/\\text{T}^2\\)). weight kilogram surface Earth 2.2 pounds gravitational acceleration (almost) everywhere surface Earth.’s also potentially confusing sometimes different dimensions used get idea. instance, car gets 35 miles / gallon US (dimension \\(\\text{L}/\\text{L}^3 = 1/\\text{L}^2\\)) use 6.7 liters per 100 kilometers (\\(\\text{L}^3 / L = \\text{L}^2\\)) Europe. car. fuel. Different conventions using different dimensions. 1730Keeping track various compound dimensions can tricky. many people, ’s easier keep track physical relationships involved use knowledge put together dimensions appropriately. Often, relationship can described using specific calculus operations, knowing dimensions units helps use calculus successfully.’ll use specific bracket notation translate words concept dimension. instance, [length] = L, [mass] = M, [time] = T, [inches] = L, …Easy compound dimensions likely already know:[Area] \\(= \\text{L}^2\\). corresponding units remind : “square feet,” “square miles,” “square centimeters.”[Volume] \\(= \\text{L}^3\\). Units remind : “cubic centimeters,” “cubic feet,” “cubic yards.” (landscapers informally call “yard,” instance “10 yards topsoil” properly called “10 cubic-yards topsoil.”)[Velocity] \\(= \\text{L}/\\text{T}\\). Units: “miles per hour,” “inches per second.”[Momentum] \\(= \\text{M}\\text{L}/\\text{T}\\). Units: “kilogram meters per second.”Anticipating return section reference, ’ve also added dimensions can understood relevant calculus operations.[Acceleration] \\(= \\text{L}/\\text{T}^2\\). Units: “meters per second squared,” calculus, acceleration derivative velocity respect time, , equivalently, 2nd derivative position respect time.[Force] \\(= \\text{M}\\, \\text{L}/\\text{T}^2\\) calculus: force derivative momentum respect time.[Energy] [Work] \\(= \\text{M}\\, \\text{L}^2/\\text{T}^2\\) calculus, energy integral force respect length.[Power] $= , 2/3 $ calculus, power derivative energy respect time.Density sounds like specific concept, many different kinds densities. common ratio physical amount geometric extent: 1740a physical amount: might mass, charge, people, etc.geometric extent: might length, area, volume.examples:“paper weight” mass per area, typically grams-per-square-meter“charge density” amount electrical charge, usually per area volume“lineal density red blood cells” number cells capillary divided length capillary. (Capillaries narrow. Red blood cells go one .)“population density” people per area ground.theory dimensions units developed physical sciences. Consequently fundamental dimensions physics: length, mass, time, electrical current, luminous intensity.Since proper use units important even outside physical sciences, ’s helpful recognize several kinds quantity dimensions.“people”/“passengers”/“customers”/“patients”/“children”/“students”/“professors” — different dimensions really units: fixed translation units.\n“money”: Units dollars (many varieties: US, Canadian, Australian, New Zealand), euros, yuan (synonym: renminbi), yen, pounds (many varieties: UK, Egypt, Syria, Lebanon, Sudan South Sudan), pesos (many varieties), dinar, franc (Swiss, CFA), rand, riyal, rupee, won, many others. Conversion rates depend situation national policy.Examples: Passenger-miles standard unit transport. Passenger-miles-per-dollar appropriate unit economic efficiency transport. Passenger-deaths per million passenger-mile one way describe risk transport.","code":""},{"path":"dimensions.html","id":"arithmetic-with-dimensions","chapter":"16 Dimensions","heading":"16.3 Arithmetic with dimensions","text":"Recall rules arithmetic dimensioned quantities. restate briefly square-bracket notation “dimension .” instance, “dimension \\(b\\)” written \\([b]\\). also write \\([1]\\) stand dimension pure number, , quantity without dimension.","code":""},{"path":"dimensions.html","id":"pendulum-dimensions","chapter":"16 Dimensions","heading":"16.4 Example: Dimensional analysis","text":"want relate period (T) pendulum ’s length mass. Acceleration due gravity also plays role; dimension \\(\\text{L}\\cdot \\text{T}^{-2}\\). simplicity, ’ll assume bob end pendulum cable rod mass. 1750The analysis strategy combine four quantities think play role one total quantity dimensionless. Since dimensionless, can constant regardless mass, length, period, gravity individual situation.\\[\\mbox{[Period]}^\\cdot \\mbox{[Mass]}^b \\cdot \\mbox{[Length]}^c \\cdot \\mbox{[Gravity]}^d = T^\\cdot M^b \\cdot L^c \\cdot L^d \\cdot T^{-2d} = [1]\\]\ndimensionless:\\(c = -d\\), cancel L\\(= 2d\\), cancel T\\(b=0\\), ’s mass term, need cancel MAll exponents can put terms \\(d\\). doesn’t tell us \\(d\\) , whatever value \\(d\\) decide choose, get ratio ’s equivalent :\\[ \\frac{\\mbox{Gravity}\\cdot \\mbox{Period}^2}{\\mbox{Length}} \\equiv B\\]\n\\(B\\) size dimensionless quantity [1]. Consequently\\[\\text{Period} = B \\sqrt{\\frac{\\mbox{Length}}{\\mbox{Gravity}} }\\]\ncan experimentally determine numerical value dimensionless constant \\(c\\) measuring period length pendulum (Earth) recognizing gravitational acceleration Earth’s surface 9.8 meters-per-second-squared. experiment mathematical models using differential equations give \\(B = (2\\pi)^2\\).Test via experimentString knotted 4 equal segments (1 foot ) bolt endo-------o-------o-------o-------BoltHang string first knot: length L=4\nTime 10 oscillations record result\nTime 10 oscillations record resultHang string second knot: length L=3\nTime 10 oscillations record result\n… \nTime 10 oscillations record result\n… onCalculate dimensionless quantity \\(B\\) case. approximately roughly \\(B = (2 \\pi)^2\\).designing pendulum planned joint NASA/ESA mission Mars. orbital period radius Mars, mass known. mass observed diameter planet, gravitational acceleration surface calculated 3.721 m/s\\(^2\\). According Section 16.4, period \\(\\text{Period} = 2 \\pi \\sqrt{\\frac{\\text{Gravity}}{\\text{Length}}}\\).length pendulum 3 feet.Question period pendulum eventually gets Mars? (Hint: Don’t make mistake engineers working Mars Polar Lander forget resolve different units length presented problem.)1.3 seconds ︎✘ 1.9 seconds ︎✘ 3.1 seconds Right! 9.1 seconds ︎✘ Question B period pendulum Earth?1.3 seconds ︎✘ 1.9 seconds Right! 3.1 seconds ︎✘ 9.1 seconds ︎✘ \n","code":""},{"path":"dimensions.html","id":"conversion-flavors-of-1","chapter":"16 Dimensions","heading":"16.5 Conversion: Flavors of 1","text":"Numbers dimensionless necessarily unitless. Failure accept distinction one prime reasons people trouble figuring convert one unit another. 17601 favorite elementary school students multiplication division tables completely simple. Anything times one, anything divided one, simply thing. Addition subtraction pretty simple, , ’s concern .comes quantities, ’s just one one many. often look nothing like numeral 1. examples 1 quantity:\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(\\frac{180}{\\pi} \\frac{\\text{degrees}}{\\text{radians}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(0.621371 \\frac{\\text{mile}}{\\text{kilometer}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(3.78541 \\frac{\\text{liter}}{\\text{gallon}}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{9}{5} \\frac{^\\circ F}{^\\circ C}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)\\(\\frac{1}{12} \\frac{\\text{dozen}}{\\text{item}}\\)like call others different flavors one.every one examples, dimension numerator matches dimension denominator. true comparing feet meters ([feet / meter] L/L = [1]), comparing cups pints ([cups / pint] \\(\\text{L}^3/\\text{L}^3 = [1]\\)) comparing miles per hour feet per second ([miles/hour / ft per sec] = L/T / L/T = [1]). quantities units dimension.’s helpful think conversion units matter multiplying appropriate flavor 1. conversion change dimension quantity render new units.Example: Convert 100 feet-per-second miles-per-hour. First, write quantity converted fraction alongside , write desired units conversion. case \\[100 \\frac{\\text{feet}}{\\text{second}} \\ \\ \\ \\text{} \\ \\ \\ \\frac{\\text{miles}}{\\text{hour}}\\]First, ’ll change feet miles. can accomplished multiplying flavor one units miles-per-foot. Second, ’ll change seconds hours. , flavor 1 involved.number give flavor one? One mile 5280 feet, \\[\\frac{1}{5280} \\frac{\\text{miles}}{\\text{foot}}\\] flavor one.Next, need flavor one turn \\(\\frac{1}{\\text{second}}\\) \\(\\frac{\\text{1}}{\\text{hour}}\\). can make use minute 60 seconds, hour 60 minutes.\n\\[\\underbrace{\\frac{60\\  \\text{s}}{\\text{minute}}}_\\text{flavor 1}\\  \\underbrace{\\frac{60\\ \\text{minutes}}{\\text{hour}}}_\\text{flavor 1} = \\underbrace{3600\\frac{\\text{s}}{ \\text{hour}}}_\\text{flavor 1}\\]Multiplying carefully selected flavors one initial quantity, get \\[\n\\underbrace{\\frac{1}{5280} \\frac{\\text{mile}}{\\text{foot}}}_\\text{flavor 1} \\times \\underbrace{3600 \\frac{\\text{s}}{\\text{hour}}}_\\text{flavor 1} \\times \\underbrace{100 \\frac{\\text{feet}}{\\text{s}}}_\\text{original quantity} = 100 \\frac{3600}{5280} \\frac{\\text{miles}}{\\text{hour}} = 68.18 \\frac{\\text{miles}}{\\text{hour}}\\]","code":""},{"path":"dimensions.html","id":"dimensions-and-linear-combinations","chapter":"16 Dimensions","heading":"16.6 Dimensions and linear combinations","text":"Low-order polynomials useful way constructing model functions. instance, suppose want model yield corn field per inch rain growing season, call corn(rain). output units bushels (corn). input units inches (rain). second-order polynomial appropriate reasons discussed Chapter ??. 1770\\[\\text{corn(rain)} \\equiv a_0 + a_1\\, \\text{rain} + \\frac{1}{2} a_2\\, \\text{rain}^2\\]\ncourse, addition linear combination make sense three terms \\(a_0\\), \\(a_1\\,\\text{rain}\\), \\(\\frac{1}{2}\\, a_2\\, \\text{rain}^2/2\\) dimension. clearly \\([\\text{rain}] \\neq [\\text{rain}^2]\\). order things work , scalars must dimension. know output function dimension \\([\\text{volume}] = \\text{L}^3\\). Thus, \\([a_0] = \\text{L}^3\\).\\([a_1]\\) must different, combine \\([\\text{rain}] = \\text{L}\\) produce \\(\\text{L}^3\\). Thus, \\([a_1] = \\text{L}^2\\).Finally, \\([a_2] = \\text{L}\\). Multiplying \\([\\text{rain}]^2\\) give required \\(\\text{L}^3\\)everyday communication well domains construction, geography, navigation, astronomy measure angles degrees. 90 degrees right angle. mathematics, unit angle radians right angle 1.5708 radians. (1.5708 decimal version \\(\\pi/2\\).) conversion function, ’ll call raddeg(), \\[\\mbox{raddeg}(r) \\equiv \\frac{180}{\\pi} r\\] function converts degrees radians, ’ll call degrad() similar: \\[\\mbox{degrad}(d) \\equiv \\frac{\\pi}{180} d\\]\n(Incidentally, \\(\\frac{180}{\\pi} = 57.296\\) \\(\\frac{\\pi}{180} = 0.017453\\).)traditional notation, trigonometric functions \\(\\sin()\\) \\(\\tan()\\) can written argument either degrees radians. instance, \\(\\sin(90^\\circ) = \\sin\\left(\\frac{\\pi}{2}\\right)\\). Similarly, inverse functions like \\(\\arccos()\\) units output specified. works always human intervene written expression eventual computation.R, many computer languages like Python spreadsheet packages, valid expression like sin(90 deg). languages, 90 deg valid expression (although might good valid!). many languages, angles always given radians. consistency admirable, people always consistent. common source computer bugs angles degrees handed functions like \\(\\sin()\\) output \\(\\arccos()\\) (wrongly) interpreted degrees rather radians. 1780Function composition rescue!Consider function given Wikipedia article position sun seen Earth.20\n\\[\\delta_\\odot(n) \\equiv - 23.44^\\circ \\cdot \\cos \\left [ \\frac{360^\\circ}{365\\, \\text{days}} \\cdot \\left ( n + 10 \\right ) \\right ]\\]\n\\(n\\) zero midnight marking New Years increases 1 per day. (\\(n+10\\) units days translates New Years back 10 days, day winter solstice.) \\(\\delta_\\odot()\\) gives declination sun: latitude pieced imagined line connecting centers earth sun.Wikipedia formula well written uses familiar numbers help reader see formula comes . 365 recognizably length year days. \\(360^\\circ\\) angle traversed making full cycle around circle. \\(23.44^\\circ\\) less familiar, student geography might recognize latitude Tropic Cancer, latitude farthest north sun directly overhead noon (day summer solstice).’s world trouble programmer implements formula asFor instance, equinoxes around March 21 (n=81) Sept 21 (n=264). equinox, delination sun zero degrees. let’s plug \\(n=81\\) \\(n=264\\) formula see get.equinoxes aren’t even equal! close zero. mean astronomy wrong?Wikipedia formula programmed way, using 2 \\(\\pi\\) radians instead 360 degrees:deviation one-tenth degree reflects rounding time equinox nearest day.mathematical operation, identify operation valid invalid according rules dimensional arithmetic.Question formula \\[\\frac{8 \\text{m} - 2.5 \\text{km}}{2 \\text{min} - 32 \\text{s}}\\] choose rule () violated.Addition Subtraction rule ︎✘ numerator denominator valid subtractions, dimension L T respectively. Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential ︎✘ ’s exponent . ’s valid. rules violated. Right! Question B formula \\[\\frac{3 \\text{g} \\times 2 \\text{m}}{3 \\text{km}^2}\\] choose rule () violated.Addition Subtraction rule ︎✘ addition subtraction . Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential ︎✘ ’s exponent . ’s valid. rules violated. Correct. Question C formula \\[10^{\\frac{4 \\text{hr}}{3 \\text{g}}}\\] choose rule () violated.Addition Subtraction rule ︎✘ addition formula. Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential Right-oh! exponent 4 ft / 3 g, dimension L / M. Exponents must always dimension [1]. ’s valid. rules violated. ︎✘ Question D formula \\[6^{\\frac{2 \\text{hr}}{3 \\text{min}}}\\]choose rule () violated.Addition Subtraction rule ︎✘ addition subtraction formula. Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential ︎✘ exponent 4 hr/3 min, dimension T/T = [1]. rule satisfied. ’s valid. rules violated. Right-oh! Question E formula \\[5 \\text{g} \\times 3 \\text{kg} - 7 \\text{lbs}\\] choose rule () violated.Addition Subtraction rule Excellent! can’t subtract M M\\(^2\\). (Strictly speaking, lbs dimension force, \\(M L^2 / T^2\\), can’t subtract force M\\(^2\\) either. Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential ︎✘ ’s exponent . ’s valid. rules violated. ︎✘ Question F formula \\[\\sqrt[3]{8 m^3 + 27 \\text{ft}^2}\\] choose rule () violated.Addition Subtraction rule Right! can’t add L\\(^3\\) L\\(^2\\). Multiplication Division rule ︎✘ restrictions multiplication division, formula can hardly violate ! Exponential ︎✘ Maybe ’re thinking cube-root rule violated, since quantity cube root invalid, root doesn’t anything additionally wrong. ’s valid. rules violated. ︎✘ \nQuestion ) dimension \\(t\\) T, , \\([t] = T\\). must dimension \\(k\\) arithmetic operation make sense?    [1] ︎✘ $[kt] = \\(T, violate exponential rule. <\/span>       T\\)^{ -1}$ Excellent! Right, [k] needs cancel [t] exponention valid.        T ︎✘ $[kt] = \\(T\\)^2$, violate exponential rule.        None ︎✘ Question B B) must dimension \\(c\\) arithmetic operation \\(1 + c \\cdot 2^{kt}\\) make sense?[1] Right-oh! Right. ’re going add \\(c \\cdot 2^{kt}\\) 1. Since \\([kt] = [1]\\), \\(c\\) also needs dimensionless. T\\(^{-1}\\) ︎✘ T ︎✘ $[kt] = \\(T^2\\), violate exponential rule. Depends dimension \\(2^{kt}\\) ︎✘ already determined \\([kt] = [1]\\), \\([2^{kt}] = [1]\\). \n\\(\\require{cancel}\\)surface area \\(S\\) mammal reasonably well approximated function \\[S(M) \\equiv k M^{2/3}\\] \\(M\\) body mass (kg) constant \\(k\\) depends particular species consideration.Note \\(M^{2/3}\\) allowed arithmetic operation. \\([M] = \\mbox{mass}\\), mass, like dimension, raised non-integer power. properly, expression written \\[\\left(\\frac{M}{1\\  kg}\\right)^{2/3}\\] division “1 kg” renders dimensionless quantity parentheses: \\[\\left[\\frac{M}{1\\  kg}\\right] = 1\\]\norder render quantity dimensionless unitless, \\(M\\) specified kg. usual practice skip “1 kg” business simply say, “\\(M\\) kg.” see notation frequently career take care use indicated units.’ll need open computing sandbox calculations.Question Consider baby adult. adult’s mass \\(8\\) times greater baby’s. adult’s surface area …?baby’s ︎✘ 1.5 times baby’s ︎✘ 4 times baby’s Right-oh! 8 times baby’s ︎✘ Question B Consider human body mass 70 kg skin surface area 18,600 cm2. following units constant proportionality \\(k\\) correct?cm\\(^2\\) kg\\(^{-2/3}\\) ︎✘ Kilograms fractional power sensible unit. cm\\(^2\\) Right! cm\\(^2\\) kg\\(^{2/3}\\) ︎✘ multiply \\((70 kg/kg)^{2/3}\\) \\(k\\), need get result \\(cm^2\\). kg\\(^{-1}\\) ︎✘ produce \\(cm^2\\) result? Question C units part (B), value \\(k\\) closest ?    1 ︎✘        10 ︎✘        100 ︎✘        1000 Right! numerical value constant \\(k\\) changes depending units want express . value found part (C) works masses stated kg skin areas cm\\(^2\\).Suppose want figure value \\(k'\\) can use formula people used talking skin area square inches mass pounds. units \\(k\\) cm\\(^2\\), want units \\(k'\\) \\(^2\\). part easy: just multiply \\(k\\) two flavors one change units cm inches, like :\\[k' = k\\ \\underbrace{\\frac{\\text{}}{2.6 \\text{cm}}}_\\text{flavor 1}\\  \\underbrace{\\frac{\\text{}}{2.6 \\text{cm}}}_\\text{flavor 1} = \\frac{k}{2.6^2}\\] flavor 1 reflects 1 inch 2.6 cm.whole story. careful dealing \\(\\left(\\frac{M}{1 kg}\\right)^{2/3}\\). Translated pounds, \\(M = 70\\ \\text{kg} = 154\\ \\text{lbs}\\), since, rough--ready way everyday people express , 1 kg \\(\\approx\\) 2.2 lbs.21Plugging \\(M=154\\) lbs makes power-law part formula skin area\n\\[\\left(\\frac{154\\ \\text{lbs}}{1\\ \\text{kg}}\\right)^{2/3}\\]\ncan’t take (pounds)\\(^{2/3}\\) (kg)\\(^{2/3}\\); won’t get sensible unit either case. [pounds/kg] = [1], taking two-thirds power ratio perfectly legitimate.Still, ’s problem. Multiplying \\(k\\ 154^{2/3} (\\text{lbs}/\\text{kg})^{2/3}\\) right dimension, strange-looking units nothing skin area.resolution paradox multiply \\(\\frac{154\\ \\text{lbs}}{1\\  \\text{kg}}\\) appropriate flavor 1 render dimensionless quantity unitless well dimensionless. flavor \\(\\frac{1 \\text{kg}}{2.2 lbs}\\), giving formula skin area square inches\\[S_{}(M)= \\frac{k}{2.6^2}\\left(\\frac{154\\ \\bcancel{\\text{lbs}}}{1\\ \\cancel{\\text{kg}}}\\ \\underbrace{\\frac{1\\ \\cancel{\\text{kg}}}{2.2\\ \\bcancel{\\text{lbs}}}}_\\text{flavor 1}\\right)^{2/3} = \\underbrace{\\frac{k}{2.6^2}\\ \\left(\\frac{1}{2.2}\\right)^{2/3}}_{k'\\ \\text{inches pounds}} 154^{2/3}\\]Question D Optional challenge) Assuming \\(k = 1000 \\text{cm}^2\\) specifying mass kilograms, numerical value \\(k'\\) square-inches used body mass given pounds?    8.7 ︎✘        87 Good.        870 ︎✘        8700 ︎✘        87000 ︎✘ “Energy-maneuverability Theory” (E-M) aircraft performance developed renowned fighter pilot Col John Boyd mathematician Thomas Christie 1960s. theory posits available maneuverability aircraft closely related specific energy \\(E_s\\), , kinetic plus potential energy aircraft divided aircraft weight. highly maneuverable, aircraft must able change ’s specific energy rapidly time. Let’s call ability specific power (, power divided mass), \\(P_s\\). aircraft large \\(P_s\\) maneuverable one small \\(P_s\\).important formula E-M Theory \\[P_s = \\frac{T - D}{W} V\\] \\(T\\) aircraft thrust, \\(D\\) drag, \\(W\\) weight, \\(V\\) velocity. \\((T-D)\\), thrust minus drag, net forward force aircraft.Recall facts dimension physical quantities:Velocity dimension \\(L^1 T^{-1}\\) (e.g. meters per second)Velocity dimension \\(L^1 T^{-1}\\) (e.g. meters per second)Acceleration dimension \\(L^1 T^{-2} =\\) [Velocity] \\(\\times\\  T^{-1}\\) (e.g. meters per second-squared)Acceleration dimension \\(L^1 T^{-2} =\\) [Velocity] \\(\\times\\  T^{-1}\\) (e.g. meters per second-squared)Force dimension \\(M \\times\\ \\) [Acceleration]Force dimension \\(M \\times\\ \\) [Acceleration]Energy dimension [Force] \\(\\times\\  L\\)Energy dimension [Force] \\(\\times\\  L\\)Power dimension [Energy] \\(\\times\\  T^{-1}\\).Power dimension [Energy] \\(\\times\\  T^{-1}\\).Question following correct dimensional formulation power?[Force][Velocity] Excellent! [Energy][Velocity] ︎✘ [Force] / [Velocity] ︎✘ [Energy] / [Velocity] ︎✘ Question B dimension \\(P_s\\) E-M Theory?[Power] \\(\\times\\ M^{-1}\\) Good. words, specific power, , power per mass. [Force] \\(\\times\\) [Acceleration] ︎✘ Just know, dimension rarely, ever, encountered practice. [Force] \\(\\times\\) [Velocity] ︎✘ ’re leaving division \\(W\\) E-M Theory formula. [Power] ︎✘ Newton’s law universal gravitation—also known inverse square law—generally written \\[F = G \\frac{m_1\\ m_2}{r^2} .\\]\n\\(m_1\\) \\(m_2\\) masses two objects (say, Earth Sun). \\(r\\) distance two objects (150,000,000 km). \\(F\\) gravitational force \\(G\\) fixed quantity called “gravitational constant.”course, already know dimension force, mass, distance.Question dimension gravitational constant, \\(G\\)?\\(L^3 M^{-1} T^{-2}\\) Correct. \\(L^2 M^{-2}\\) ︎✘ Remember, \\(G m_1 m_2 / r^2\\) dimensions force. \\(L^2 M^{2} T^{-2}\\) ︎✘ Check signs! $L^2 M^{-2} T^{-2} ︎✘ Question B quantity \\(G\\) \\(6.674 \\times 10^{−11}\\) \\(L\\) meters, \\(M\\) kilograms, \\(T\\) seconds. gravitational force Earth (mass \\(6 \\times 10^{24}\\) kg) Sun (mass \\(2 imes 10^{30}\\) kg) ?\\(3.6 \\times 10^{28}\\) Newtons Correct. \\(3.6 \\times 10^{31}\\) meters ︎✘ \\(3.6 \\times 10^{28}\\) meters per second-squared ︎✘ \\(3.6 \\times 10^{31}\\) meter seconds per kg ︎✘ \n","code":"\ndec_sun <- makeFun(-23.44 * cos((360/365)*(n+10)) ~ n)\ndec_sun(81)## [1] 5.070321\ndec_sun(264)## [1] -23.38324\ndec_sun_right <- makeFun(-23.44 * cos(( 2*pi / 365)*(n+10)) ~ n)\ndec_sun_right(81)## [1] -0.1008749\ndec_sun_right(264)## [1] -0.1008749"}]
